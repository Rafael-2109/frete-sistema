#!/bin/bash
# Script de Recupera√ß√£o de Separa√ß√µes Perdidas
# Reconstr√≥i Separa√ß√µes que foram deletadas incorretamente

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${GREEN}================================================${NC}"
echo -e "${GREEN}üîß RECUPERA√á√ÉO DE SEPARA√á√ïES PERDIDAS${NC}"
echo -e "${GREEN}================================================${NC}"

# Verificar se Python est√° dispon√≠vel
if ! command -v python &> /dev/null; then
    echo -e "${RED}‚ùå Python n√£o encontrado!${NC}"
    exit 1
fi

# Ativar ambiente virtual se existir
if [ -f "venv/bin/activate" ]; then
    echo -e "${YELLOW}üêç Ativando ambiente virtual...${NC}"
    source venv/bin/activate
elif [ -f ".venv/bin/activate" ]; then
    echo -e "${YELLOW}üêç Ativando ambiente virtual...${NC}"
    source .venv/bin/activate
fi

# Criar diret√≥rio de logs se n√£o existir
mkdir -p logs

# Verificar argumentos
if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    echo "Uso: ./recuperar_separacoes.sh [op√ß√µes]"
    echo ""
    echo "Op√ß√µes:"
    echo "  --verificar    Apenas verifica quantos pedidos √≥rf√£os existem"
    echo "  --dry-run      Modo simula√ß√£o (n√£o salva altera√ß√µes)"
    echo "  --pedido ID    Verifica/recupera pedido espec√≠fico"
    echo "  --help         Mostra esta ajuda"
    echo ""
    echo "Exemplos:"
    echo "  ./recuperar_separacoes.sh --verificar        # Conta pedidos √≥rf√£os"
    echo "  ./recuperar_separacoes.sh --dry-run          # Simula recupera√ß√£o"
    echo "  ./recuperar_separacoes.sh                     # Executa recupera√ß√£o"
    echo "  ./recuperar_separacoes.sh --pedido P001      # Verifica pedido espec√≠fico"
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  ATEN√á√ÉO:${NC}"
    echo "Este script reconstr√≥i Separa√ß√µes que foram deletadas mas cujos"
    echo "Pedidos ainda t√™m o separacao_lote_id e NF associada."
    exit 0
fi

# Mensagem de aviso
echo -e "${YELLOW}‚ö†Ô∏è  IMPORTANTE:${NC}"
echo "Este script vai reconstruir Separa√ß√µes perdidas usando dados de NFs."
echo "Situa√ß√£o: Pedido tem separacao_lote_id mas Separacao foi deletada."
echo ""

# Se for verifica√ß√£o
if [ "$1" == "--verificar" ]; then
    echo -e "${BLUE}üîç Verificando pedidos √≥rf√£os...${NC}"
    python executar_recuperacao_separacoes.py --verificar
    exit $?
fi

# Se for dry-run
if [ "$1" == "--dry-run" ]; then
    echo -e "${YELLOW}üîÑ Executando em modo SIMULA√á√ÉO...${NC}"
    python executar_recuperacao_separacoes.py --dry-run
    exit $?
fi

# Se for pedido espec√≠fico
if [ "$1" == "--pedido" ] && [ -n "$2" ]; then
    echo -e "${BLUE}üîç Verificando pedido $2...${NC}"
    python executar_recuperacao_separacoes.py --pedido "$2"
    exit $?
fi

# Execu√ß√£o normal - pedir confirma√ß√£o
echo -e "${RED}‚ö†Ô∏è  ATEN√á√ÉO: Esta opera√ß√£o ir√° CRIAR novas Separa√ß√µes!${NC}"
echo ""
read -p "Deseja continuar? (s/n): " resposta

if [ "$resposta" != "s" ] && [ "$resposta" != "S" ]; then
    echo -e "${YELLOW}Opera√ß√£o cancelada pelo usu√°rio${NC}"
    exit 0
fi

# Executar recupera√ß√£o
echo ""
echo -e "${GREEN}üöÄ Iniciando recupera√ß√£o...${NC}"
python executar_recuperacao_separacoes.py

# Verificar resultado
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Recupera√ß√£o conclu√≠da!${NC}"
    echo "Verifique o arquivo de log em logs/ para detalhes completos"
else
    echo -e "${RED}‚ùå Erro durante a recupera√ß√£o. Verifique os logs.${NC}"
    exit 1
fi