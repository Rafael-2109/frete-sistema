#!/usr/bin/env python3
"""
Script simples para verificar o estado atual de um pedido
"""

import sys
import os
from datetime import datetime

# Adiciona o diret√≥rio raiz ao path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.pedidos.models import Pedido
from app.embarques.models import EmbarqueItem, Embarque

def verificar_pedido(numero_pedido):
    """Verifica o estado atual de um pedido"""
    app = create_app()
    
    with app.app_context():
        print(f"üîç VERIFICA√á√ÉO DO PEDIDO {numero_pedido}")
        print("=" * 50)
        print(f"Executado em: {datetime.now().strftime('%d/%m/%Y %H:%M:%S')}")
        print()
        
        # Busca o pedido
        pedido = Pedido.query.filter_by(num_pedido=str(numero_pedido)).first()
        
        if not pedido:
            print(f"‚ùå Pedido {numero_pedido} n√£o encontrado!")
            return False
        
        print(f"üìã DADOS DO PEDIDO:")
        print(f"   ‚Ä¢ N√∫mero: {pedido.num_pedido}")
        print(f"   ‚Ä¢ Cliente: {pedido.raz_social_red}")
        print(f"   ‚Ä¢ CNPJ: {pedido.cnpj_cpf}")
        print(f"   ‚Ä¢ Lote de separa√ß√£o: {pedido.separacao_lote_id}")
        print(f"   ‚Ä¢ NF: '{pedido.nf or 'SEM NF'}'")
        print(f"   ‚Ä¢ Status: '{pedido.status_calculado}'")
        print(f"   ‚Ä¢ Cota√ß√£o ID: {pedido.cotacao_id or 'N/A'}")
        print(f"   ‚Ä¢ Transportadora: {pedido.transportadora or 'N/A'}")
        print(f"   ‚Ä¢ Data embarque: {pedido.data_embarque or 'N/A'}")
        print(f"   ‚Ä¢ NF no CD: {pedido.nf_cd}")
        print()
        
        # Busca embarques que cont√™m este pedido
        embarques = []
        if pedido.separacao_lote_id:
            embarques = db.session.query(EmbarqueItem, Embarque).join(Embarque).filter(
                EmbarqueItem.separacao_lote_id == pedido.separacao_lote_id
            ).all()
        
        if not embarques:
            # Fallback: busca por n√∫mero do pedido
            embarques = db.session.query(EmbarqueItem, Embarque).join(Embarque).filter(
                EmbarqueItem.pedido == pedido.num_pedido
            ).all()
        
        print(f"üöö EMBARQUES QUE CONT√äM ESTE PEDIDO:")
        if embarques:
            for item_embarque, embarque in embarques:
                print(f"   ‚Ä¢ Embarque #{embarque.numero}")
                print(f"     - Status do embarque: {embarque.status}")
                print(f"     - Status do item: {item_embarque.status}")
                print(f"     - NF no item: '{item_embarque.nota_fiscal or 'SEM NF'}'")
                print(f"     - Transportadora: {embarque.transportadora.razao_social if embarque.transportadora else 'N/A'}")
        else:
            print(f"   ‚Ä¢ Nenhum embarque encontrado")
        print()
        
        # An√°lise do status
        print(f"üîç AN√ÅLISE DO STATUS:")
        if pedido.nf_cd:
            print(f"   ‚úÖ Status 'NF no CD' est√° correto (nf_cd = True)")
        elif pedido.nf and pedido.nf.strip():
            print(f"   ‚úÖ Status 'FATURADO' est√° correto (tem NF: {pedido.nf})")
        elif pedido.data_embarque:
            print(f"   ‚úÖ Status 'EMBARCADO' est√° correto (data embarque: {pedido.data_embarque})")
        elif pedido.cotacao_id:
            print(f"   ‚úÖ Status 'COTADO' est√° correto (cota√ß√£o ID: {pedido.cotacao_id})")
        else:
            print(f"   ‚úÖ Status 'ABERTO' est√° correto (sem cota√ß√£o, sem NF, sem embarque)")
        
        return True

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Uso: python verificar_pedido_nf.py <numero_pedido>")
        print("Exemplo: python verificar_pedido_nf.py 12345")
        sys.exit(1)
    
    numero_pedido = sys.argv[1]
    verificar_pedido(numero_pedido) 