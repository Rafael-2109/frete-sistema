###
### üéØ API TESTS - SISTEMA FRETES
### Use Ctrl+Shift+P > "REST Client: Switch Environment" para alternar produ√ß√£o/local
###

@baseUrl = {{baseUrl}}
@apiKey = {{apiKey}}

### ==========================================
### üìä SYSTEM HEALTH & STATUS
### ==========================================

### Health Check Geral
GET {{baseUrl}}/health
Accept: application/json

### Status Claude AI Novo
GET {{baseUrl}}/api/claude-ai-novo/status
Accept: application/json

### Informa√ß√µes do Sistema
GET {{baseUrl}}/api/system/info
Accept: application/json

### ==========================================
### ü§ñ CLAUDE AI NOVO - CORE FUNCTIONS
### ==========================================

### Query Simples ao Claude
POST {{baseUrl}}/claude-ai/query
Content-Type: application/json

{
    "query": "Quais pedidos est√£o pendentes de cota√ß√£o?",
    "context": {
        "user_id": 1,
        "source": "api_test"
    }
}

### Query com Contexto Avan√ßado
POST {{baseUrl}}/claude-ai/query
Content-Type: application/json

{
    "query": "An√°lise de fretes da semana passada por transportadora",
    "context": {
        "user_id": 1,
        "filters": {
            "period": "last_week",
            "group_by": "transportadora"
        }
    }
}

### Testar Orchestrator Inteligente
POST {{baseUrl}}/api/claude-ai-novo/orchestrate
Content-Type: application/json

{
    "type": "intelligent_query",
    "data": {
        "query": "Resumo dos embarques de hoje",
        "context": "dashboard"
    }
}

### Testar Processamento de Comandos
POST {{baseUrl}}/api/claude-ai-novo/command
Content-Type: application/json

{
    "command": "gerar_excel_fretes",
    "parameters": {
        "periodo": "hoje",
        "cliente": "assai"
    }
}

### ==========================================
### üß™ VALIDA√á√ÉO E DIAGN√ìSTICO
### ==========================================

### Rodar Validador Sistema
GET {{baseUrl}}/api/claude-ai-novo/validate
Accept: application/json

### Status dos Processadores
GET {{baseUrl}}/api/claude-ai-novo/processors/status
Accept: application/json

### Status dos Orchestradores
GET {{baseUrl}}/api/claude-ai-novo/orchestrators/status
Accept: application/json

### Testar Imports Cr√≠ticos
GET {{baseUrl}}/api/claude-ai-novo/imports/test
Accept: application/json

### ==========================================
### üì¶ GEST√ÉO DE PEDIDOS
### ==========================================

### Listar Pedidos Pendentes
GET {{baseUrl}}/api/pedidos/pendentes
Accept: application/json

### Buscar Pedido Espec√≠fico
GET {{baseUrl}}/api/pedidos/search?numero=VCD2520275
Accept: application/json

### Criar Simula√ß√£o de Pedido
POST {{baseUrl}}/api/pedidos/simulacao
Content-Type: application/json

{
    "cliente": "ATACADAO",
    "produtos": [
        {"codigo": "123", "quantidade": 10, "peso": 100}
    ],
    "destino": {
        "cidade": "S√£o Paulo",
        "uf": "SP"
    }
}

### ==========================================
### üöõ GEST√ÉO DE FRETES
### ==========================================

### Listar Fretes por Status
GET {{baseUrl}}/api/fretes?status=pendente
Accept: application/json

### Cota√ß√£o de Frete
POST {{baseUrl}}/api/fretes/cotacao
Content-Type: application/json

{
    "origem": {
        "cidade": "Rio de Janeiro",
        "uf": "RJ"
    },
    "destino": {
        "cidade": "S√£o Paulo", 
        "uf": "SP"
    },
    "peso": 1000,
    "volume": 5.5,
    "valor_mercadoria": 50000
}

### Buscar Transportadoras Dispon√≠veis
GET {{baseUrl}}/api/transportadoras/disponiveis?origem=RJ&destino=SP
Accept: application/json

### ==========================================
### üìã EMBARQUES E SEPARA√á√ÉO
### ==========================================

### Listar Embarques do Dia
GET {{baseUrl}}/api/embarques/hoje
Accept: application/json

### Status da Separa√ß√£o
GET {{baseUrl}}/api/separacao/status?data=today
Accept: application/json

### Criar Lote de Separa√ß√£o
POST {{baseUrl}}/api/separacao/lote
Content-Type: application/json

{
    "pedidos": ["VCD2520275", "VCD2520276"],
    "responsavel": "sistema_api",
    "observacoes": "Teste via API"
}

### ==========================================
### üí∞ FINANCEIRO E FATURAMENTO
### ==========================================

### Pend√™ncias Financeiras
GET {{baseUrl}}/api/financeiro/pendencias
Accept: application/json

### Relat√≥rio de Faturamento
GET {{baseUrl}}/api/faturamento/relatorio?mes=current
Accept: application/json

### An√°lise de Receitas
POST {{baseUrl}}/api/financeiro/analise
Content-Type: application/json

{
    "periodo": {
        "inicio": "2025-01-01",
        "fim": "2025-01-31"
    },
    "detalhamento": "por_cliente"
}

### ==========================================
### üîç MONITORAMENTO E LOGS
### ==========================================

### Logs Recentes do Sistema
GET {{baseUrl}}/api/logs/recent?limit=50
Accept: application/json

### M√©tricas de Performance
GET {{baseUrl}}/api/metrics/performance
Accept: application/json

### Alertas do Sistema
GET {{baseUrl}}/api/alerts/active
Accept: application/json

### Status de Servi√ßos Externos
GET {{baseUrl}}/api/external/status
Accept: application/json

### ==========================================
### üß∞ UTILIT√ÅRIOS E FERRAMENTAS
### ==========================================

### Limpar Cache do Sistema
DELETE {{baseUrl}}/api/cache/clear
Content-Type: application/json

{
    "cache_type": "intelligent_cache",
    "confirm": true
}

### Recarregar Configura√ß√µes
POST {{baseUrl}}/api/config/reload
Content-Type: application/json

{
    "modules": ["claude_ai_novo", "core"]
}

### Backup de Dados Cr√≠ticos
POST {{baseUrl}}/api/backup/create
Content-Type: application/json

{
    "type": "incremental",
    "include": ["configurations", "cache_critical"]
}

### ==========================================
### üîß DESENVOLVIMENTO E DEBUG
### ==========================================

### Testar Conex√µes de Banco
GET {{baseUrl}}/api/debug/database
Accept: application/json

### Verificar Vari√°veis de Ambiente
GET {{baseUrl}}/api/debug/env
Accept: application/json

### Simular Erro para Testes
POST {{baseUrl}}/api/debug/simulate-error
Content-Type: application/json

{
    "error_type": "timeout",
    "component": "claude_processor",
    "duration": 5
}

### For√ßar Garbage Collection
POST {{baseUrl}}/api/debug/gc
Content-Type: application/json

{}

###
### üìù NOTAS:
### - Para usar em produ√ß√£o, mude o environment para "production"
### - Todas as rotas retornam JSON por padr√£o
### - Headers de autentica√ß√£o podem ser necess√°rios em produ√ß√£o
### - Use as tasks do Cursor para iniciar o servidor local primeiro
###