#!/usr/bin/env python3
"""
üß™ TESTE DAS ROTAS ATUALIZADAS - Blueprint e Interface de Transi√ß√£o
"""

import sys
from pathlib import Path

# Configurar path
projeto_root = Path(__file__).parent
sys.path.insert(0, str(projeto_root))

def main():
    print("üß™ TESTANDO ROTAS ATUALIZADAS DO CLAUDE AI")
    print("="*50)
    
    try:
        # Teste 1: Verificar se a interface de transi√ß√£o funciona
        print("1Ô∏è‚É£ Testando interface de transi√ß√£o...")
        from app.claude_transition import processar_consulta_transicao
        resultado = processar_consulta_transicao("Teste de integra√ß√£o das rotas")
        print(f"   ‚úÖ Interface funcionando: {resultado[:50]}...")
        
        # Teste 2: Verificar imports das rotas
        print("2Ô∏è‚É£ Testando imports das rotas...")
        import app.claude_ai.routes
        print("   ‚úÖ Rotas importadas com sucesso")
        
        # Teste 3: Verificar se blueprint est√° registrado
        print("3Ô∏è‚É£ Verificando blueprint...")
        from app.claude_ai import claude_ai_bp
        print(f"   ‚úÖ Blueprint: {claude_ai_bp.name}")
        
        # Teste 4: Verificar se n√£o h√° chamadas do sistema antigo
        print("4Ô∏è‚É£ Verificando c√≥digo das rotas...")
        with open("app/claude_ai/routes.py", "r", encoding="utf-8") as f:
            conteudo = f.read()
        
        # Verificar se ainda h√° chamadas do sistema antigo
        if "processar_com_claude_real" in conteudo:
            print("   ‚ùå Ainda h√° chamadas do sistema antigo!")
            return False
        else:
            print("   ‚úÖ Todas as chamadas atualizadas para interface de transi√ß√£o")
        
        # Teste 5: Verificar se interface de transi√ß√£o est√° importada
        if "processar_consulta_transicao" in conteudo:
            print("   ‚úÖ Interface de transi√ß√£o corretamente importada")
        else:
            print("   ‚ùå Interface de transi√ß√£o n√£o encontrada!")
            return False
        
        print("\nüéâ TODOS OS TESTES PASSARAM!")
        print("="*50)
        print("‚úÖ Blueprint registrado corretamente")
        print("‚úÖ Rotas atualizadas para interface de transi√ß√£o")  
        print("‚úÖ Sistema antigo n√£o √© mais chamado diretamente")
        print("‚úÖ Interface funciona automaticamente (novo vs antigo)")
        
        print("\nüöÄ INTEGRA√á√ÉO BLUEPRINT + TRANSI√á√ÉO COMPLETA!")
        print("üí° As rotas Flask agora usam o sistema modular automaticamente")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    main() 