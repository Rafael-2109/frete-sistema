#!/usr/bin/env python3
"""
Teste completo dos mappers domain
"""

def testar_mappers_domain():
    """Testa todos os aspectos dos mappers domain"""
    
    print("üß™ TESTE COMPLETO DOS MAPPERS DOMAIN")
    print("=" * 50)
    
    # Teste 1: Imports
    print("\n1Ô∏è‚É£ TESTE DE IMPORTS")
    try:
        from mappers.domain import PedidosMapper, EmbarquesMapper, get_domain_mapper
        print("‚úÖ Imports realizados com sucesso")
    except Exception as e:
        print(f"‚ùå Erro nos imports: {e}")
        return
    
    # Teste 2: Instancia√ß√£o
    print("\n2Ô∏è‚É£ TESTE DE INSTANCIA√á√ÉO")
    try:
        pedidos_mapper = PedidosMapper()
        embarques_mapper = EmbarquesMapper()
        print(f"‚úÖ PedidosMapper: {pedidos_mapper.modelo_nome} ({len(pedidos_mapper.mapeamentos)} campos)")
        print(f"‚úÖ EmbarquesMapper: {embarques_mapper.modelo_nome} ({len(embarques_mapper.mapeamentos)} campos)")
    except Exception as e:
        print(f"‚ùå Erro na instancia√ß√£o: {e}")
        return
    
    # Teste 3: Busca sem√¢ntica
    print("\n3Ô∏è‚É£ TESTE DE BUSCA SEM√ÇNTICA")
    try:
        # Teste busca exata
        resultado_cliente = pedidos_mapper.buscar_mapeamento('cliente')
        resultado_valor = pedidos_mapper.buscar_mapeamento('valor')
        resultado_data = pedidos_mapper.buscar_mapeamento('data')
        
        print(f"‚úÖ Busca 'cliente': {len(resultado_cliente)} resultados")
        print(f"‚úÖ Busca 'valor': {len(resultado_valor)} resultados")
        print(f"‚úÖ Busca 'data': {len(resultado_data)} resultados")
        
        # Mostrar detalhes de um resultado
        if resultado_cliente:
            print(f"   Detalhes 'cliente': {resultado_cliente[0]}")
            
    except Exception as e:
        print(f"‚ùå Erro na busca sem√¢ntica: {e}")
    
    # Teste 4: get_domain_mapper
    print("\n4Ô∏è‚É£ TESTE DE get_domain_mapper")
    try:
        mapper_pedidos = get_domain_mapper('pedidos')
        mapper_embarques = get_domain_mapper('embarques')
        
        print(f"‚úÖ get_domain_mapper('pedidos'): {mapper_pedidos.modelo_nome}")
        print(f"‚úÖ get_domain_mapper('embarques'): {mapper_embarques.modelo_nome}")
        
        # Teste dom√≠nio inv√°lido
        try:
            mapper_invalido = get_domain_mapper('inexistente')
            print("‚ùå Deveria ter dado erro para dom√≠nio inv√°lido")
        except ValueError as e:
            print(f"‚úÖ Erro esperado para dom√≠nio inv√°lido: {e}")
            
    except Exception as e:
        print(f"‚ùå Erro no get_domain_mapper: {e}")
    
    # Teste 5: Estat√≠sticas
    print("\n5Ô∏è‚É£ TESTE DE ESTAT√çSTICAS")
    try:
        stats_pedidos = pedidos_mapper.gerar_estatisticas()
        stats_embarques = embarques_mapper.gerar_estatisticas()
        
        print(f"‚úÖ Estat√≠sticas Pedidos: {stats_pedidos}")
        print(f"‚úÖ Estat√≠sticas Embarques: {stats_embarques}")
        
    except Exception as e:
        print(f"‚ùå Erro nas estat√≠sticas: {e}")
    
    # Teste 6: Valida√ß√£o
    print("\n6Ô∏è‚É£ TESTE DE VALIDA√á√ÉO")
    try:
        erros_pedidos = pedidos_mapper.validar_mapeamentos()
        erros_embarques = embarques_mapper.validar_mapeamentos()
        
        print(f"‚úÖ Valida√ß√£o Pedidos: {len(erros_pedidos)} erros")
        print(f"‚úÖ Valida√ß√£o Embarques: {len(erros_embarques)} erros")
        
        if erros_pedidos:
            print(f"   Erros Pedidos: {erros_pedidos[:3]}...")
        if erros_embarques:
            print(f"   Erros Embarques: {erros_embarques[:3]}...")
            
    except Exception as e:
        print(f"‚ùå Erro na valida√ß√£o: {e}")
    
    # Teste 7: Listar termos
    print("\n7Ô∏è‚É£ TESTE DE LISTAGEM")
    try:
        campos_pedidos = pedidos_mapper.listar_todos_campos()
        termos_pedidos = pedidos_mapper.listar_termos_naturais()
        
        print(f"‚úÖ Campos Pedidos: {len(campos_pedidos)} campos")
        print(f"‚úÖ Termos Pedidos: {len(termos_pedidos)} termos")
        print(f"   Primeiros campos: {campos_pedidos[:5]}")
        print(f"   Primeiros termos: {termos_pedidos[:5]}")
        
    except Exception as e:
        print(f"‚ùå Erro na listagem: {e}")
    
    # Resumo final
    print("\nüéØ RESUMO FINAL")
    print("=" * 50)
    print("‚úÖ Sistema de mappers domain funcionando!")
    print("‚úÖ Busca sem√¢ntica operacional")
    print("‚úÖ Fun√ß√£o get_domain_mapper funcionando")
    print("‚úÖ Valida√ß√µes e estat√≠sticas OK")
    print("‚úÖ Arquitetura por responsabilidade implementada")

if __name__ == "__main__":
    testar_mappers_domain() 