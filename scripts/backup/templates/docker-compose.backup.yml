# Docker Compose configuration for MCP Backup Services
# This template provides backup infrastructure components

version: '3.8'

services:
  # MinIO - S3 compatible object storage for backups
  minio:
    image: minio/minio:latest
    container_name: mcp_backup_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - backup_network

  # Backup orchestrator service
  backup_orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.backup
    container_name: mcp_backup_orchestrator
    environment:
      - BACKUP_CONFIG=/app/config/backup_config.json
      - TZ=${TZ:-UTC}
    volumes:
      - ./config:/app/config
      - ./scripts/backup:/app/scripts
      - backup_data:/var/backups/mcp
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - minio
    networks:
      - backup_network
    restart: unless-stopped

  # Prometheus for backup metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: mcp_backup_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - backup_network

  # Grafana for backup monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: mcp_backup_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - backup_network

  # Backup verification service
  backup_verifier:
    build:
      context: .
      dockerfile: Dockerfile.backup
    container_name: mcp_backup_verifier
    command: python /app/scripts/verify_backups.py --all --report /app/reports/daily_verification.txt
    environment:
      - BACKUP_CONFIG=/app/config/backup_config.json
    volumes:
      - ./config:/app/config
      - ./scripts/backup:/app/scripts
      - backup_data:/var/backups/mcp:ro
      - ./reports:/app/reports
    networks:
      - backup_network
    restart: "no"

  # Recovery test service
  recovery_tester:
    build:
      context: .
      dockerfile: Dockerfile.backup
    container_name: mcp_recovery_tester
    command: python /app/scripts/restore_test.py --drill
    environment:
      - BACKUP_CONFIG=/app/config/backup_config.json
    volumes:
      - ./config:/app/config
      - ./scripts/backup:/app/scripts
      - backup_data:/var/backups/mcp:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backup_network
    restart: "no"

volumes:
  minio_data:
    driver: local
  backup_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  backup_network:
    driver: bridge
    name: mcp_backup_network