{
  "teste_executado_em": "2025-07-08T20:48:04.512785",
  "objetivo": "Validar que todos os managers estão livres de dependências Flask",
  "managers_testados": {
    "multi_agent_orchestrator.py": {
      "arquivo": "multi_agent_orchestrator.py",
      "importacao": true,
      "instanciacao": true,
      "get_status": true,
      "health_check": true,
      "sem_dependencias_flask": true,
      "metodos_disponveis": [
        "get_status",
        "get_system_stats",
        "health_check",
        "is_flask_available",
        "process_query",
        "update_config"
      ],
      "score_final": 100.0,
      "erros": []
    },
    "analyzer_manager.py": {
      "arquivo": "analyzer_manager.py",
      "importacao": true,
      "instanciacao": true,
      "get_status": true,
      "health_check": true,
      "sem_dependencias_flask": false,
      "metodos_disponveis": [
        "analyze_intention",
        "analyze_metacognitive",
        "analyze_nlp",
        "analyze_query",
        "get_best_analyzer",
        "get_status",
        "health_check",
        "is_flask_available"
      ],
      "score_final": 80.0,
      "erros": []
    },
    "processor_manager.py": {
      "arquivo": "processor_manager.py",
      "importacao": true,
      "instanciacao": true,
      "get_status": true,
      "health_check": true,
      "sem_dependencias_flask": false,
      "metodos_disponveis": [
        "get_processor_chain",
        "get_status",
        "health_check",
        "is_flask_available",
        "process_context",
        "process_query",
        "process_response",
        "process_semantic_loop"
      ],
      "score_final": 80.0,
      "erros": []
    },
    "data_manager.py": {
      "arquivo": "data_manager.py",
      "importacao": true,
      "instanciacao": true,
      "get_status": true,
      "health_check": true,
      "sem_dependencias_flask": false,
      "metodos_disponveis": [
        "get_loader",
        "get_provider",
        "get_status",
        "health_check",
        "is_flask_available",
        "load_context",
        "load_data",
        "provide_data"
      ],
      "score_final": 80.0,
      "erros": []
    },
    "utils_manager.py": {
      "arquivo": "utils_manager.py",
      "importacao": true,
      "instanciacao": true,
      "get_status": true,
      "health_check": true,
      "sem_dependencias_flask": false,
      "metodos_disponveis": [
        "format_response",
        "get_formatter",
        "get_status",
        "get_validator",
        "health_check",
        "is_flask_available",
        "validate"
      ],
      "score_final": 80.0,
      "erros": []
    },
    "intelligence_manager.py": {
      "arquivo": "intelligence_manager.py",
      "importacao": true,
      "instanciacao": true,
      "get_status": true,
      "health_check": true,
      "sem_dependencias_flask": true,
      "metodos_disponveis": [
        "apply_lifelong_learning",
        "capture_human_feedback",
        "get_conversation_context",
        "get_intelligence_status",
        "get_status",
        "health_check",
        "is_flask_available",
        "process_intelligence",
        "update_conversation_context"
      ],
      "score_final": 100.0,
      "erros": []
    },
    "integration_manager.py": {
      "arquivo": "integration_manager.py",
      "importacao": true,
      "instanciacao": true,
      "get_status": true,
      "health_check": true,
      "sem_dependencias_flask": true,
      "metodos_disponveis": [
        "get_config",
        "get_status",
        "health_check",
        "is_available",
        "process_request"
      ],
      "score_final": 100.0,
      "erros": []
    }
  },
  "resumo_geral": {
    "total_managers": 7,
    "managers_100_funcionais": 3,
    "managers_funcionais": 7,
    "managers_sem_flask": 3,
    "percentual_100_funcionais": 42.857142857142854,
    "percentual_funcionais": 100.0,
    "percentual_sem_dependencias_flask": 42.857142857142854,
    "status_etapa": "QUASE_COMPLETA",
    "proxima_etapa": "Corrigir managers restantes e prosseguir"
  },
  "proxima_etapa": ""
}