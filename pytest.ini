[pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts = 
    -v
    --strict-markers
    --tb=short
    -p no:warnings
    --maxfail=5
    --durations=10

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may require external services)
    slow: Slow running tests
    auth: Authentication related tests
    neural: Neural processing tests
    memory: Memory system tests
    cache: Caching system tests
    security: Security feature tests
    mcp: MCP protocol tests

# Test output configuration
console_output_style = progress
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */migrations/*
    */__init__.py
    */config.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract

# Asyncio configuration
asyncio_mode = auto

# Timeout configuration
timeout = 300
timeout_method = thread

# Environment variables for tests
env = 
    TESTING=true
    DATABASE_URL=sqlite:///:memory:
    REDIS_URL=redis://localhost:6379/15
    JWT_SECRET=test-secret-key
    ENCRYPTION_KEY=test-encryption-key