{
  "timestamp": "2025-07-11T12:25:35.835881",
  "resumo_executivo": {
    "total_pastas": 20,
    "modulos_orfaos": 10,
    "percentual_orfaos": 50.0,
    "linhas_perdidas": 23452,
    "nivel_critico": "alto"
  },
  "mapa_pastas": {
    "analyzers": {
      "nome": "analyzers",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\analyzers",
      "arquivos_python": [
        "analyzer_manager.py",
        "diagnostics_analyzer.py",
        "intention_analyzer.py",
        "metacognitive_analyzer.py",
        "nlp_enhanced_analyzer.py",
        "performance_analyzer.py",
        "query_analyzer.py",
        "semantic_analyzer.py",
        "structural_analyzer.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 10,
      "linhas_codigo": 3683,
      "classes_encontradas": [
        "AnalyzerManager",
        "FallbackIntentionAnalyzer",
        "FallbackNLPEnhancedAnalyzer",
        "FallbackQueryAnalyzer",
        "FallbackMetacognitiveAnalyzer",
        "FallbackStructuralAnalyzer",
        "FallbackSemanticAnalyzer",
        "FallbackDiagnosticsAnalyzer",
        "DiagnosticsAnalyzer",
        "IntentionAnalyzer",
        "MetacognitiveAnalyzer",
        "AnaliseNLP",
        "NLPEnhancedAnalyzer",
        "PerformanceAnalyzer",
        "QueryAnalyzer",
        "SemanticAnalyzer",
        "StructuralAnalyzer",
        "IntentionAnalyzer",
        "QueryAnalyzer",
        "MetacognitiveAnalyzer",
        "NLPEnhancedAnalyzer",
        "StructuralAnalyzer",
        "SemanticAnalyzer",
        "PerformanceAnalyzer",
        "DiagnosticsAnalyzer",
        "AnalyzerManager"
      ],
      "funcoes_encontradas": [
        "get_analyzermanager",
        "get_manager",
        "__init__",
        "_initialize_components",
        "analyze_query",
        "_should_use_nlp_analysis",
        "_calculate_combined_confidence",
        "_generate_combined_insights",
        "initialize_diagnostics_analyzer",
        "analyze_diagnostics",
        "analyze_intention",
        "analyze_semantic",
        "analyze_structure",
        "analyze_nlp",
        "analyze_metacognitive",
        "get_best_analyzer",
        "get_status",
        "health_check",
        "__str__",
        "__repr__",
        "__init__",
        "analyze_intention",
        "__init__",
        "analyze_text",
        "__init__",
        "analyze_query",
        "__init__",
        "analyze_own_performance",
        "__init__",
        "analyze_structure",
        "validate_architecture",
        "detect_patterns",
        "__init__",
        "analyze_query",
        "extract_entities",
        "classify_intent",
        "__init__",
        "gerar_estatisticas_completas",
        "diagnosticar_qualidade",
        "gerar_relatorio_resumido",
        "get_diagnostics_analyzer",
        "__init__",
        "gerar_estatisticas_completas",
        "diagnosticar_qualidade",
        "_avaliar_qualidade_geral",
        "_determinar_status_geral",
        "gerar_relatorio_enriquecido",
        "_avaliar_integracao",
        "_gerar_recomendacoes_sistema",
        "gerar_relatorio_resumido",
        "get_intentionanalyzer",
        "get_intention_analyzer",
        "__init__",
        "analyze_intention",
        "_detectar_intencoes_multiplas",
        "_analisar_contexto_intencao",
        "_detectar_contexto_temporal",
        "_detectar_escopo",
        "_detectar_especificidade",
        "_detectar_publico_alvo",
        "_detectar_urgencia",
        "_calcular_complexidade_intencao",
        "_deve_usar_sistema_avancado",
        "_salvar_performance",
        "get_performance_stats",
        "get_metacognitive_analyzer",
        "__init__",
        "analyze_own_performance",
        "_assess_query_complexity",
        "_assess_response_quality",
        "_calculate_confidence",
        "_assess_cognitive_load",
        "_assess_domain_coverage",
        "_interpret_user_feedback",
        "_suggest_self_improvements",
        "get_nlp_analyzer",
        "get_nlp_enhanced_analyzer",
        "__init__",
        "analisar_com_nlp",
        "analyze_text",
        "_aplicar_correcoes",
        "_tokenizar_spacy",
        "_tokenizar_basico",
        "_extrair_entidades_spacy",
        "_detectar_negacoes",
        "_calcular_similaridades",
        "_extrair_palavras_chave",
        "_detectar_tempo_verbal",
        "_analisar_sentimento_basico",
        "get_performance_analyzer",
        "analyze_system_performance",
        "detect_system_anomalies",
        "classify_api_performance",
        "__init__",
        "_ensure_table_exists",
        "analyze_ai_performance",
        "analyze_user_behavior",
        "detect_anomalies",
        "_analyze_trends",
        "_create_distribution",
        "_calculate_engagement_score",
        "_get_engagement_level",
        "_generate_insights",
        "_generate_behavior_insights",
        "_detect_statistical_anomalies",
        "_summarize_anomalies",
        "detect_outliers",
        "get_db",
        "get_query_analyzer",
        "__init__",
        "analyze_query",
        "_detect_query_type",
        "_calculate_complexity",
        "_detect_domains",
        "_extract_entities",
        "_detect_temporal_patterns",
        "_has_question_words",
        "_detect_urgency",
        "get_semantic_analyzer",
        "__init__",
        "analyze_query",
        "extract_entities",
        "classify_intent",
        "analyze_semantic_similarity",
        "_extract_entities",
        "_identify_domains",
        "_analyze_sentiment",
        "_extract_keywords",
        "_determine_intent",
        "_calculate_confidence",
        "_classify_intents",
        "_enhance_with_context",
        "_calculate_similarity",
        "_find_common_entities",
        "get_structural_analyzer",
        "__init__",
        "analyze_structure",
        "validate_architecture",
        "detect_patterns",
        "_count_nested_levels",
        "_analyze_data_types",
        "_detect_structural_issues",
        "_generate_recommendations",
        "_assess_structure_quality",
        "_calculate_complexity",
        "get_analyzer_manager",
        "get_intention_analyzer",
        "get_query_analyzer",
        "get_metacognitive_analyzer",
        "get_nlp_enhanced_analyzer",
        "get_diagnostics_analyzer",
        "get_performance_analyzer",
        "analyze_query_intention",
        "analyze_text_structure",
        "analyze_semantic_meaning",
        "get_structural_analyzer",
        "get_semantic_analyzer",
        "__init__",
        "analyze",
        "__init__",
        "analyze",
        "__init__",
        "analyze_own_performance",
        "__init__",
        "analyze_text",
        "__init__",
        "analyze_structure",
        "validate_architecture",
        "detect_patterns",
        "__init__",
        "analyze_query",
        "extract_entities",
        "classify_intent",
        "__init__",
        "analyze_ai_performance",
        "analyze_user_behavior",
        "detect_anomalies",
        "__init__",
        "analyze_diagnostics",
        "__init__",
        "analyze_query"
      ]
    },
    "commands": {
      "nome": "commands",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\commands",
      "arquivos_python": [
        "auto_command_processor.py",
        "base_command.py",
        "cursor_commands.py",
        "dev_commands.py",
        "excel_command_manager.py",
        "file_commands.py",
        "__init__.py",
        "entregas.py",
        "faturamento.py",
        "fretes.py",
        "pedidos.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 12,
      "linhas_codigo": 4434,
      "classes_encontradas": [
        "AutoCommandProcessor",
        "BaseCommand",
        "CursorCommands",
        "DevCommands",
        "ExcelOrchestrator",
        "FileCommands",
        "CommandsRegistry",
        "ExcelEntregas",
        "ExcelFaturamento",
        "ExcelFretes",
        "ExcelPedidos"
      ],
      "funcoes_encontradas": [
        "get_auto_command_processor",
        "__init__",
        "process_natural_command",
        "register_command",
        "get_command_suggestions",
        "get_command_history",
        "validate_command_syntax",
        "_initialize_default_commands",
        "_detect_commands",
        "_extract_parameters",
        "_validate_security",
        "_execute_command",
        "_handle_query_command",
        "_handle_report_command",
        "_handle_analyze_command",
        "_handle_status_command",
        "_calculate_detection_confidence",
        "_calculate_suggestion_confidence",
        "_validate_command_syntax",
        "_record_command_execution",
        "format_response",
        "format_response_advanced",
        "create_excel_summary",
        "detect_command_type",
        "__init__",
        "_validate_input",
        "_sanitize_input",
        "_extract_client_from_query",
        "_extract_filters_advanced",
        "_log_command",
        "_handle_error",
        "_get_cached_result",
        "_set_cached_result",
        "_generate_cache_key",
        "_format_currency",
        "_format_percentage",
        "_format_weight",
        "_format_date_br",
        "_create_summary_stats",
        "get_cursor_commands",
        "__init__",
        "_get_cursor_mode",
        "is_cursor_command",
        "processar_comando_cursor",
        "_processar_comando_cursor_interno",
        "_ativar_cursor_mode",
        "_sugerir_ativacao",
        "_analisar_codigo",
        "_gerar_codigo",
        "_modificar_codigo",
        "_buscar_codigo",
        "_corrigir_bugs",
        "_cursor_chat",
        "_comando_geral_cursor",
        "get_dev_commands",
        "__init__",
        "is_dev_command",
        "processar_comando_desenvolvimento",
        "_processar_desenvolvimento_interno",
        "_detectar_tipo_desenvolvimento",
        "_construir_contexto_projeto",
        "_processar_com_claude",
        "_fallback_sem_claude",
        "_template_modulo_fallback",
        "_template_modelo_fallback",
        "_template_rota_fallback",
        "_template_html_fallback",
        "_template_form_fallback",
        "_template_api_fallback",
        "_template_geral_fallback",
        "get_excel_orchestrator",
        "__init__",
        "_inicializar_esqueletos",
        "is_excel_command",
        "processar_comando_excel",
        "_processar_excel_interno",
        "_detectar_tipo_excel",
        "_tentar_fallback_esqueletos",
        "_gerar_excel_geral_multi",
        "_criar_aba_resumo_fretes",
        "_criar_aba_resumo_pedidos",
        "_criar_aba_resumo_entregas",
        "_criar_aba_status_sistema",
        "_fallback_tipo_indisponivel",
        "_fallback_sem_openpyxl",
        "get_status_esqueletos",
        "get_file_commands",
        "is_file_command",
        "processar_file_command",
        "get_commands_status",
        "get_available_commands",
        "get_command_registry",
        "initialize_all_commands",
        "get_commands_info",
        "reset_commands_cache",
        "__init__",
        "discover_commands",
        "_discover_main_commands",
        "_discover_excel_commands",
        "_try_import_command",
        "_register_error",
        "get_command",
        "get_available_commands",
        "get_status_report",
        "get_excel_entregas",
        "__init__",
        "is_excel_entregas_command",
        "gerar_excel_entregas",
        "_gerar_excel_entregas_interno",
        "_buscar_dados_entregas",
        "_criar_excel_entregas",
        "_criar_aba_entregas_principal",
        "_criar_aba_performance",
        "_criar_aba_agendamentos",
        "_criar_resumo_entregas",
        "_aplicar_estilo_header",
        "_auto_ajustar_colunas",
        "_fallback_sem_openpyxl",
        "_fallback_sem_sistema",
        "get_excel_faturamento",
        "__init__",
        "detectar_comando_faturamento",
        "gerar_excel_faturamento",
        "_aplicar_estilo_header",
        "_auto_ajustar_colunas",
        "_get_file_size",
        "_obter_periodo_faturamento",
        "_fallback_sem_openpyxl",
        "_fallback_sem_sistema",
        "get_excel_fretes",
        "__init__",
        "is_excel_fretes_command",
        "gerar_excel_fretes",
        "_gerar_excel_fretes_interno",
        "_buscar_dados_fretes",
        "_criar_excel_fretes",
        "_criar_aba_fretes_principal",
        "_criar_aba_analise_financeira",
        "_criar_aba_transportadoras",
        "_criar_resumo_fretes",
        "_aplicar_estilo_header",
        "_auto_ajustar_colunas",
        "_fallback_sem_openpyxl",
        "_fallback_sem_sistema",
        "get_excel_pedidos",
        "__init__",
        "is_excel_pedidos_command",
        "gerar_excel_pedidos",
        "_gerar_excel_pedidos_interno",
        "_buscar_dados_pedidos",
        "_criar_excel_pedidos",
        "_criar_aba_pedidos_principal",
        "_criar_aba_analise_vendas",
        "_criar_aba_status_agendamentos",
        "_criar_resumo_pedidos",
        "_aplicar_estilo_header",
        "_auto_ajustar_colunas",
        "_fallback_sem_openpyxl",
        "_fallback_sem_sistema",
        "get_available_modules"
      ]
    },
    "config": {
      "nome": "config",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\config",
      "arquivos_python": [
        "advanced_config.py",
        "basic_config.py",
        "system_config.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": false,
      "total_arquivos": 4,
      "linhas_codigo": 1388,
      "classes_encontradas": [
        "AdvancedConfig",
        "ClaudeAIConfig",
        "SystemConfig",
        "ClaudeAIConfig"
      ],
      "funcoes_encontradas": [
        "get_advanced_config",
        "is_unlimited_mode",
        "get_advanced_config_instance",
        "__init__",
        "get_temperature",
        "get_claude_params",
        "create_claude_client",
        "get_config",
        "get_claude_params",
        "to_dict",
        "validate",
        "get_system_config",
        "__init__",
        "get_config",
        "set_config",
        "get_profile_config",
        "switch_profile",
        "reload_config",
        "validate_configuration",
        "register_config_watcher",
        "export_config",
        "import_config",
        "get_system_status",
        "_get_default_config_path",
        "_detect_active_profile",
        "_initialize_default_configurations",
        "_load_initial_configurations",
        "_load_profile_config",
        "_save_profile_config",
        "_get_profile_config_path",
        "_get_nested_value",
        "_set_nested_value",
        "_validate_config_value",
        "_validate_profile_config",
        "_flatten_dict",
        "_record_config_change",
        "_record_profile_switch",
        "_notify_config_watchers",
        "_key_matches_pattern",
        "get_advanced_config",
        "get_system_config",
        "get_config",
        "set_config",
        "get_profile_config",
        "switch_profile",
        "reload_config",
        "validate_configuration",
        "export_config",
        "import_config",
        "register_config_watcher",
        "get_system_status",
        "get_ai_config",
        "get_database_config",
        "get_cache_config",
        "is_debug_mode",
        "get_log_level",
        "__init__",
        "get",
        "set",
        "reload",
        "get_ai_config",
        "get_database_config",
        "is_debug"
      ]
    },
    "conversers": {
      "nome": "conversers",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\conversers",
      "arquivos_python": [
        "context_converser.py",
        "conversation_manager.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 3,
      "linhas_codigo": 815,
      "classes_encontradas": [
        "ConversationMessage",
        "ConversationContext",
        "ConversationManager"
      ],
      "funcoes_encontradas": [
        "init_conversation_context",
        "get_conversation_context",
        "to_dict",
        "__init__",
        "_get_context_key",
        "add_message",
        "get_context",
        "build_context_prompt",
        "extract_metadata",
        "clear_context",
        "get_context_summary",
        "get_conversation_manager",
        "__init__",
        "start_conversation",
        "add_user_message",
        "add_assistant_message",
        "get_conversation_context",
        "get_conversation_history",
        "end_conversation",
        "get_active_conversations",
        "cleanup_expired_conversations",
        "get_conversation_summary",
        "_is_conversation_active",
        "get_manager_stats",
        "get_conversation_manager",
        "get_conversation_context"
      ]
    },
    "coordinators": {
      "nome": "coordinators",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\coordinators",
      "arquivos_python": [
        "coordinator_manager.py",
        "intelligence_coordinator.py",
        "processor_coordinator.py",
        "specialist_agents.py",
        "__init__.py",
        "base_agent.py",
        "embarques_agent.py",
        "entregas_agent.py",
        "financeiro_agent.py",
        "fretes_agent.py",
        "pedidos_agent.py",
        "smart_base_agent.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 13,
      "linhas_codigo": 3401,
      "classes_encontradas": [
        "CoordinatorType",
        "CoordinatorManager",
        "IntelligenceCoordinator",
        "ProcessorCoordinator",
        "SpecialistAgent",
        "BaseSpecialistAgent",
        "EmbarquesAgent",
        "EntregasAgent",
        "FinanceiroAgent",
        "FretesAgent",
        "PedidosAgent",
        "SmartBaseAgent"
      ],
      "funcoes_encontradas": [
        "get_coordinator_manager",
        "coordinate_intelligent_query",
        "get_domain_agent",
        "get_coordination_status",
        "__init__",
        "_initialize_coordinators",
        "_load_intelligence_coordinator",
        "_load_processor_coordinator",
        "_load_specialist_coordinator",
        "_load_domain_agents",
        "coordinate_query",
        "_select_best_coordinator",
        "_process_with_coordinator",
        "_update_metrics",
        "get_coordinator_status",
        "get_best_coordinator_for_domain",
        "reload_coordinator",
        "get_intelligence_coordinator",
        "__init__",
        "coordinate_intelligence_operation",
        "coordinate_multi_ai_synthesis",
        "optimize_intelligence_pipeline",
        "register_ai_component",
        "get_intelligence_status",
        "_initialize_ai_components",
        "_determine_processing_strategy",
        "_execute_parallel_intelligence",
        "_execute_sequential_intelligence",
        "_execute_hybrid_intelligence",
        "_execute_single_intelligence",
        "_execute_component_operation",
        "_component_supports_operation",
        "_select_best_component",
        "_consolidate_intelligence_results",
        "_create_simple_consensus",
        "_register_operation",
        "_complete_operation",
        "_generate_cache_key",
        "_get_cached_result",
        "_cache_result",
        "_calculate_performance_metrics",
        "_validate_intelligence_quality",
        "_update_coordination_metrics",
        "_update_component_stats",
        "_attempt_fallback",
        "_process_ai_request",
        "_comprehensive_synthesis",
        "_consensus_synthesis",
        "_best_result_synthesis",
        "_default_synthesis",
        "_combine_all_insights",
        "_calculate_overall_confidence",
        "_find_consensus_points",
        "_calculate_agreement_level",
        "_calculate_confidence_matrix",
        "_analyze_consensus",
        "_analyze_current_performance",
        "_optimize_ai_components",
        "_optimize_processing_pipeline",
        "_optimize_ai_cache",
        "_adjust_intelligence_config",
        "_calculate_performance_improvements",
        "get_processor_coordinator",
        "__init__",
        "execute_processor_chain",
        "_execute_chain_step",
        "execute_parallel_processors",
        "_execute_single_processor",
        "create_processing_pipeline",
        "execute_pipeline",
        "get_active_chains",
        "cleanup_completed_chains",
        "get_coordinator_stats",
        "create_entregas_agent",
        "create_fretes_agent",
        "create_pedidos_agent",
        "create_embarques_agent",
        "create_financeiro_agent",
        "get_all_agent_types",
        "__new__",
        "get_coordinator_manager",
        "get_intelligence_coordinator",
        "get_processor_coordinator",
        "get_specialist_coordinator",
        "get_all_coordinators",
        "coordinate_smart_query",
        "get_domain_agent",
        "get_coordination_status",
        "coordinate_intelligence",
        "coordinate_processors",
        "__init__",
        "_load_specialist_prompt",
        "_load_domain_knowledge",
        "_get_domain_keywords",
        "_calculate_relevance",
        "_calculate_confidence",
        "get_agent_info",
        "__init__",
        "_resumir_dados_reais",
        "_load_specialist_prompt",
        "_load_domain_knowledge",
        "_get_domain_keywords",
        "__init__",
        "_calculate_relevance",
        "_resumir_dados_reais",
        "_load_specialist_prompt",
        "_load_domain_knowledge",
        "_get_domain_keywords",
        "__init__",
        "_resumir_dados_reais",
        "_load_specialist_prompt",
        "_load_domain_knowledge",
        "_get_domain_keywords",
        "__init__",
        "_resumir_dados_reais",
        "_load_specialist_prompt",
        "_load_domain_knowledge",
        "_get_domain_keywords",
        "__init__",
        "_resumir_dados_reais",
        "_load_specialist_prompt",
        "_load_domain_knowledge",
        "_get_domain_keywords",
        "__init__",
        "_inicializar_capacidades_basicas",
        "_conectar_integration_manager",
        "_load_specialist_prompt",
        "_load_domain_knowledge",
        "_get_domain_keywords",
        "_log_consulta_estruturada",
        "get_agent_status"
      ]
    },
    "enrichers": {
      "nome": "enrichers",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\enrichers",
      "arquivos_python": [
        "context_enricher.py",
        "semantic_enricher.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": false,
      "total_arquivos": 3,
      "linhas_codigo": 867,
      "classes_encontradas": [
        "ContextEnricher",
        "SemanticEnricher"
      ],
      "funcoes_encontradas": [
        "get_context_enricher",
        "__init__",
        "enrich_context",
        "_enrich_temporal_context",
        "_enrich_semantic_context",
        "_enrich_conversational_context",
        "_enrich_domain_context",
        "_calculate_context_score",
        "get_context_statistics",
        "_get_context_stats",
        "get_semantic_enricher",
        "__init__",
        "enriquecer_mapeamento_com_readers",
        "_enriquecer_via_readme",
        "_enriquecer_via_banco",
        "_obter_mapeamento_atual",
        "_gerar_sugestoes_melhoria",
        "_sugestoes_readme_vs_mapeamento",
        "_sugestoes_qualidade_banco",
        "_sugestoes_campos_similares",
        "_sugestoes_otimizacao",
        "enriquecer_batch_campos",
        "_calcular_estatisticas_batch",
        "_gerar_sugestoes_batch",
        "get_semantic_enricher",
        "get_context_enricher"
      ]
    },
    "integration": {
      "nome": "integration",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\integration",
      "arquivos_python": [
        "external_api_integration.py",
        "integration_manager.py",
        "standalone_integration.py",
        "web_integration.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 5,
      "linhas_codigo": 2557,
      "classes_encontradas": [
        "ExternalAPIClient",
        "ClaudeAPIClient",
        "ExternalAPIIntegration",
        "IntegrationManager",
        "StandaloneContextManager",
        "StandaloneIntegration",
        "WebIntegrationAdapter",
        "WebFlaskRoutes"
      ],
      "funcoes_encontradas": [
        "get_external_api_integration",
        "get_claude_client",
        "create_claude_client",
        "get_claude_integration",
        "processar_com_claude_real",
        "__init__",
        "validate_connection",
        "__init__",
        "from_environment",
        "from_mode",
        "send_message",
        "validate_connection",
        "get_current_config",
        "update_temperature",
        "switch_mode",
        "__init__",
        "_initialize_clients",
        "_get_integration_manager",
        "_validate_claude_connection",
        "_classify_performance",
        "_generate_fallback_response",
        "get_system_status",
        "get_integration_manager",
        "__init__",
        "get_module",
        "get_system_status",
        "get_standalone_integration",
        "get_standalone_adapter",
        "create_standalone_system",
        "__init__",
        "_load_config",
        "get_config",
        "is_available",
        "__init__",
        "_get_integration_manager",
        "_get_external_api_integration",
        "initialize_system",
        "process_query",
        "get_status",
        "health_check",
        "process_request",
        "get_web_integration_adapter",
        "get_flask_routes",
        "create_integration_routes",
        "get_flask_adapter",
        "get_claude_ai_instance",
        "__init__",
        "_get_integration_manager",
        "_get_external_api_integration",
        "process_query_sync",
        "processar_consulta_sync",
        "get_module",
        "get_system_status",
        "get_available_modules",
        "_run_async",
        "claude_client",
        "db_engine",
        "initialization_result",
        "__init__",
        "_create_blueprint",
        "_register_routes",
        "_build_user_context",
        "_record_feedback",
        "get_blueprint",
        "chat_page",
        "api_query",
        "api_feedback",
        "clear_context",
        "health_check",
        "system_status",
        "get_integration_system",
        "get_web_system",
        "get_external_api_system",
        "get_standalone_system",
        "get_claude_ai_instance",
        "get_manager",
        "get_flask_adapter",
        "get_standalone_adapter",
        "initialize_integration_system",
        "validate_integration_architecture",
        "get_global_instance"
      ]
    },
    "learners": {
      "nome": "learners",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\learners",
      "arquivos_python": [
        "adaptive_learning.py",
        "feedback_learning.py",
        "human_in_loop_learning.py",
        "learning_core.py",
        "lifelong_learning.py",
        "pattern_learning.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": false,
      "total_arquivos": 7,
      "linhas_codigo": 2788,
      "classes_encontradas": [
        "AdaptiveLearning",
        "FeedbackAnalysis",
        "CorrectiveAction",
        "FeedbackProcessor",
        "FeedbackType",
        "FeedbackSeverity",
        "UserFeedback",
        "LearningPattern",
        "HumanInLoopLearning",
        "LearningCore",
        "LifelongLearningSystem",
        "PatternLearner"
      ],
      "funcoes_encontradas": [
        "get_adaptive_learning",
        "__init__",
        "learn_from_interaction",
        "get_personalized_recommendations",
        "adapt_response",
        "update_learning_from_feedback",
        "get_user_profile",
        "_initialize_adaptation_rules",
        "_record_interaction",
        "_update_user_profile",
        "_extract_preferences",
        "_detect_patterns",
        "_detect_time_pattern",
        "_detect_query_pattern",
        "_apply_adaptations",
        "_create_adaptation",
        "_calculate_learning_confidence",
        "_get_default_recommendations",
        "_generate_preference_recommendations",
        "_generate_pattern_recommendations",
        "_rank_recommendations",
        "_adapt_detail_level",
        "_adapt_presentation_format",
        "_adapt_language_style",
        "_handle_negative_feedback",
        "_handle_positive_feedback",
        "get_feedback_processor",
        "__init__",
        "_init_feedback_patterns",
        "processar_feedback_completo",
        "analisar_feedback",
        "extrair_acoes_corretivas",
        "aplicar_acao_corretiva",
        "_detectar_sentimento",
        "_extrair_acoes_sugeridas",
        "_classificar_categoria",
        "_calcular_confianca_analise",
        "_calcular_prioridade",
        "_gerar_acoes_correcao",
        "_gerar_acoes_melhoria",
        "_gerar_acoes_clarificacao",
        "_gerar_acoes_mapeamento",
        "_gerar_acoes_busca",
        "_aplicar_update_mapping",
        "_aplicar_improve_search",
        "_aplicar_enhance_context",
        "_aplicar_adjust_parameters",
        "_salvar_feedback_analise",
        "get_human_learning_system",
        "capture_user_feedback",
        "get_learning_insights",
        "__init__",
        "capture_feedback",
        "_process_critical_feedback",
        "_analyze_feedback_patterns",
        "_create_learning_pattern",
        "_add_to_improvement_queue",
        "get_improvement_suggestions",
        "apply_improvement",
        "generate_learning_report",
        "_analyze_trends",
        "_calculate_satisfaction_score",
        "get_learning_core",
        "get_lifelong_learning",
        "__init__",
        "pattern_learner",
        "feedback_processor",
        "knowledge_memory",
        "aprender_com_interacao",
        "aplicar_conhecimento",
        "obter_status_sistema",
        "_atualizar_metricas",
        "_salvar_historico_aprendizado",
        "_calcular_score_aprendizado",
        "_gerar_recomendacoes_aplicacao",
        "_avaliar_saude_sistema",
        "get_lifelong_learning",
        "__init__",
        "aprender_com_interacao",
        "aplicar_conhecimento",
        "apply_learning",
        "obter_estatisticas_aprendizado",
        "get_pattern_learner",
        "__init__",
        "extrair_e_salvar_padroes",
        "_extrair_padroes_multipos",
        "_extrair_padroes_periodo",
        "_extrair_padroes_dominio",
        "_extrair_padroes_intencao",
        "_extrair_padroes_entidades",
        "_extrair_padroes_linguisticos",
        "_salvar_padrao_otimizado",
        "buscar_padroes_aplicaveis",
        "_extrair_palavras_chave_dominio",
        "_detectar_intencao_avancada",
        "_extrair_termos_cliente",
        "_classificar_tipo_pergunta",
        "_safe_json_dumps",
        "get_learning_core",
        "get_human_in_loop_learning",
        "get_lifelong_learning",
        "get_adaptive_learning",
        "get_feedback_processor",
        "get_pattern_learner"
      ]
    },
    "loaders": {
      "nome": "loaders",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\loaders",
      "arquivos_python": [
        "context_loader.py",
        "database_loader.py",
        "loader_manager.py",
        "__init__.py",
        "agendamentos_loader.py",
        "embarques_loader.py",
        "entregas_loader.py",
        "faturamento_loader.py",
        "fretes_loader.py",
        "pedidos_loader.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 11,
      "linhas_codigo": 2620,
      "classes_encontradas": [
        "Logger",
        "ContextLoader",
        "DatabaseConfig",
        "DatabaseLoader",
        "LoaderManager",
        "AgendamentosLoader",
        "EmbarquesLoader",
        "EntregasLoader",
        "FaturamentoLoader",
        "FretesLoader",
        "PedidosLoader"
      ],
      "funcoes_encontradas": [
        "_carregar_dados_pedidos",
        "_carregar_dados_fretes",
        "_carregar_dados_transportadoras",
        "_carregar_dados_embarques",
        "_carregar_dados_faturamento",
        "_carregar_dados_financeiro",
        "get_contextloader",
        "info",
        "error",
        "warning",
        "__init__",
        "_obter_filtros_usuario",
        "_calcular_estatisticas_especificas",
        "_carregar_entregas_banco",
        "_carregar_contexto_inteligente",
        "_carregar_todos_clientes_sistema",
        "get_database_loader",
        "__init__",
        "_initialize_connection",
        "is_available",
        "load_data",
        "load_table_data",
        "_get_mock_data",
        "get_connection_info",
        "close",
        "__del__",
        "get_loader_manager",
        "load_domain_data",
        "load_multiple_data",
        "get_best_loader",
        "__init__",
        "_initialize_loaders",
        "_get_loader",
        "load_data_by_domain",
        "load_multiple_domains",
        "get_best_loader_for_query",
        "get_available_domains",
        "get_loader_status",
        "_error_response",
        "__str__",
        "__repr__",
        "get_context_loader",
        "get_database_loader",
        "get_loader_manager",
        "get_data_manager",
        "get_domain_loaders",
        "get_all_loaders",
        "load_context",
        "load_database",
        "load_data",
        "load_domain_data",
        "get_agendamentos_loader",
        "__init__",
        "load_agendamentos_data",
        "_build_agendamentos_query",
        "_execute_query",
        "_format_agendamentos_results",
        "_empty_result",
        "get_embarques_loader",
        "__init__",
        "load_embarques_data",
        "_build_embarques_query",
        "_execute_query",
        "_format_embarques_results",
        "_empty_result",
        "get_entregas_loader",
        "__init__",
        "load_entregas_data",
        "_build_entregas_query",
        "_execute_query",
        "_format_entregas_results",
        "_empty_result",
        "get_faturamento_loader",
        "__init__",
        "load_faturamento_data",
        "_build_faturamento_query",
        "_execute_query",
        "_format_faturamento_results",
        "_empty_result",
        "get_fretes_loader",
        "__init__",
        "load_fretes_data",
        "_build_fretes_query",
        "_execute_query",
        "_format_fretes_results",
        "_empty_result",
        "get_pedidos_loader",
        "__init__",
        "load_pedidos_data",
        "_build_pedidos_query",
        "_execute_query",
        "_format_pedidos_results",
        "_empty_result"
      ]
    },
    "mappers": {
      "nome": "mappers",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\mappers",
      "arquivos_python": [
        "context_mapper.py",
        "field_mapper.py",
        "mapper_manager.py",
        "query_mapper.py",
        "__init__.py",
        "base_mapper.py",
        "embarques_mapper.py",
        "faturamento_mapper.py",
        "monitoramento_mapper.py",
        "pedidos_mapper.py",
        "transportadoras_mapper.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 12,
      "linhas_codigo": 2325,
      "classes_encontradas": [
        "ContextMapping",
        "ContextMapper",
        "FieldType",
        "FieldMapping",
        "FieldMapper",
        "MapperManager",
        "QueryType",
        "QueryMapping",
        "QueryMapper",
        "FallbackMapper",
        "BaseMapper",
        "EmbarquesMapper",
        "FaturamentoMapper",
        "MonitoramentoMapper",
        "PedidosMapper",
        "TransportadorasMapper"
      ],
      "funcoes_encontradas": [
        "get_context_mapper",
        "__init__",
        "_setup_default_mappings",
        "add_mapping",
        "map_context",
        "get_field_mapper",
        "__init__",
        "_setup_default_transformers",
        "_setup_default_validators",
        "add_mapping",
        "map_fields",
        "create_pedidos_mapping",
        "get_mapper_manager",
        "get_semantic_mapper",
        "get_mapeamento_semantico",
        "__init__",
        "analisar_consulta_semantica",
        "_buscar_fuzzy_integrado",
        "_extrair_termos_compostos",
        "_calcular_confianca_integrada",
        "_agrupar_por_mapper",
        "detectar_dominio_principal",
        "obter_estatisticas_mappers",
        "get_query_mapper",
        "__init__",
        "_setup_default_mappings",
        "add_mapping",
        "map_query",
        "_pattern_matches",
        "_extract_parameters",
        "_apply_template",
        "map_query_fields",
        "analyze_query_mapping",
        "get_best_mapper_for_domain",
        "get_mapper_manager",
        "get_context_mapper",
        "get_field_mapper",
        "get_query_mapper",
        "get_semantic_mapper",
        "__init__",
        "buscar_mapeamento",
        "analisar_consulta_semantica",
        "map_fields",
        "get_best_mapper_for_query",
        "__init__",
        "_criar_mapeamentos",
        "buscar_mapeamento",
        "buscar_mapeamento_fuzzy",
        "listar_todos_campos",
        "listar_termos_naturais",
        "gerar_estatisticas",
        "validar_mapeamentos",
        "__str__",
        "__repr__",
        "__init__",
        "_criar_mapeamentos",
        "__init__",
        "_criar_mapeamentos",
        "__init__",
        "_criar_mapeamentos",
        "__init__",
        "_criar_mapeamentos",
        "map_query_to_filters",
        "get_semantic_suggestions",
        "__init__",
        "_criar_mapeamentos",
        "get_domain_mapper"
      ]
    },
    "memorizers": {
      "nome": "memorizers",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\memorizers",
      "arquivos_python": [
        "context_memory.py",
        "conversation_memory.py",
        "knowledge_memory.py",
        "memory_manager.py",
        "session_memory.py",
        "system_memory.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 7,
      "linhas_codigo": 2515,
      "classes_encontradas": [
        "ContextMemory",
        "ConversationMemory",
        "KnowledgeMemory",
        "MemoryManager",
        "SessionMemory",
        "SystemMemory"
      ],
      "funcoes_encontradas": [
        "get_context_memory",
        "__init__",
        "store_context",
        "retrieve_context",
        "add_message",
        "get_conversation_history",
        "clear_context",
        "get_active_sessions",
        "cleanup_expired_contexts",
        "_compress_context",
        "get_memory_stats",
        "get_conversation_memory",
        "__init__",
        "start_conversation",
        "end_conversation",
        "add_user_message",
        "add_assistant_message",
        "get_conversation_summary",
        "_calculate_duration",
        "get_knowledge_memory",
        "__init__",
        "aprender_mapeamento_cliente",
        "descobrir_grupo_empresarial",
        "buscar_grupos_aplicaveis",
        "buscar_mapeamentos_aplicaveis",
        "obter_estatisticas_aprendizado",
        "_extrair_termos_cliente",
        "_calcular_qualidade_geral",
        "get_status",
        "health_check",
        "_verificar_acesso_banco",
        "get_memory_manager",
        "__init__",
        "store_conversation_context",
        "retrieve_conversation_context",
        "store_system_configuration",
        "retrieve_system_configuration",
        "learn_client_mapping",
        "discover_business_group",
        "add_conversation_message",
        "get_conversation_history",
        "start_conversation",
        "end_conversation",
        "get_conversation_summary",
        "record_performance_metric",
        "get_system_overview",
        "cleanup_expired_data",
        "clear_all_context",
        "get_active_sessions",
        "get_memory_health",
        "get_session_memory",
        "store_session_data",
        "get_session_data",
        "__init__",
        "_ensure_table_exists",
        "store_session",
        "get_session",
        "get_sessions_by_user",
        "search_sessions",
        "cleanup_old_sessions",
        "get_session_stats",
        "update_session_metadata",
        "get_db",
        "get_system_memory",
        "__init__",
        "store_system_config",
        "retrieve_system_config",
        "store_component_state",
        "retrieve_component_state",
        "store_performance_metric",
        "get_system_overview",
        "get_component_status",
        "get_performance_summary",
        "cleanup_expired_data",
        "_calculate_uptime",
        "get_context_memory",
        "get_system_memory",
        "get_knowledge_memory",
        "get_memory_manager",
        "get_conversation_memory",
        "get_session_memory",
        "memorize_context",
        "recall_context",
        "get_memory_status"
      ]
    },
    "orchestrators": {
      "nome": "orchestrators",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\orchestrators",
      "arquivos_python": [
        "analise_orchestrators_tempo_real.py",
        "main_orchestrator.py",
        "orchestrator_manager.py",
        "session_orchestrator.py",
        "teste_maestro.py",
        "teste_validacao_orchestrators.py",
        "workflow_orchestrator.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 8,
      "linhas_codigo": 3809,
      "classes_encontradas": [
        "OrchestrationMode",
        "OrchestrationStep",
        "MainOrchestrator",
        "MockComponent",
        "EnrichersWrapper",
        "OrchestrationMode",
        "OrchestratorType",
        "OrchestrationTask",
        "OrchestratorManager",
        "SessionPriority",
        "MockSessionMemory",
        "MockPerformanceAnalyzer",
        "SessionStatus",
        "SessionPriority",
        "SessionContext",
        "SessionOrchestrator",
        "WorkflowOrchestrator"
      ],
      "funcoes_encontradas": [
        "analisar_init_orchestrators",
        "analisar_orchestrator_manager",
        "analisar_main_orchestrator",
        "analisar_session_orchestrator",
        "analisar_workflow_orchestrator",
        "gerar_relatorio_completo",
        "exibir_resumo_executivo",
        "get_main_orchestrator",
        "__init__",
        "coordinator_manager",
        "auto_command_processor",
        "security_guard",
        "suggestions_manager",
        "_setup_default_workflows",
        "register_component",
        "add_workflow",
        "execute_workflow",
        "_validate_workflow_security",
        "_log_workflow_audit",
        "_execute_intelligent_coordination",
        "_execute_natural_commands",
        "_execute_intelligent_suggestions",
        "_execute_analyze_query",
        "_execute_full_processing",
        "_execute_generic_workflow",
        "_preload_essential_components",
        "_resolve_parameters",
        "__init__",
        "analyze_intention",
        "map_semantic_context",
        "load_relevant_data",
        "analyze_comprehensive",
        "process_context",
        "enrich_data",
        "validate_result",
        "coordinate_query",
        "process_natural_command",
        "generate_intelligent_suggestions",
        "manage_conversation",
        "validate_user_access",
        "validate_input",
        "sanitize_input",
        "generate_token",
        "get_security_info",
        "__init__",
        "enrich_data",
        "get_orchestrator_manager",
        "orchestrate_system_operation",
        "get_orchestration_status",
        "get_system_orchestrator",
        "__init__",
        "security_guard",
        "_initialize_orchestrators",
        "orchestrate_operation",
        "_validate_operation_security",
        "_log_security_audit",
        "_detect_appropriate_orchestrator",
        "_execute_orchestration_task",
        "_execute_session_operation",
        "_execute_workflow_operation",
        "_execute_generic_operation",
        "_record_operation",
        "get_orchestrator_status",
        "health_check",
        "get_operation_history",
        "clear_history",
        "get_session_orchestrator",
        "create_ai_session",
        "complete_ai_session",
        "__init__",
        "store_session",
        "update_session_metadata",
        "get_session",
        "analyze",
        "get_metrics",
        "is_expired",
        "is_active",
        "update_activity",
        "__init__",
        "learning_core",
        "security_guard",
        "conversation_manager",
        "_get_session_memory_safe",
        "_get_performance_analyzer_safe",
        "create_session",
        "initialize_session",
        "execute_session_workflow",
        "_execute_learning_workflow",
        "_execute_conversation_workflow",
        "apply_learned_knowledge",
        "complete_session",
        "terminate_session",
        "get_session",
        "get_user_sessions",
        "cleanup_expired_sessions",
        "get_session_stats",
        "register_cleanup_handler",
        "_execute_initialization_workflow",
        "_execute_workflow",
        "_execute_cleanup",
        "_get_current_user_id",
        "_get_user_agent",
        "_validate_session_security",
        "_log_session_audit",
        "get_session_memory",
        "get_performance_analyzer",
        "get_current_user",
        "testar_orchestrator_manager",
        "testar_main_orchestrator",
        "testar_session_orchestrator",
        "testar_workflow_orchestrator",
        "testar_integracao_completa",
        "get_workflow_orchestrator",
        "__init__",
        "_registrar_templates_padrao",
        "executar_workflow",
        "_executar_etapas_workflow",
        "_executar_etapa",
        "_executor_padrao",
        "registrar_executor",
        "obter_status_workflow",
        "listar_workflows_ativos",
        "cancelar_workflow",
        "limpar_workflows_concluidos",
        "obter_estatisticas",
        "get_orchestrator_manager",
        "get_main_orchestrator",
        "get_session_orchestrator",
        "get_workflow_orchestrator",
        "orchestrate_operation",
        "get_system_status",
        "diagnose_orchestrator_module"
      ]
    },
    "processors": {
      "nome": "processors",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\processors",
      "arquivos_python": [
        "base.py",
        "context_processor.py",
        "data_processor.py",
        "intelligence_processor.py",
        "processor_manager.py",
        "query_processor.py",
        "response_formatter.py",
        "response_processor.py",
        "semantic_loop_processor.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 10,
      "linhas_codigo": 3526,
      "classes_encontradas": [
        "ProcessorBase",
        "ContextProcessor",
        "DataProcessor",
        "IntelligenceProcessor",
        "ProcessorManager",
        "QueryProcessor",
        "ResponseFormatter",
        "ResponseProcessor",
        "SemanticLoopProcessor"
      ],
      "funcoes_encontradas": [
        "get_base_processor",
        "format_response",
        "__init__",
        "_extract_filters",
        "_get_cached_result",
        "get_cache_stats",
        "_format_weight",
        "_format_percentage",
        "_create_summary_stats",
        "_handle_error",
        "get_contextprocessor",
        "__init__",
        "_build_contexto_por_intencao",
        "_descrever_contexto_carregado",
        "carregar_contexto_inteligente",
        "_detectar_dominio",
        "_carregar_dados_entregas",
        "_carregar_dados_fretes",
        "_carregar_dados_pedidos",
        "_carregar_dados_financeiro",
        "_carregar_dados_geral",
        "_serialize_entrega",
        "_serialize_frete",
        "_serialize_pedido",
        "_serialize_pendencia",
        "get_data_processor",
        "__init__",
        "process_data",
        "batch_process",
        "transform_schema",
        "aggregate_data",
        "filter_data",
        "_initialize_default_processors",
        "_standard_processing",
        "_clean_data",
        "_clean_dict",
        "_transform_data",
        "_apply_transformation",
        "_transform_to_uppercase",
        "_transform_to_lowercase",
        "_transform_date_format",
        "_aggregate_data",
        "_normalize_data",
        "_normalize_dict",
        "_custom_processing",
        "_validate_input_data",
        "_validate_output_data",
        "_generate_processing_statistics",
        "_update_global_stats",
        "_transform_dict_schema",
        "_combine_processed_data",
        "_apply_filters",
        "get_intelligence_processor",
        "__init__",
        "process_intelligence",
        "synthesize_multi_source_intelligence",
        "make_intelligent_decision",
        "analyze_intelligence_trends",
        "_initialize_intelligence_modules",
        "_preprocess_for_intelligence",
        "_normalize_dict_for_intelligence",
        "_generate_insights",
        "_detect_patterns",
        "_make_decisions",
        "_generate_recommendations",
        "_synthesize_intelligence",
        "_custom_intelligence_processing",
        "_calculate_confidence",
        "_generate_auto_recommendations",
        "_learn_from_processing",
        "_update_intelligence_metrics",
        "_extract_data_insights",
        "_extract_pattern_insights",
        "_extract_statistical_insights",
        "_detect_frequency_patterns",
        "_analyze_decision_factors",
        "_determine_primary_decision",
        "_assess_decision_confidence",
        "_generate_immediate_actions",
        "_generate_strategic_recommendations",
        "_integrate_insights",
        "_comprehensive_synthesis",
        "_focused_synthesis",
        "_consensus_synthesis",
        "_detect_conflicts",
        "_calculate_confidence_distribution",
        "_generate_synthetic_recommendations",
        "_evaluate_option",
        "_calculate_decision_confidence",
        "_generate_decision_reasoning",
        "_register_decision",
        "_detect_trends",
        "_calculate_trend_strength",
        "_determine_trend_direction",
        "_detect_anomalies",
        "_make_trend_predictions",
        "_calculate_confidence_intervals",
        "_analyze_trends",
        "get_processor_manager",
        "get_processormanager",
        "get_manager",
        "__init__",
        "process_context",
        "process_response",
        "process_semantic_loop",
        "process_query",
        "get_processor_chain",
        "execute_processing_chain",
        "get_status",
        "health_check",
        "get_detailed_health_report",
        "reload_processors",
        "cleanup_resources",
        "__str__",
        "__repr__",
        "get_query_processor",
        "__init__",
        "process_query",
        "_process_with_claude",
        "_build_system_prompt",
        "format_standard_response",
        "format_error_response",
        "format_excel_response",
        "get_responseprocessor",
        "generate_api_fallback_response",
        "__init__",
        "_init_anthropic_client",
        "gerar_resposta_otimizada",
        "_gerar_resposta_inicial",
        "_construir_prompt_otimizado",
        "_avaliar_qualidade_resposta",
        "_classificar_qualidade",
        "_melhorar_resposta",
        "_validar_resposta_final",
        "_processar_consulta_padrao",
        "_get_error_response",
        "get_semantic_loop_processor",
        "__init__",
        "_expand_unmapped_terms",
        "_clarify_domain_context",
        "_get_error_response",
        "get_context_processor",
        "get_query_processor",
        "get_data_processor",
        "get_intelligence_processor",
        "process_data",
        "process_query",
        "process_context",
        "process_intelligence",
        "synthesize_multi_source_intelligence",
        "batch_process_data",
        "get_processors_status"
      ]
    },
    "providers": {
      "nome": "providers",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\providers",
      "arquivos_python": [
        "context_provider.py",
        "data_provider.py",
        "provider_manager.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 4,
      "linhas_codigo": 1536,
      "classes_encontradas": [
        "ContextProvider",
        "DataProvider",
        "ProviderRequest",
        "ProviderManager",
        "FallbackProvider"
      ],
      "funcoes_encontradas": [
        "get_context_provider",
        "__init__",
        "get_context",
        "provide_user_context",
        "provide_temporal_context",
        "register_context_source",
        "update_context_cache",
        "clear_context_cache",
        "_initialize_default_sources",
        "_collect_basic_context",
        "_collect_detailed_context",
        "_collect_complete_context",
        "_call_context_source",
        "_enrich_context",
        "_filter_context",
        "_generate_cache_key",
        "_get_cached_context",
        "_cache_context",
        "_provide_system_context",
        "_provide_session_context",
        "_provide_query_context",
        "_detect_query_type",
        "_assess_query_complexity",
        "_extract_simple_entities",
        "_detect_simple_intent",
        "_get_user_profile",
        "_get_user_preferences",
        "_get_user_history",
        "_get_user_permissions",
        "_collect_temporal_data",
        "_analyze_temporal_trends",
        "_detect_temporal_patterns",
        "get_data_provider",
        "__init__",
        "get_data_by_domain",
        "_get_entregas_data",
        "_get_pedidos_data",
        "_get_embarques_data",
        "_get_faturamento_data",
        "_get_transportadoras_data",
        "_get_fretes_data",
        "_serialize_entrega",
        "_serialize_pedido",
        "_serialize_embarque",
        "_serialize_faturamento",
        "_serialize_transportadora",
        "_serialize_frete",
        "get_provider_manager",
        "provide_data",
        "provide_context",
        "__init__",
        "_initialize_providers",
        "provide",
        "_detect_provision_type",
        "_provide_data_only",
        "_provide_context_only",
        "_provide_data_with_context",
        "_provide_context_with_data",
        "_provide_mixed",
        "_dict_to_request",
        "get_best_provider_for_query",
        "get_provider_status",
        "clear_cache",
        "provide_integrated_data",
        "provide_integrated_context",
        "provide_mixed_intelligence",
        "get_best_provider_recommendation",
        "get_all_providers_status",
        "get_provider_manager",
        "get_context_provider",
        "get_data_provider",
        "provide_data",
        "provide_context",
        "__init__",
        "get_context",
        "get_data_by_domain",
        "provide",
        "get_provider_status"
      ]
    },
    "scanning": {
      "nome": "scanning",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\scanning",
      "arquivos_python": [
        "code_scanner.py",
        "database_manager.py",
        "database_scanner.py",
        "file_scanner.py",
        "project_scanner.py",
        "readme_scanner.py",
        "scanning_manager.py",
        "structure_scanner.py",
        "__init__.py",
        "auto_mapper.py",
        "database_connection.py",
        "data_analyzer.py",
        "field_searcher.py",
        "metadata_reader.py",
        "relationship_mapper.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 16,
      "linhas_codigo": 6061,
      "classes_encontradas": [
        "CodeScanner",
        "DatabaseManager",
        "DatabaseScanner",
        "FileScanner",
        "ProjectScanner",
        "ReadmeScanner",
        "ScanningManager",
        "StructureScanner",
        "AutoMapper",
        "DatabaseConnection",
        "DataAnalyzer",
        "FieldSearcher",
        "MetadataReader",
        "RelationshipMapper"
      ],
      "funcoes_encontradas": [
        "get_code_scanner",
        "__init__",
        "discover_all_forms",
        "discover_all_routes",
        "_parse_forms_file",
        "_is_flask_form",
        "_parse_form_field",
        "_extract_form_field_info",
        "_extract_validators",
        "_extract_dict_value",
        "_extract_choices",
        "_extract_simple_value",
        "_parse_routes_file",
        "_extract_blueprint_name",
        "_extract_routes_from_lines",
        "_extract_url_pattern",
        "_extract_route_methods",
        "_extract_function_info",
        "_analyze_route_methods",
        "__init__",
        "listar_tabelas",
        "obter_campos_tabela",
        "analisar_dados_reais",
        "obter_relacionamentos",
        "buscar_campos_por_tipo",
        "buscar_campos_por_nome",
        "gerar_mapeamento_automatico",
        "esta_disponivel",
        "obter_estatisticas_gerais",
        "analisar_tabela_completa",
        "mapear_grafo_relacionamentos",
        "buscar_campos_similares",
        "gerar_mapeamento_multiplas_tabelas",
        "obter_caminho_relacionamentos",
        "limpar_cache",
        "recarregar_conexao",
        "obter_info_modulos",
        "_normalizar_tipo_sqlalchemy",
        "_calcular_score_match",
        "_gerar_termos_automaticos",
        "__str__",
        "__repr__",
        "get_database_scanner",
        "__init__",
        "discover_database_schema",
        "_get_database_version",
        "_get_check_constraints",
        "_get_table_statistics",
        "_get_postgresql_statistics",
        "_get_mysql_statistics",
        "_get_sqlite_statistics",
        "_analyze_relationships",
        "_get_performance_info",
        "_get_postgresql_performance",
        "_get_mysql_performance",
        "get_file_scanner",
        "__init__",
        "discover_all_templates",
        "_extract_template_variables",
        "_extract_template_extends",
        "_extract_template_blocks",
        "_extract_template_includes",
        "read_file_content",
        "list_directory_contents",
        "search_in_files",
        "_extract_match_context",
        "_format_search_results",
        "get_project_scanner",
        "init_project_scanner",
        "init_claude_project_scanner",
        "__init__",
        "structure_scanner",
        "code_scanner",
        "file_scanner",
        "database_scanner",
        "scan_complete_project",
        "scan_project_light",
        "_generate_scan_summary",
        "_generate_light_summary",
        "_generate_scan_metadata",
        "_calculate_quality_metrics",
        "_generate_recommendations",
        "_get_partial_scan_data",
        "get_scanner_status",
        "reset_scanner_data",
        "__init__",
        "_localizar_readme",
        "_carregar_readme",
        "buscar_termos_naturais",
        "_extrair_termos_da_string",
        "_extrair_secao_modelo",
        "_buscar_campo_na_secao",
        "obter_informacoes_campo",
        "listar_modelos_disponiveis",
        "validar_estrutura_readme",
        "esta_disponivel",
        "__str__",
        "__repr__",
        "init_project_scanner_legacy",
        "get_project_scanner_legacy",
        "__init__",
        "project_scanner",
        "scan_complete_project",
        "read_file_content",
        "list_directory_contents",
        "search_in_files",
        "scan_project_light",
        "discover_project_structure",
        "discover_all_models",
        "discover_all_forms",
        "discover_all_routes",
        "discover_all_templates",
        "get_scanner_status",
        "get_modulos_especializados",
        "executar_diagnostico_completo",
        "reset_scanner",
        "_discover_project_structure",
        "_discover_all_models",
        "_discover_all_forms",
        "_discover_all_routes",
        "_discover_all_templates",
        "_generate_scan_summary",
        "__str__",
        "__repr__",
        "get_structure_scanner",
        "__init__",
        "discover_project_structure",
        "discover_all_models",
        "_discover_models_via_database",
        "_discover_models_via_files",
        "_parse_models_file",
        "_is_sqlalchemy_model",
        "_extract_table_name",
        "_parse_model_assignment",
        "_extract_field_info",
        "_extract_column_type",
        "_extract_boolean_value",
        "_extract_string_value",
        "_extract_value",
        "get_scanning_manager",
        "get_database_manager",
        "get_project_scanner",
        "get_database_scanner",
        "get_readme_scanner",
        "scan_project",
        "scan_database",
        "get_scanning_status",
        "__init__",
        "set_metadata_reader",
        "set_data_analyzer",
        "gerar_mapeamento_automatico",
        "_mapear_campo_automatico",
        "_gerar_nome_modelo",
        "_gerar_termos_automaticos",
        "_load_term_patterns",
        "_obter_termos_por_tipo",
        "_calcular_confianca_mapeamento",
        "_identificar_categoria_semantica",
        "_melhorar_termos_com_analise",
        "_ajustar_confianca_com_analise",
        "_gerar_sugestoes_melhoria",
        "gerar_mapeamento_multiplas_tabelas",
        "limpar_cache",
        "is_available",
        "__init__",
        "_establish_connection",
        "_try_flask_connection",
        "_try_direct_connection",
        "_try_env_connection",
        "_initialize_inspector",
        "is_connected",
        "is_inspector_available",
        "get_engine",
        "get_session",
        "get_inspector",
        "test_connection",
        "get_connection_info",
        "close_connection",
        "__del__",
        "__init__",
        "set_engine",
        "analisar_dados_reais",
        "_analisar_estatisticas_basicas",
        "_obter_exemplos_valores",
        "_analisar_distribuicao",
        "_analisar_comprimento_valores",
        "_analisar_padroes",
        "_verificar_padrao_numerico",
        "_verificar_padrao_data",
        "_verificar_padrao_email",
        "_verificar_padrao_url",
        "_get_timestamp",
        "analisar_tabela_completa",
        "limpar_cache",
        "is_available",
        "__init__",
        "set_inspector",
        "set_metadata_reader",
        "buscar_campos_por_tipo",
        "_obter_tipos_similares",
        "buscar_campos_por_nome",
        "_calcular_score_match_nome",
        "_determinar_tipo_match",
        "buscar_campos_chave_primaria",
        "buscar_campos_obrigatorios",
        "buscar_campos_por_caracteristica",
        "buscar_campos_por_tamanho",
        "buscar_campos_similares",
        "_calcular_similaridade_campos",
        "_analisar_fatores_similaridade",
        "limpar_cache",
        "is_available",
        "__init__",
        "set_inspector",
        "listar_tabelas",
        "obter_campos_tabela",
        "_normalizar_tipo_sqlalchemy",
        "_obter_indices_tabela",
        "_obter_constraints_tabela",
        "obter_tipos_campo_disponiveis",
        "obter_estatisticas_tabelas",
        "limpar_cache",
        "is_available",
        "__init__",
        "set_inspector",
        "obter_relacionamentos",
        "_buscar_relacionamentos_entrada",
        "obter_tabelas_relacionadas",
        "mapear_grafo_relacionamentos",
        "_calcular_estatisticas_grafo",
        "_identificar_clusters",
        "_explorar_cluster",
        "_contar_relacionamentos_cluster",
        "obter_caminho_relacionamentos",
        "limpar_cache",
        "is_available"
      ]
    },
    "security": {
      "nome": "security",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\security",
      "arquivos_python": [
        "security_guard.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": false,
      "total_arquivos": 2,
      "linhas_codigo": 447,
      "classes_encontradas": [
        "SecurityGuard",
        "FallbackSecurityGuard"
      ],
      "funcoes_encontradas": [
        "get_security_guard",
        "validate_user_access",
        "validate_input",
        "sanitize_input",
        "__init__",
        "validate_user_access",
        "validate_input",
        "validate_query",
        "sanitize_input",
        "generate_token",
        "validate_token",
        "_is_user_authenticated",
        "_is_user_admin",
        "_validate_resource_access",
        "get_security_info",
        "secure_validate",
        "get_security_status",
        "get_security_guard",
        "__init__",
        "validate_user_access",
        "validate_input",
        "sanitize_input",
        "get_security_info"
      ]
    },
    "suggestions": {
      "nome": "suggestions",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\suggestions",
      "arquivos_python": [
        "suggestions_manager.py",
        "suggestion_engine.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 3,
      "linhas_codigo": 1642,
      "classes_encontradas": [
        "SuggestionsManager",
        "Suggestion",
        "SuggestionsEngine"
      ],
      "funcoes_encontradas": [
        "get_suggestions_manager",
        "__init__",
        "generate_suggestions",
        "register_suggestion_engine",
        "submit_feedback",
        "get_suggestion_recommendations",
        "optimize_suggestion_performance",
        "_initialize_default_engines",
        "_analyze_context",
        "_call_suggestion_engine",
        "_prioritize_suggestions",
        "_enrich_suggestions",
        "_generate_cache_key",
        "_get_cached_suggestions",
        "_cache_suggestions",
        "_process_feedback",
        "_update_metrics",
        "_contextual_suggestions_engine",
        "_history_based_engine",
        "_popularity_based_engine",
        "_assess_query_complexity",
        "_user_has_history",
        "_calculate_contextual_relevance",
        "_get_historical_score",
        "_get_source_score",
        "_categorize_suggestion",
        "_generate_explanation",
        "_requires_immediate_action",
        "_assess_suggestion_complexity",
        "_boost_similar_suggestions",
        "_decrease_similar_suggestions",
        "_generate_personalized_suggestions",
        "_generate_trending_suggestions",
        "_generate_contextual_suggestions",
        "_generate_quick_actions",
        "_optimize_engines",
        "_optimize_cache",
        "_adjust_configurations",
        "_cleanup_old_data",
        "init_suggestion_engine",
        "get_suggestions_engine",
        "to_dict",
        "__init__",
        "_initialize_base_suggestions",
        "generate_suggestions",
        "get_intelligent_suggestions",
        "_is_redis_available",
        "_generate_suggestions",
        "_validate_suggestions_list",
        "_generate_data_based_suggestions",
        "_get_data_analyzer",
        "_get_contextual_suggestions",
        "_get_fallback_suggestions",
        "_generate_cache_key",
        "get_suggestions_engine",
        "get_suggestions_manager",
        "generate_suggestions",
        "register_suggestion_engine",
        "submit_suggestion_feedback",
        "get_suggestion_recommendations",
        "optimize_suggestions_performance",
        "get_suggestions_status"
      ]
    },
    "tools": {
      "nome": "tools",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\tools",
      "arquivos_python": [
        "tools_manager.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 2,
      "linhas_codigo": 209,
      "classes_encontradas": [
        "ToolsManager"
      ],
      "funcoes_encontradas": [
        "get_toolsmanager",
        "get_manager",
        "__init__",
        "_initialize_components",
        "get_available_tools",
        "execute_tool",
        "register_tool",
        "validate_tool",
        "get_status",
        "health_check",
        "__str__",
        "__repr__"
      ]
    },
    "utils": {
      "nome": "utils",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\utils",
      "arquivos_python": [
        "agent_types.py",
        "base_classes.py",
        "base_context_manager.py",
        "data_manager.py",
        "flask_context_wrapper.py",
        "flask_fallback.py",
        "legacy_compatibility.py",
        "performance_cache.py",
        "processor_registry.py",
        "response_utils.py",
        "utils_manager.py",
        "validation_utils.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 13,
      "linhas_codigo": 3465,
      "classes_encontradas": [
        "AgentType",
        "AgentResponse",
        "ValidationResult",
        "OperationRecord",
        "BaseOrchestrator",
        "BaseProcessor",
        "FallbackCache",
        "FallbackGrupoDetector",
        "FallbackModel",
        "BaseContextManager",
        "DataManager",
        "FallbackSistemaRealData",
        "FallbackContextLoader",
        "FlaskContextWrapper",
        "FlaskFallback",
        "_ExternalAPIIntegrationFallback",
        "ScannersCache",
        "ProcessorRegistry",
        "FallbackProcessor",
        "ResponseUtils",
        "FlaskContextWrapper",
        "UtilsManager",
        "BaseValidationUtils"
      ],
      "funcoes_encontradas": [
        "format_response_advanced",
        "create_processor_summary",
        "get_base_processor",
        "__init__",
        "register_component",
        "get_component",
        "get_status",
        "health_check",
        "__init__",
        "_init_processor",
        "_check_dependencies",
        "_validate_input",
        "_sanitize_input",
        "_log_operation",
        "_handle_error",
        "_get_cached_result",
        "_set_cached_result",
        "_generate_cache_key",
        "_format_date_br",
        "_format_currency",
        "_format_weight",
        "_format_percentage",
        "get_status",
        "health_check",
        "_safe_cache_set",
        "get",
        "set",
        "delete",
        "exists",
        "expire",
        "detectar",
        "__init__",
        "__repr__",
        "create_base_context_manager",
        "__init__",
        "_get_config",
        "_set_config",
        "is_available",
        "get_config_dict",
        "set_initialized",
        "clear_config",
        "update_config",
        "__repr__",
        "get_datamanager",
        "get_manager",
        "__init__",
        "_initialize_components",
        "load_data",
        "load_context",
        "provide_data",
        "get_loader",
        "get_provider",
        "validate_client",
        "get_best_loader",
        "get_status",
        "health_check",
        "__str__",
        "__repr__",
        "__init__",
        "__init__",
        "get_flask_context_wrapper",
        "__init__",
        "_init_flask_context",
        "get_app_config",
        "get_db_session",
        "is_flask_available",
        "get_flask_context_info",
        "execute_in_app_context",
        "get_flask_fallback",
        "get_app",
        "get_model",
        "get_db",
        "get_current_user",
        "is_flask_available",
        "get_config",
        "__init__",
        "_initialize_fallback",
        "_create_mock_flask",
        "_create_mock_model",
        "get_app",
        "get_model",
        "get_db",
        "_create_mock_db",
        "get_current_user",
        "_create_mock_user",
        "is_flask_available",
        "get_config",
        "processar_consulta_modular",
        "get_nlp_analyzer",
        "processar_com_claude_real",
        "get_claude_integration",
        "get_nlp_enhanced_analyzer",
        "_processar_com_claude_real_fallback",
        "_get_claude_integration_fallback",
        "_get_nlp_enhanced_analyzer_fallback",
        "get_cache",
        "cached_readme_scanner",
        "cached_database_scanner",
        "cached_result",
        "performance_monitor",
        "__new__",
        "__init__",
        "get_readme_scanner",
        "get_database_scanner",
        "get_cached_result",
        "set_cached_result",
        "_remove_from_cache",
        "_cleanup_expired_cache",
        "get_cache_stats",
        "clear_cache",
        "invalidate_scanner",
        "wrapper",
        "get_processor_registry",
        "__init__",
        "_initialize_processors",
        "_register_processor",
        "_create_fallback_processor",
        "get_processor",
        "get_processor_type",
        "list_processors",
        "get_processor_info",
        "_check_processor_health",
        "reload_processor",
        "get_registry_stats",
        "validate_all_processors",
        "__init__",
        "process",
        "get_responseutils",
        "__init__",
        "_formatar_resultado_cursor",
        "_formatar_analise_projeto",
        "_formatar_status_cursor",
        "_gerar_resposta_erro",
        "_gerar_resposta_sucesso",
        "get_utilsmanager",
        "get_manager",
        "__init__",
        "_init_flask_context",
        "_get_app_config",
        "_get_db_session",
        "is_flask_available",
        "__init__",
        "_initialize_components",
        "validate",
        "format_response",
        "get_validator",
        "get_formatter",
        "get_status",
        "health_check",
        "__str__",
        "__repr__",
        "get_validation_utils",
        "validate_data",
        "validate_query",
        "validate_context",
        "sanitize_input",
        "__init__",
        "validate",
        "_basic_validation",
        "_validate_with_rules",
        "validate_query",
        "validate_context",
        "validate_mapping",
        "validate_file_path",
        "validate_date_range",
        "validate_business_rules",
        "_validate_single_rule",
        "sanitize_input",
        "get_validation_summary",
        "get_utils_manager",
        "get_data_manager",
        "initialize_flask_fallback",
        "get_base_processor_class",
        "get_base_orchestrator_class",
        "validate_flask_dependencies",
        "get_global_utils_manager",
        "get_global_data_manager",
        "get_global_flask_fallback"
      ]
    },
    "validators": {
      "nome": "validators",
      "caminho": "C:\\Users\\rafael.nascimento\\Desktop\\Sistema Online\\frete_sistema\\app\\claude_ai_novo\\validators",
      "arquivos_python": [
        "critic_validator.py",
        "data_validator.py",
        "semantic_validator.py",
        "structural_validator.py",
        "validator_manager.py",
        "__init__.py"
      ],
      "tem_init": true,
      "tem_manager": true,
      "total_arquivos": 6,
      "linhas_codigo": 1772,
      "classes_encontradas": [
        "CriticAgent",
        "ValidationUtils",
        "SemanticValidator",
        "StructuralAI",
        "ValidatorManager"
      ],
      "funcoes_encontradas": [
        "__init__",
        "_load_validation_rules",
        "_validate_date_consistency",
        "_validate_data_consistency",
        "_validate_numerical_consistency",
        "_validate_business_logic",
        "_check_business_rule",
        "_generate_recommendations",
        "get_validationutils",
        "__init__",
        "_verificar_prazo_entrega",
        "_calcular_dias_atraso",
        "_obter_filtros_usuario",
        "_calcular_metricas_prazo",
        "_calcular_estatisticas_especificas",
        "_calcular_estatisticas_por_dominio",
        "get_semantic_validator",
        "__init__",
        "validar_contexto_negocio",
        "_validar_formato_cnpj",
        "_validacoes_gerais",
        "validar_consistencia_readme_banco",
        "_mapear_modelo_para_tabela",
        "_validar_campos_modelo_tabela",
        "validar_mapeamento_completo",
        "_avaliar_qualidade_mapeamento",
        "_calcular_similaridade_termo_campo",
        "_gerar_recomendacoes_mapeamento",
        "get_structural_ai",
        "__init__",
        "_load_business_flows",
        "_load_data_relationships",
        "validate_business_logic",
        "_validate_temporal_consistency",
        "_validate_data_relationships",
        "get_validator_manager",
        "__init__",
        "_init_validators",
        "validate_context",
        "validate_data_structure",
        "validate_critical_rules",
        "validate_structural_integrity",
        "validate_complete_mapping",
        "validate_consistency",
        "get_validation_status",
        "run_full_validation_suite",
        "get_semantic_validator",
        "get_structural_validator",
        "get_data_validator",
        "get_critic_validator",
        "get_validator_manager",
        "validate_context",
        "validate_data_structure",
        "get_validation_status"
      ]
    }
  },
  "analise_imports": {
    "total_arquivos_analisados": 153,
    "imports_por_arquivo": {
      "__init__.py": [
        "claude_ai_modular",
        "integration.integration_manager",
        "typing",
        ".claude_ai_modular",
        ".integration.integration_manager",
        "app",
        "app.claude_ai_novo.integration.claude.claude_client",
        "logging",
        "Dict",
        "asyncio",
        "processar_consulta_modular",
        "lazy",
        "IntegrationManager",
        "db",
        "get_claude_client"
      ],
      "analisar_imports.py": [
        "pathlib",
        "typing",
        "collections",
        "os",
        "module",
        "pathlib",
        "os",
        "ast",
        "re",
        "sys",
        "Path",
        "Dict",
        "defaultdict",
        "json",
        "os",
        "path",
        "os",
        "re",
        "Path"
      ],
      "analisar_imports_quebrados.py": [
        "pathlib",
        "typing",
        "collections",
        "datetime",
        "os",
        "ast",
        "sys",
        "importlib.util",
        "logging",
        "Path",
        "Dict",
        "defaultdict",
        "re",
        "datetime",
        "if",
        "module_name",
        "relativo",
        "relativo",
        "absoluto",
        "name",
        "symbol_name",
        "relativo",
        "json"
      ],
      "analisar_imports_simples.py": [
        "pathlib",
        "typing",
        "collections",
        "datetime",
        "os",
        "ast",
        "importlib.util",
        "sys",
        "Path",
        "Dict",
        "defaultdict",
        "logging",
        "datetime",
        "relativo",
        "relativo",
        "absoluto",
        "symbol",
        "symbol_name",
        "json"
      ],
      "analisar_integracao_modulos.py": [
        "pathlib",
        "typing",
        "collections",
        "typing",
        "os",
        "ast",
        "re",
        "sys",
        "Path",
        "Dict",
        "defaultdict",
        "json",
        "interno",
        "interno"
      ],
      "analisar_pontas_soltas_orquestradores.py": [
        "typing",
        "datetime",
        "pathlib",
        "os",
        "re",
        "json",
        "Dict",
        "datetime",
        "Path",
        "patterns",
        "traceback"
      ],
      "check_imports.py": [
        "pathlib",
        "os",
        "ast",
        "Path",
        "ExternalAPIIntegration",
        "para"
      ],
      "detector_modulos_orfaos.py": [
        "modulo",
        "pathlib",
        "typing",
        "datetime",
        ".modulo",
        "modulo",
        "os",
        "sys",
        "json",
        "re",
        "Path",
        "Dict",
        "datetime",
        "ast",
        "r",
        "r",
        "modulo",
        "traceback"
      ],
      "fix_imports.py": [
        ".utils.validation_utils",
        ".utils.validation_utils",
        ".utils.validation_utils",
        "validation_utils",
        "validation_utils",
        "validation_utils",
        "pathlib",
        "..utils.validation_utils",
        "..utils.validation_utils",
        "..utils.validation_utils",
        ".validation_utils",
        ".validation_utils",
        ".validation_utils",
        "os",
        "re",
        "Path",
        "direto",
        "ValidationUtils",
        "ValidationUtils",
        "no",
        "ValidationUtils",
        "ValidationUtils",
        "ValidationUtils",
        "ValidationUtils",
        "está",
        "ValidationUtils",
        "se",
        "ValidationUtils",
        "correto",
        "está",
        "ValidationUtils",
        "se",
        "ValidationUtils",
        "do"
      ],
      "fix_validation_conflicts.py": [
        "validation_utils",
        "validation_utils",
        ".utils.validation_utils",
        "data_validator",
        "data_validator",
        "data_validator",
        "pathlib",
        ".validation_utils",
        ".validation_utils",
        "..utils.validation_utils",
        ".data_validator",
        ".data_validator",
        ".data_validator",
        "utils.validation_utils",
        "validators.data_validator",
        "utils.validation_utils",
        "validators.data_validator",
        "some_module",
        "utils.validation_utils",
        "validators.data_validator",
        "os",
        "re",
        "Path",
        "ValidationUtils",
        "BaseValidationUtils",
        "ValidationUtils",
        "ValidationUtils",
        "ValidationUtils",
        "ValidationUtils",
        "BaseValidationUtils",
        "ValidationUtils",
        "BaseValidationUtils",
        "ValidationUtils",
        "completo",
        "ValidationUtils",
        "BaseValidationUtils",
        "ValidationUtils"
      ],
      "MAPEAMENTO_ARQUITETURAL_COMPLETO.py": [
        "pathlib",
        "typing",
        "datetime",
        "os",
        "ast",
        "json",
        "Path",
        "Dict",
        "datetime"
      ],
      "MAPEAMENTO_COMPLETO_ESTRUTURA_REAL.py": [
        "pathlib",
        "typing",
        "datetime",
        "os",
        "json",
        "Path",
        "Dict",
        "datetime"
      ],
      "testar_falso_positivos.py": [
        "pathlib",
        "sys",
        "os",
        "Path",
        "funciona"
      ],
      "testar_todos_modulos_completo.py": [
        "pathlib",
        "os",
        "sys",
        "importlib",
        "traceback",
        "Path"
      ],
      "testar_todos_tijolos.py": [
        "datetime",
        "typing",
        "os",
        "sys",
        "importlib",
        "traceback",
        "json",
        "datetime",
        "Dict",
        "modulo_import"
      ],
      "teste_100_porcento.py": [
        "orchestrators.orchestrator_manager",
        "orchestrators.main_orchestrator",
        "orchestrators.session_orchestrator",
        "orchestrators.workflow_orchestrator",
        "orchestrators.orchestrator_manager",
        "get_orchestrator_manager",
        "get_main_orchestrator",
        "get_session_orchestrator",
        "get_workflow_orchestrator",
        "get_orchestrator_manager"
      ],
      "teste_correcoes_logs.py": [
        "datetime",
        "app.claude_ai_novo.processors.base",
        "app.claude_ai_novo.processors.context_processor",
        "app.claude_ai_novo.processors.query_processor",
        "app.claude_ai_novo.utils.performance_cache",
        "app.claude_ai_novo.learners.pattern_learning",
        "sys",
        "traceback",
        "datetime",
        "em",
        "date",
        "get_context_processor",
        "get_query_processor",
        "PerformanceCache",
        "get_pattern_learner"
      ],
      "teste_flask_shell.py": [
        "app.claude_transition",
        "app.claude_ai_novo.learners.learning_core",
        "app.claude_ai_novo.integration.external_api_integration",
        "app.claude_transition",
        "get_claude_transition",
        "get_lifelong_learning",
        "get_claude_integration",
        "processar_consulta_transicao"
      ],
      "teste_imports_corrigidos.py": [
        "utils.validation_utils",
        "integration.external_api_integration",
        "utils.legacy_compatibility",
        "utils.utils_manager",
        "validators.validator_manager",
        "ValidationUtils",
        "ExternalAPIIntegration",
        "ClaudeRealIntegration",
        "UtilsManager",
        "ValidatorManager"
      ],
      "teste_integracao_completa.py": [
        "orchestrators.orchestrator_manager",
        "orchestrators.main_orchestrator",
        "orchestrators.session_orchestrator",
        "orchestrators.workflow_orchestrator",
        "orchestrators.orchestrator_manager",
        "orchestrators.main_orchestrator",
        "orchestrators.session_orchestrator",
        "orchestrators.main_orchestrator",
        "orchestrators.main_orchestrator",
        "orchestrators.session_orchestrator",
        "orchestrators.main_orchestrator",
        "get_orchestrator_manager",
        "get_main_orchestrator",
        "get_session_orchestrator",
        "get_workflow_orchestrator",
        "get_orchestrator_manager",
        "get_main_orchestrator",
        "get_session_orchestrator",
        "get_main_orchestrator",
        "get_main_orchestrator",
        "get_session_orchestrator",
        "get_main_orchestrator"
      ],
      "teste_integracao_modulos_alto_valor.py": [
        "coordinators.coordinator_manager",
        "learners.learning_core",
        "commands.auto_command_processor",
        "orchestrators.main_orchestrator",
        "orchestrators.session_orchestrator",
        "coordinators.coordinator_manager",
        "learners.learning_core",
        "commands.auto_command_processor",
        "coordinators.coordinator_manager",
        "learners.learning_core",
        "commands.auto_command_processor",
        "get_coordinator_manager",
        "get_learning_core",
        "get_auto_command_processor",
        "get_main_orchestrator",
        "get_session_orchestrator",
        "coordinate_intelligent_query",
        "get_learning_core",
        "get_auto_command_processor",
        "get_coordinator_manager",
        "get_learning_core",
        "get_auto_command_processor"
      ],
      "teste_integracao_sistema_antigo.py": [
        "app.claude_ai_novo.learners.learning_core",
        "app.claude_ai_novo.orchestrators.orchestrator_manager",
        "app.claude_ai_novo.analyzers.analyzer_manager",
        "app.claude_ai_novo.security.security_guard",
        "app.claude_ai_novo",
        "sys",
        "os",
        "traceback",
        "get_lifelong_learning",
        "get_orchestrator_manager",
        "get_analyzer_manager",
        "get_security_guard",
        "get_system_status"
      ],
      "teste_modulos_esquecidos.py": [
        "security.security_guard",
        "tools.tools_manager",
        "integration.integration_manager",
        "processors.processor_manager",
        "SecurityGuard",
        "ToolsManager",
        "IntegrationManager",
        "ProcessorManager"
      ],
      "teste_modulos_reais.py": [
        "app.claude_ai_novo.enrichers",
        "app.claude_ai_novo.utils",
        "app.claude_ai_novo.utils.flask_fallback",
        "get_semantic_enricher",
        "get_data_manager",
        "get_current_user"
      ],
      "teste_rapido_sistema_novo.py": [
        "app.claude_ai_novo.learners.learning_core",
        "app.claude_ai_novo.orchestrators.orchestrator_manager",
        "app.claude_ai_novo.security.security_guard",
        "app.claude_ai_novo.integration.external_api_integration",
        "app.claude_ai_novo.analyzers.analyzer_manager",
        "app.claude_ai_novo.learners.learning_core",
        "app.claude_ai_novo.orchestrators.orchestrator_manager",
        "app.claude_ai_novo.security.security_guard",
        "app.claude_ai_novo.integration.external_api_integration",
        "app.claude_ai_novo.analyzers.analyzer_manager",
        "app.claude_ai_novo.learners.learning_core",
        "app.claude_ai_novo.security.security_guard",
        "app.claude_ai_novo.orchestrators.orchestrator_manager",
        "app.claude_ai_novo.integration.external_api_integration",
        "app.claude_ai_novo.intelligence.learning_core",
        "app.claude_ai_novo.integration.integration_manager",
        "app.claude_ai_novo.orchestrators.main_orchestrator",
        "app.claude_ai_novo.config.advanced_config",
        "sys",
        "os",
        "traceback",
        "get_lifelong_learning",
        "get_orchestrator_manager",
        "get_security_guard",
        "get_claude_integration",
        "get_analyzer_manager",
        "get_lifelong_learning",
        "get_orchestrator_manager",
        "get_security_guard",
        "get_claude_integration",
        "get_analyzer_manager",
        "get_lifelong_learning",
        "get_security_guard",
        "get_orchestrator_manager",
        "get_claude_integration",
        "get_lifelong_learning",
        "IntegrationManager",
        "MainOrchestrator",
        "get_advanced_config_instance"
      ],
      "teste_security_guard_integrado.py": [
        "typing",
        "datetime",
        "orchestrators.orchestrator_manager",
        "orchestrators.session_orchestrator",
        "orchestrators.main_orchestrator",
        "security.security_guard",
        "sys",
        "os",
        "logging",
        "Dict",
        "datetime",
        "get_orchestrator_manager",
        "get_session_orchestrator",
        "get_main_orchestrator",
        "get_security_guard"
      ],
      "teste_simples_correcoes.py": [
        "datetime",
        "app.claude_ai_novo.processors.base",
        "app.claude_ai_novo.processors.context_processor",
        "app.claude_ai_novo.processors.query_processor",
        "app.claude_ai_novo.utils.performance_cache",
        "app.claude_ai_novo.processors.base",
        "app.claude_ai_novo.utils.performance_cache",
        "app.claude_ai_novo.learners.pattern_learning",
        "app.claude_ai_novo.utils.validation_utils",
        "sys",
        "os",
        "datetime",
        "de",
        "de",
        "date",
        "de",
        "get_context_processor",
        "get_query_processor",
        "PerformanceCache",
        "ProcessorBase",
        "ScannersCache",
        "PatternLearner",
        "BaseValidationUtils"
      ],
      "analyzers\\analyzer_manager.py": [
        "typing",
        "pathlib",
        "datetime",
        "app.claude_ai_novo.analyzers.intention_analyzer",
        "app.claude_ai_novo.analyzers.nlp_enhanced_analyzer",
        "app.claude_ai_novo.analyzers.query_analyzer",
        "app.claude_ai_novo.analyzers.metacognitive_analyzer",
        "app.claude_ai_novo.analyzers.structural_analyzer",
        "app.claude_ai_novo.analyzers.semantic_analyzer",
        "app.claude_ai_novo.analyzers.diagnostics_analyzer",
        "app.claude_ai_novo.utils.base_context_manager",
        "logging",
        "Dict",
        "Path",
        "asyncio",
        "datetime",
        "IntentionAnalyzer",
        "NLPEnhancedAnalyzer",
        "QueryAnalyzer",
        "MetacognitiveAnalyzer",
        "StructuralAnalyzer",
        "SemanticAnalyzer",
        "DiagnosticsAnalyzer",
        "BaseContextManager"
      ],
      "analyzers\\diagnostics_analyzer.py": [
        "typing",
        "datetime",
        "app.claude_ai_novo.validators.semantic_validator",
        "Dict",
        "logging",
        "datetime",
        "get_semantic_validator"
      ],
      "analyzers\\intention_analyzer.py": [
        "typing",
        "datetime",
        "logging",
        "Dict",
        "datetime",
        "re"
      ],
      "analyzers\\metacognitive_analyzer.py": [
        "typing",
        "datetime",
        "logging",
        "Dict",
        "datetime"
      ],
      "analyzers\\nlp_enhanced_analyzer.py": [
        "typing",
        "dataclasses",
        "spacy.lang.pt.stop_words",
        "fuzzywuzzy",
        "nltk.corpus",
        "logging",
        "Dict",
        "dataclass",
        "re",
        "spacy",
        "STOP_WORDS",
        "fuzz",
        "nltk",
        "stopwords"
      ],
      "analyzers\\performance_analyzer.py": [
        ".utils.flask_fallback",
        "datetime",
        "typing",
        "sqlalchemy",
        "sqlalchemy.exc",
        "collections",
        "..utils.flask_fallback",
        "utils.flask_fallback",
        "logging",
        "datetime",
        "Dict",
        "text",
        "SQLAlchemyError",
        "defaultdict",
        "statistics",
        "get_db",
        "get_db"
      ],
      "analyzers\\query_analyzer.py": [
        "typing",
        "datetime",
        "flask_login",
        "sqlalchemy",
        "app",
        "app.utils.redis_cache",
        "app.utils.grupo_empresarial",
        "app.utils.ml_models_real",
        "app.claude_ai_novo.config",
        "app.utils.api_helper",
        "app.utils.ai_logging",
        "app.utils.redis_cache",
        "app.utils.grupo_empresarial",
        "app.fretes.models",
        "app.embarques.models",
        "app.transportadoras.models",
        "app.pedidos.models",
        "app.monitoramento.models",
        "app.faturamento.models",
        "app.monitoramento.models",
        "app.fretes.models",
        "app.monitoramento.models",
        "app.utils.grupo_empresarial",
        "app.embarques.models",
        "datetime",
        "app.faturamento.models",
        "app.fretes.models",
        "app.financeiro.models",
        "app.utils.ufs",
        "os",
        "anthropic",
        "logging",
        "re",
        "Dict",
        "datetime",
        "current_user",
        "func",
        "db",
        "json",
        "redis_cache",
        "GrupoEmpresarialDetector",
        "get_ml_models_system",
        "ClaudeAIConfig",
        "get_system_alerts",
        "ai_logger",
        "intelligent_cache",
        "time",
        "asyncio",
        "GrupoEmpresarialDetector",
        "Frete",
        "Embarque",
        "Transportadora",
        "Pedido",
        "EntregaMonitorada",
        "RelatorioFaturamentoImportado",
        "EntregaMonitorada",
        "Frete",
        "AgendamentoEntrega",
        "detectar_grupo_empresarial",
        "Embarque",
        "date",
        "RelatorioFaturamentoImportado",
        "DespesaExtra",
        "PendenciaFinanceiraNF",
        "UF_LIST"
      ],
      "analyzers\\semantic_analyzer.py": [
        "typing",
        "datetime",
        "logging",
        "Dict",
        "datetime",
        "re"
      ],
      "analyzers\\structural_analyzer.py": [
        "typing",
        "datetime",
        "logging",
        "Dict",
        "datetime"
      ],
      "commands\\auto_command_processor.py": [
        "typing",
        "datetime",
        "app.claude_ai_novo.commands.base_command",
        "logging",
        "re",
        "Dict",
        "datetime",
        "BaseCommand"
      ],
      "commands\\base_command.py": [
        "datetime",
        "typing",
        "collections",
        "pathlib",
        "flask_login",
        "sqlalchemy",
        "app",
        "app.claude_ai_novo.config",
        "app.utils.redis_cache",
        "app.utils.grupo_empresarial",
        "app.utils.ml_models_real",
        "app.utils.api_helper",
        "app.utils.ai_logging",
        "app.fretes.models",
        "app.embarques.models",
        "app.transportadoras.models",
        "app.pedidos.models",
        "app.monitoramento.models",
        "app.faturamento.models",
        "os",
        "re",
        "json",
        "time",
        "logging",
        "asyncio",
        "datetime",
        "Dict",
        "defaultdict",
        "Path",
        "anthropic",
        "current_user",
        "func",
        "db",
        "ClaudeAIConfig",
        "redis_cache",
        "GrupoEmpresarialDetector",
        "get_ml_models_system",
        "get_system_alerts",
        "ai_logger",
        "Frete",
        "Embarque",
        "Transportadora",
        "Pedido",
        "EntregaMonitorada",
        "RelatorioFaturamentoImportado"
      ],
      "commands\\cursor_commands.py": [
        "app.claude_ai_novo.commands.base_command"
      ],
      "commands\\dev_commands.py": [
        "app.claude_ai_novo.commands.base_command",
        "flask",
        "app.modulo",
        "app",
        "flask",
        "flask_login",
        "app.modulo",
        "flask_wtf",
        "wtforms",
        "wtforms.validators",
        "app",
        "datetime",
        "flask_wtf",
        "wtforms",
        "wtforms.validators",
        "flask",
        "app",
        "datetime",
        "flask",
        "flask_login",
        "flask_wtf",
        "wtforms",
        "wtforms.validators",
        "app",
        "datetime",
        "flask_wtf",
        "wtforms",
        "wtforms.validators",
        "flask",
        "flask_login",
        "anthropic",
        "Blueprint",
        "routes",
        "db",
        "render_template",
        "login_required",
        "bp",
        "FlaskForm",
        "StringField",
        "DataRequired",
        "db",
        "datetime",
        "FlaskForm",
        "StringField",
        "DataRequired",
        "Blueprint",
        "routes",
        "db",
        "datetime",
        "render_template",
        "login_required",
        "bp",
        "FlaskForm",
        "StringField",
        "DataRequired",
        "db",
        "datetime",
        "FlaskForm",
        "StringField",
        "DataRequired",
        "jsonify",
        "login_required"
      ],
      "commands\\excel_command_manager.py": [
        "app.claude_ai_novo.commands.base_command",
        "app.claude_ai_novo.commands.excel.fretes",
        "app.claude_ai_novo.commands.excel.pedidos",
        "app.claude_ai_novo.commands.excel.entregas",
        "app.claude_ai_novo.commands.excel.faturamento",
        "openpyxl",
        "openpyxl.styles",
        "get_excel_fretes",
        "get_excel_pedidos",
        "get_excel_entregas",
        "get_excel_faturamento",
        "Workbook",
        "Font"
      ],
      "commands\\file_commands.py": [
        "app.claude_ai_novo.commands.base_command",
        "BaseCommand",
        "logging"
      ],
      "commands\\excel\\entregas.py": [
        "claude_ai_novo.commands.base_command",
        "pathlib",
        "openpyxl",
        "openpyxl.styles",
        "openpyxl.utils",
        "app.monitoramento.models",
        "app.pedidos.models",
        "sqlalchemy",
        "Path",
        "Workbook",
        "Font",
        "get_column_letter",
        "EntregaMonitorada",
        "Pedido",
        "func"
      ],
      "commands\\excel\\faturamento.py": [
        "datetime",
        "typing",
        "pathlib",
        "openpyxl",
        "openpyxl.styles",
        "openpyxl.utils",
        "app",
        "app.faturamento.models",
        "flask_login",
        "sqlalchemy",
        "logging",
        "datetime",
        "Dict",
        "Path",
        "Workbook",
        "Font",
        "get_column_letter",
        "db",
        "RelatorioFaturamentoImportado",
        "current_user",
        "func"
      ],
      "commands\\excel\\fretes.py": [
        "claude_ai_novo.commands.base_command",
        "pathlib",
        "openpyxl",
        "openpyxl.styles",
        "openpyxl.utils",
        "app.fretes.models",
        "app.transportadoras.models",
        "app.embarques.models",
        "sqlalchemy",
        "Path",
        "Workbook",
        "Font",
        "get_column_letter",
        "Frete",
        "Transportadora",
        "Embarque",
        "func"
      ],
      "commands\\excel\\pedidos.py": [
        "claude_ai_novo.commands.base_command",
        "pathlib",
        "openpyxl",
        "openpyxl.styles",
        "openpyxl.utils",
        "app.pedidos.models",
        "app.cotacao.models",
        "app.cadastros_agendamento.models",
        "sqlalchemy",
        "Path",
        "Workbook",
        "Font",
        "get_column_letter",
        "Pedido",
        "CotacaoFrete",
        "ContatoAgendamento",
        "func"
      ],
      "config\\advanced_config.py": [
        "basic_config",
        "system_config",
        ".integration.external_api_integration",
        ".basic_config",
        ".system_config",
        "..integration.external_api_integration",
        "ClaudeAIConfig",
        "get_system_config",
        "ClaudeAPIClient"
      ],
      "config\\basic_config.py": [
        "typing",
        "os",
        "Dict"
      ],
      "config\\system_config.py": [
        "typing",
        "datetime",
        "pathlib",
        "logging",
        "os",
        "json",
        "Dict",
        "datetime",
        "Path",
        "fnmatch"
      ],
      "conversers\\context_converser.py": [
        "datetime",
        "typing",
        "dataclasses",
        "json",
        "logging",
        "datetime",
        "List",
        "dataclass"
      ],
      "conversers\\conversation_manager.py": [
        "typing",
        "datetime",
        "app.claude_ai_novo.memorizers.context_memory",
        "app.claude_ai_novo.memorizers.conversation_memory",
        "unittest.mock",
        "logging",
        "Dict",
        "datetime",
        "get_context_memory",
        "get_conversation_memory",
        "Mock"
      ],
      "coordinators\\coordinator_manager.py": [
        "intelligence_coordinator",
        "processor_coordinator",
        "specialist_agents",
        "typing",
        "datetime",
        "enum",
        ".intelligence_coordinator",
        ".processor_coordinator",
        ".specialist_agents",
        "logging",
        "Dict",
        "datetime",
        "Enum",
        "get_intelligence_coordinator",
        "ProcessorCoordinator",
        "SpecialistAgents"
      ],
      "coordinators\\intelligence_coordinator.py": [
        ".analyzers",
        ".processors",
        ".learners",
        "typing",
        "datetime",
        "concurrent.futures",
        "..analyzers",
        "..processors",
        "..learners",
        "logging",
        "Dict",
        "datetime",
        "json",
        "asyncio",
        "ThreadPoolExecutor",
        "get_analyzer_manager",
        "get_intelligence_processor",
        "get_adaptive_learning",
        "hashlib"
      ],
      "coordinators\\processor_coordinator.py": [
        "app.claude_ai_novo.processors.base",
        "app.claude_ai_novo.utils.processor_registry",
        "typing",
        "BaseProcessor",
        "get_processor_registry",
        "Dict",
        "asyncio"
      ],
      "coordinators\\specialist_agents.py": [
        "typing",
        "app.claude_ai_novo.coordinators.domain_agents.base_agent",
        "app.claude_ai_novo.coordinators.domain_agents.smart_base_agent",
        "app.claude_ai_novo.coordinators.domain_agents.entregas_agent",
        "app.claude_ai_novo.coordinators.domain_agents.embarques_agent",
        "app.claude_ai_novo.coordinators.domain_agents.fretes_agent",
        "app.claude_ai_novo.coordinators.domain_agents.pedidos_agent",
        "app.claude_ai_novo.coordinators.domain_agents.financeiro_agent",
        "app.claude_ai_novo.utils.agent_types",
        "logging",
        "Dict",
        "circular",
        "BaseSpecialistAgent",
        "SmartBaseAgent",
        "EntregasAgent",
        "EmbarquesAgent",
        "FretesAgent",
        "PedidosAgent",
        "FinanceiroAgent",
        "AgentType"
      ],
      "coordinators\\domain_agents\\base_agent.py": [
        "..utils.agent_types",
        "typing",
        "datetime",
        "abc",
        "...utils.agent_types",
        "logging",
        "json",
        "Dict",
        "datetime",
        "ABC",
        "AgentType"
      ],
      "coordinators\\domain_agents\\embarques_agent.py": [
        "..utils.agent_types",
        "typing",
        "...utils.agent_types",
        "app.claude_ai_novo.coordinators.domain_agents.smart_base_agent",
        "Dict",
        "AgentType",
        "SmartBaseAgent"
      ],
      "coordinators\\domain_agents\\entregas_agent.py": [
        "..utils.agent_types",
        "typing",
        "...utils.agent_types",
        "app.claude_ai_novo.coordinators.domain_agents.smart_base_agent",
        "Dict",
        "AgentType",
        "SmartBaseAgent"
      ],
      "coordinators\\domain_agents\\financeiro_agent.py": [
        "..utils.agent_types",
        "typing",
        "...utils.agent_types",
        "app.claude_ai_novo.coordinators.domain_agents.smart_base_agent",
        "Dict",
        "AgentType",
        "SmartBaseAgent"
      ],
      "coordinators\\domain_agents\\fretes_agent.py": [
        "..utils.agent_types",
        "typing",
        "...utils.agent_types",
        "app.claude_ai_novo.coordinators.domain_agents.smart_base_agent",
        "Dict",
        "AgentType",
        "SmartBaseAgent"
      ],
      "coordinators\\domain_agents\\pedidos_agent.py": [
        "..utils.agent_types",
        "typing",
        "...utils.agent_types",
        "app.claude_ai_novo.coordinators.domain_agents.smart_base_agent",
        "Dict",
        "AgentType",
        "SmartBaseAgent"
      ],
      "coordinators\\domain_agents\\smart_base_agent.py": [
        "..utils.agent_types",
        "typing",
        "datetime",
        "abc",
        "...utils.agent_types",
        "app.claude_ai_novo.coordinators.domain_agents.base_agent",
        "app.claude_ai_novo.integration.integration_manager",
        "logging",
        "Dict",
        "datetime",
        "ABC",
        "AgentType",
        "BaseSpecialistAgent",
        "get_integration_manager"
      ],
      "enrichers\\context_enricher.py": [
        "performance_cache",
        "typing",
        "datetime",
        ".performance_cache",
        "logging",
        "Dict",
        "datetime",
        "cached_result"
      ],
      "enrichers\\semantic_enricher.py": [
        "performance_cache",
        "typing",
        "datetime",
        ".performance_cache",
        "Dict",
        "logging",
        "datetime",
        "cached_result"
      ],
      "integration\\external_api_integration.py": [
        ".utils.flask_fallback",
        ".config.advanced_config",
        ".analyzers.performance_analyzer",
        ".processors.response_processor",
        "integration_manager",
        "anthropic.types",
        "typing",
        "datetime",
        "sqlalchemy",
        "..utils.flask_fallback",
        "..config.advanced_config",
        "..analyzers.performance_analyzer",
        "..processors.response_processor",
        ".integration_manager",
        "os",
        "anthropic",
        "MessageParam",
        "logging",
        "asyncio",
        "Dict",
        "datetime",
        "json",
        "text",
        "get_db",
        "get_advanced_config_instance",
        "classify_api_performance",
        "generate_api_fallback_response",
        "IntegrationManager"
      ],
      "integration\\integration_manager.py": [
        "typing",
        "datetime",
        "logging",
        "asyncio",
        "Dict",
        "datetime",
        "importlib",
        "traceback"
      ],
      "integration\\standalone_integration.py": [
        "integration_manager",
        "external_api_integration",
        "typing",
        "datetime",
        ".integration_manager",
        ".external_api_integration",
        "logging",
        "os",
        "Dict",
        "datetime",
        "IntegrationManager",
        "get_external_api_integration",
        "asyncio",
        "asyncio"
      ],
      "integration\\web_integration.py": [
        ".processors.context_processor",
        ".learners.feedback_learning",
        "integration_manager",
        "external_api_integration",
        "typing",
        "datetime",
        "flask",
        "flask_login",
        "..processors.context_processor",
        "..learners.feedback_learning",
        ".integration_manager",
        "app",
        ".external_api_integration",
        "logging",
        "asyncio",
        "Dict",
        "datetime",
        "Blueprint",
        "login_required",
        "get_contextprocessor",
        "get_feedback_processor",
        "IntegrationManager",
        "db",
        "get_external_api_integration"
      ],
      "learners\\adaptive_learning.py": [
        "typing",
        "datetime",
        "collections",
        "collections",
        "logging",
        "Dict",
        "datetime",
        "json",
        "hashlib",
        "Counter",
        "Counter"
      ],
      "learners\\feedback_learning.py": [
        "datetime",
        "typing",
        "dataclasses",
        "json",
        "logging",
        "datetime",
        "Dict",
        "dataclass",
        "re"
      ],
      "learners\\human_in_loop_learning.py": [
        "typing",
        "datetime",
        "enum",
        "dataclasses",
        "flask_login",
        "flask",
        "app",
        "logging",
        "Dict",
        "datetime",
        "Enum",
        "json",
        "dataclass",
        "current_user",
        "current_app",
        "db"
      ],
      "learners\\learning_core.py": [
        ".memorizers.knowledge_memory",
        "datetime",
        "typing",
        "flask",
        "app.claude_ai_novo.learners.pattern_learning",
        "app.claude_ai_novo.learners.feedback_learning",
        "..memorizers.knowledge_memory",
        "app",
        "sqlalchemy",
        "app",
        "app",
        "sqlalchemy",
        "app",
        "json",
        "logging",
        "datetime",
        "Dict",
        "current_app",
        "get_pattern_learner",
        "get_feedback_processor",
        "get_knowledge_memory",
        "db",
        "text",
        "db",
        "db",
        "text",
        "db"
      ],
      "learners\\lifelong_learning.py": [
        "learning_core",
        "pattern_learning",
        "human_in_loop_learning",
        "feedback_learning",
        ".memorizers.knowledge_memory",
        "typing",
        ".learning_core",
        ".pattern_learning",
        ".human_in_loop_learning",
        ".feedback_learning",
        "..memorizers.knowledge_memory",
        "logging",
        "Dict",
        "LearningCore",
        "PatternLearner",
        "HumanInLoopLearning",
        "FeedbackProcessor",
        "KnowledgeMemory"
      ],
      "learners\\pattern_learning.py": [
        "datetime",
        "typing",
        "flask",
        "app",
        "sqlalchemy",
        "app",
        "app",
        "sqlalchemy",
        "json",
        "logging",
        "datetime",
        "Dict",
        "current_app",
        "db",
        "text",
        "db",
        "db",
        "text"
      ],
      "loaders\\context_loader.py": [
        "typing",
        "datetime",
        "flask_login",
        "sqlalchemy",
        "app",
        "app.claude_ai_novo.config",
        "app.utils.redis_cache",
        "app.utils.grupo_empresarial",
        "app.utils.ml_models_real",
        "app.utils.api_helper",
        "app.utils.ai_logging",
        "app.claude_ai_novo.providers.data_provider",
        "app.monitoramento.models",
        "app.faturamento.models",
        "app.monitoramento.models",
        "app.pedidos.models",
        "os",
        "anthropic",
        "logging",
        "re",
        "json",
        "time",
        "asyncio",
        "Dict",
        "datetime",
        "current_user",
        "func",
        "db",
        "ClaudeAIConfig",
        "redis_cache",
        "GrupoEmpresarialDetector",
        "get_ml_models_system",
        "get_system_alerts",
        "ai_logger",
        "get_data_provider",
        "EntregaMonitorada",
        "RelatorioFaturamentoImportado",
        "EntregaMonitorada",
        "Pedido"
      ],
      "loaders\\database_loader.py": [
        "domain.pedidos_loader",
        "domain.entregas_loader",
        "loader_manager",
        "typing",
        "dataclasses",
        "datetime",
        "sqlalchemy",
        "sqlalchemy.orm",
        ".domain.pedidos_loader",
        ".domain.entregas_loader",
        ".loader_manager",
        "logging",
        "Dict",
        "dataclass",
        "datetime",
        "sqlalchemy",
        "create_engine",
        "sessionmaker",
        "sqlalchemy",
        "get_pedidos_loader",
        "get_entregas_loader",
        "get_loader_manager"
      ],
      "loaders\\loader_manager.py": [
        "domain.pedidos_loader",
        "domain.entregas_loader",
        "domain.fretes_loader",
        "domain.embarques_loader",
        "domain.faturamento_loader",
        "domain.agendamentos_loader",
        "domain.pedidos_loader",
        "domain.entregas_loader",
        "domain.fretes_loader",
        "domain.embarques_loader",
        "domain.faturamento_loader",
        "domain.agendamentos_loader",
        "typing",
        "datetime",
        ".domain.pedidos_loader",
        ".domain.entregas_loader",
        ".domain.fretes_loader",
        ".domain.embarques_loader",
        ".domain.faturamento_loader",
        ".domain.agendamentos_loader",
        ".domain.pedidos_loader",
        ".domain.entregas_loader",
        ".domain.fretes_loader",
        ".domain.embarques_loader",
        ".domain.faturamento_loader",
        ".domain.agendamentos_loader",
        "logging",
        "Dict",
        "datetime",
        "PedidosLoader",
        "EntregasLoader",
        "FretesLoader",
        "EmbarquesLoader",
        "FaturamentoLoader",
        "AgendamentosLoader",
        "get_pedidos_loader",
        "get_entregas_loader",
        "get_fretes_loader",
        "get_embarques_loader",
        "get_faturamento_loader",
        "get_agendamentos_loader"
      ],
      "loaders\\domain\\agendamentos_loader.py": [
        "typing",
        "datetime",
        "sqlalchemy",
        "app",
        "app.monitoramento.models",
        "app.utils.grupo_empresarial",
        "app.monitoramento.models",
        "Dict",
        "datetime",
        "func",
        "db",
        "AgendamentoEntrega",
        "detectar_grupo_empresarial",
        "logging",
        "EntregaMonitorada"
      ],
      "loaders\\domain\\embarques_loader.py": [
        "typing",
        "datetime",
        "sqlalchemy",
        "app",
        "app.embarques.models",
        "app.utils.grupo_empresarial",
        "Dict",
        "datetime",
        "func",
        "db",
        "Embarque",
        "detectar_grupo_empresarial",
        "logging"
      ],
      "loaders\\domain\\entregas_loader.py": [
        "typing",
        "datetime",
        "sqlalchemy",
        "app",
        "app.monitoramento.models",
        "app.utils.grupo_empresarial",
        "Dict",
        "datetime",
        "func",
        "db",
        "EntregaMonitorada",
        "detectar_grupo_empresarial",
        "logging"
      ],
      "loaders\\domain\\faturamento_loader.py": [
        "typing",
        "datetime",
        "sqlalchemy",
        "app",
        "app.faturamento.models",
        "app.utils.grupo_empresarial",
        "Dict",
        "datetime",
        "func",
        "db",
        "RelatorioFaturamentoImportado",
        "detectar_grupo_empresarial",
        "logging"
      ],
      "loaders\\domain\\fretes_loader.py": [
        "typing",
        "datetime",
        "sqlalchemy",
        "app",
        "app.fretes.models",
        "app.transportadoras.models",
        "app.utils.grupo_empresarial",
        "Dict",
        "datetime",
        "func",
        "db",
        "Frete",
        "Transportadora",
        "detectar_grupo_empresarial",
        "logging"
      ],
      "loaders\\domain\\pedidos_loader.py": [
        "typing",
        "datetime",
        "sqlalchemy",
        "app",
        "app.pedidos.models",
        "app.utils.grupo_empresarial",
        "Dict",
        "datetime",
        "func",
        "db",
        "Pedido",
        "detectar_grupo_empresarial",
        "logging"
      ],
      "mappers\\context_mapper.py": [
        "typing",
        "dataclasses",
        "datetime",
        "logging",
        "Dict",
        "dataclass",
        "datetime"
      ],
      "mappers\\field_mapper.py": [
        "typing",
        "dataclasses",
        "enum",
        "logging",
        "Dict",
        "dataclass",
        "Enum"
      ],
      "mappers\\mapper_manager.py": [
        "typing",
        "datetime",
        "app.claude_ai_novo.mappers.domain.pedidos_mapper",
        "app.claude_ai_novo.mappers.domain.embarques_mapper",
        "app.claude_ai_novo.mappers.domain.monitoramento_mapper",
        "app.claude_ai_novo.mappers.domain.faturamento_mapper",
        "app.claude_ai_novo.mappers.domain.transportadoras_mapper",
        "Dict",
        "logging",
        "datetime",
        "PedidosMapper",
        "EmbarquesMapper",
        "MonitoramentoMapper",
        "FaturamentoMapper",
        "TransportadorasMapper"
      ],
      "mappers\\query_mapper.py": [
        "typing",
        "dataclasses",
        "enum",
        "logging",
        "Dict",
        "dataclass",
        "Enum"
      ],
      "mappers\\domain\\base_mapper.py": [
        "abc",
        "typing",
        "fuzzywuzzy",
        "ABC",
        "Dict",
        "logging",
        "fuzz"
      ],
      "mappers\\domain\\embarques_mapper.py": [
        "base_mapper",
        "typing",
        ".base_mapper",
        "Dict",
        "BaseMapper"
      ],
      "mappers\\domain\\faturamento_mapper.py": [
        "base_mapper",
        "typing",
        ".base_mapper",
        "Dict",
        "BaseMapper"
      ],
      "mappers\\domain\\monitoramento_mapper.py": [
        "base_mapper",
        "typing",
        ".base_mapper",
        "Dict",
        "BaseMapper"
      ],
      "mappers\\domain\\pedidos_mapper.py": [
        "base_mapper",
        "typing",
        ".base_mapper",
        "Dict",
        "BaseMapper"
      ],
      "mappers\\domain\\transportadoras_mapper.py": [
        "base_mapper",
        "typing",
        ".base_mapper",
        "Dict",
        "BaseMapper"
      ],
      "memorizers\\context_memory.py": [
        "typing",
        "datetime",
        "app.utils.redis_cache",
        "app.claude_ai_novo.utils.flask_fallback",
        "flask_login",
        "unittest.mock",
        "logging",
        "Dict",
        "datetime",
        "json",
        "redis_cache",
        "get_current_user",
        "current_user",
        "Mock"
      ],
      "memorizers\\conversation_memory.py": [
        "context_memory",
        "typing",
        "datetime",
        ".context_memory",
        "logging",
        "Dict",
        "datetime",
        "ContextMemory"
      ],
      "memorizers\\knowledge_memory.py": [
        "datetime",
        "typing",
        "flask",
        "app",
        "sqlalchemy",
        "app",
        "app",
        "sqlalchemy",
        "app",
        "app",
        "sqlalchemy",
        "app",
        "sqlalchemy",
        "app",
        "sqlalchemy",
        "flask",
        "flask",
        "app",
        "sqlalchemy",
        "json",
        "logging",
        "datetime",
        "Dict",
        "current_app",
        "db",
        "text",
        "db",
        "db",
        "text",
        "db",
        "db",
        "text",
        "db",
        "text",
        "db",
        "text",
        "current_app",
        "current_app",
        "db",
        "text"
      ],
      "memorizers\\memory_manager.py": [
        "context_memory",
        "conversation_memory",
        "system_memory",
        "knowledge_memory",
        "typing",
        "datetime",
        ".context_memory",
        ".conversation_memory",
        ".system_memory",
        ".knowledge_memory",
        "logging",
        "Dict",
        "datetime",
        "ContextMemory",
        "ConversationMemory",
        "SystemMemory",
        "KnowledgeMemory"
      ],
      "memorizers\\session_memory.py": [
        ".utils.flask_fallback",
        "datetime",
        "typing",
        "sqlalchemy",
        "sqlalchemy.exc",
        "..utils.flask_fallback",
        "utils.flask_fallback",
        "json",
        "logging",
        "datetime",
        "Dict",
        "text",
        "SQLAlchemyError",
        "get_db",
        "get_db"
      ],
      "memorizers\\system_memory.py": [
        "typing",
        "datetime",
        "app.utils.redis_cache",
        "app.claude_ai_novo.config",
        "unittest.mock",
        "logging",
        "Dict",
        "datetime",
        "json",
        "os",
        "redis_cache",
        "ClaudeAIConfig",
        "Mock"
      ],
      "orchestrators\\analise_orchestrators_tempo_real.py": [
        "datetime",
        "typing",
        "__init__",
        "orchestrator_manager",
        "main_orchestrator",
        "session_orchestrator",
        "workflow_orchestrator",
        "os",
        "sys",
        "time",
        "json",
        "datetime",
        "Dict",
        "diagnose_orchestrator_module",
        "get_orchestrator_manager",
        "MainOrchestrator",
        "get_session_orchestrator",
        "WorkflowOrchestrator",
        "traceback"
      ],
      "orchestrators\\main_orchestrator.py": [
        "typing",
        "dataclasses",
        "enum",
        "datetime",
        "app.claude_ai_novo.coordinators.coordinator_manager",
        "app.claude_ai_novo.commands.auto_command_processor",
        "app.claude_ai_novo.security.security_guard",
        "app.claude_ai_novo.suggestions.suggestions_manager",
        "app.claude_ai_novo.analyzers",
        "app.claude_ai_novo.processors",
        "app.claude_ai_novo.mappers",
        "app.claude_ai_novo.analyzers",
        "app.claude_ai_novo.processors",
        "app.claude_ai_novo.mappers",
        "app.claude_ai_novo.validators",
        "app.claude_ai_novo.providers",
        "app.claude_ai_novo.memorizers",
        "app.claude_ai_novo.enrichers",
        "app.claude_ai_novo.utils",
        "logging",
        "Dict",
        "dataclass",
        "Enum",
        "asyncio",
        "datetime",
        "get_coordinator_manager",
        "get_auto_command_processor",
        "get_security_guard",
        "get_suggestions_manager",
        "get_analyzer_manager",
        "get_context_processor",
        "get_mapper_manager",
        "get_analyzer_manager",
        "get_processormanager",
        "get_mapper_manager",
        "get_validator_manager",
        "get_provider_manager",
        "get_memory_manager",
        "get_semantic_enricher",
        "get_data_manager"
      ],
      "orchestrators\\orchestrator_manager.py": [
        "main_orchestrator",
        "session_orchestrator",
        "workflow_orchestrator",
        "session_orchestrator",
        "typing",
        "datetime",
        "enum",
        "dataclasses",
        "threading",
        "app.claude_ai_novo.orchestrators.main_orchestrator",
        "app.claude_ai_novo.orchestrators.session_orchestrator",
        "app.claude_ai_novo.orchestrators.workflow_orchestrator",
        ".main_orchestrator",
        ".session_orchestrator",
        ".workflow_orchestrator",
        "app.claude_ai_novo.security.security_guard",
        ".session_orchestrator",
        "app.claude_ai_novo.orchestrators.session_orchestrator",
        "logging",
        "asyncio",
        "Dict",
        "datetime",
        "Enum",
        "dataclass",
        "Lock",
        "uuid",
        "MainOrchestrator",
        "SessionOrchestrator",
        "WorkflowOrchestrator",
        "MainOrchestrator",
        "SessionOrchestrator",
        "WorkflowOrchestrator",
        "get_security_guard",
        "SessionPriority",
        "SessionPriority"
      ],
      "orchestrators\\session_orchestrator.py": [
        ".memorizers.session_memory",
        ".analyzers.performance_analyzer",
        ".utils.flask_fallback",
        "datetime",
        "typing",
        "enum",
        "dataclasses",
        "threading",
        "app.claude_ai_novo.memorizers.session_memory",
        "app.claude_ai_novo.analyzers.performance_analyzer",
        "app.claude_ai_novo.utils.flask_fallback",
        "..memorizers.session_memory",
        "..analyzers.performance_analyzer",
        "..utils.flask_fallback",
        "app.claude_ai_novo.learners.learning_core",
        "app.claude_ai_novo.security.security_guard",
        "app.claude_ai_novo.conversers.conversation_manager",
        "logging",
        "uuid",
        "datetime",
        "Dict",
        "Enum",
        "dataclass",
        "Lock",
        "get_session_memory",
        "get_performance_analyzer",
        "get_current_user",
        "get_session_memory",
        "get_performance_analyzer",
        "get_current_user",
        "get_learning_core",
        "get_security_guard",
        "get_conversation_manager",
        "flask"
      ],
      "orchestrators\\teste_maestro.py": [
        "orchestrator_manager",
        "get_orchestrator_manager",
        "traceback"
      ],
      "orchestrators\\teste_validacao_orchestrators.py": [
        "typing",
        "orchestrator_manager",
        "main_orchestrator",
        "session_orchestrator",
        "workflow_orchestrator",
        "orchestrator_manager",
        "logging",
        "sys",
        "Dict",
        "get_orchestrator_manager",
        "MainOrchestrator",
        "get_session_orchestrator",
        "WorkflowOrchestrator",
        "get_orchestrator_manager"
      ],
      "orchestrators\\workflow_orchestrator.py": [
        "typing",
        "datetime",
        "logging",
        "Dict",
        "datetime"
      ],
      "processors\\base.py": [
        "datetime",
        "typing",
        "app.claude_ai_novo.utils.base_classes",
        "re",
        "time",
        "logging",
        "datetime",
        "Dict",
        "BaseProcessor"
      ],
      "processors\\context_processor.py": [
        "base",
        "datetime",
        ".base",
        "flask_login",
        "flask_sqlalchemy",
        "sqlalchemy",
        "app.fretes.models",
        "app.embarques.models",
        "app.transportadoras.models",
        "app.pedidos.models",
        "app.monitoramento.models",
        "app.faturamento.models",
        "app.financeiro.models",
        "app.fretes.models",
        "typing",
        "app.claude_ai_novo.config",
        "datetime",
        "ProcessorBase",
        "current_user",
        "db",
        "func",
        "Frete",
        "Embarque",
        "Transportadora",
        "Pedido",
        "EntregaMonitorada",
        "RelatorioFaturamentoImportado",
        "PendenciaFinanceiraNF",
        "DespesaExtra",
        "json",
        "asyncio",
        "time",
        "Dict",
        "ClaudeAIConfig"
      ],
      "processors\\data_processor.py": [
        "base",
        "typing",
        "datetime",
        ".base",
        "logging",
        "Dict",
        "datetime",
        "json",
        "pandas",
        "ProcessorBase"
      ],
      "processors\\intelligence_processor.py": [
        "base",
        "typing",
        "datetime",
        ".base",
        "logging",
        "Dict",
        "datetime",
        "json",
        "ProcessorBase"
      ],
      "processors\\processor_manager.py": [
        "base",
        ".base",
        "app.claude_ai_novo.utils.flask_context_wrapper",
        "app.claude_ai_novo.utils.processor_registry",
        "app.claude_ai_novo.coordinators.processor_coordinator",
        "typing",
        "ProcessorBase",
        "get_flask_context_wrapper",
        "get_processor_registry",
        "get_processor_coordinator",
        "Dict",
        "asyncio"
      ],
      "processors\\query_processor.py": [
        "typing",
        "datetime",
        "Dict",
        "datetime",
        "logging"
      ],
      "processors\\response_formatter.py": [
        "typing",
        "datetime",
        "Dict",
        "datetime"
      ],
      "processors\\response_processor.py": [
        "app.claude_ai_novo.processors.base",
        "typing",
        "app.claude_ai_novo.config",
        "Dict",
        "anthropic",
        "ClaudeAIConfig"
      ],
      "processors\\semantic_loop_processor.py": [
        "base",
        ".base",
        "typing",
        "app.claude_ai_novo.orchestrators.semantic_manager",
        "ProcessorBase",
        "Dict",
        "SemanticManager"
      ],
      "providers\\context_provider.py": [
        "typing",
        "datetime",
        "logging",
        "Dict",
        "datetime",
        "json",
        "hashlib",
        "re"
      ],
      "providers\\data_provider.py": [
        "typing",
        "datetime",
        "app.claude_ai_novo.utils.flask_fallback",
        "app.utils.redis_cache",
        "app.utils.grupo_empresarial",
        "app.utils.ml_models_real",
        "app.claude_ai_novo.config",
        "app.utils.api_helper",
        "app.utils.ai_logging",
        "app.utils.redis_cache",
        "app.financeiro.models",
        "unittest.mock",
        "sqlalchemy",
        "logging",
        "Dict",
        "datetime",
        "get_model",
        "redis_cache",
        "GrupoEmpresarialDetector",
        "get_ml_models_system",
        "ClaudeAIConfig",
        "get_system_alerts",
        "ai_logger",
        "intelligent_cache",
        "PendenciaFinanceiraNF",
        "Mock",
        "func",
        "json",
        "re",
        "time",
        "asyncio"
      ],
      "providers\\provider_manager.py": [
        "context_provider",
        "data_provider",
        "typing",
        "datetime",
        "dataclasses",
        ".context_provider",
        ".data_provider",
        "logging",
        "Dict",
        "datetime",
        "dataclass",
        "ContextProvider",
        "DataProvider"
      ],
      "scanning\\code_scanner.py": [
        "pathlib",
        "typing",
        "ast",
        "logging",
        "Path",
        "Dict",
        "re",
        "re"
      ],
      "scanning\\database_manager.py": [
        "typing",
        "datetime",
        "app.claude_ai_novo.scanning.database",
        "logging",
        "Dict",
        "datetime"
      ],
      "scanning\\database_scanner.py": [
        "typing",
        "sqlalchemy",
        "flask",
        "app",
        "logging",
        "Dict",
        "inspect",
        "current_app",
        "db"
      ],
      "scanning\\file_scanner.py": [
        "pathlib",
        "typing",
        "os",
        "re",
        "logging",
        "Path",
        "Dict"
      ],
      "scanning\\project_scanner.py": [
        "pathlib",
        "typing",
        "datetime",
        "app.claude_ai_novo.scanning.structure_scanner",
        "app.claude_ai_novo.scanning.code_scanner",
        "app.claude_ai_novo.scanning.file_scanner",
        "app.claude_ai_novo.scanning.database_scanner",
        "os",
        "logging",
        "Path",
        "Dict",
        "datetime",
        "get_structure_scanner",
        "get_code_scanner",
        "get_file_scanner",
        "get_database_scanner"
      ],
      "scanning\\readme_scanner.py": [
        "typing",
        "os",
        "re",
        "Dict",
        "logging"
      ],
      "scanning\\scanning_manager.py": [
        "pathlib",
        "typing",
        "app.claude_ai_novo.scanning.project_scanner",
        "app.claude_ai_novo.scanning.structure_scanner",
        "app.claude_ai_novo.scanning.code_scanner",
        "app.claude_ai_novo.scanning.file_scanner",
        "logging",
        "Path",
        "Dict",
        "ProjectScanner",
        "StructureScanner",
        "CodeScanner",
        "FileScanner",
        "__all__"
      ],
      "scanning\\structure_scanner.py": [
        "pathlib",
        "typing",
        "sqlalchemy",
        "app",
        "os",
        "ast",
        "logging",
        "Path",
        "Dict",
        "inspect",
        "db"
      ],
      "scanning\\database\\auto_mapper.py": [
        "typing",
        "datetime",
        "logging",
        "Dict",
        "datetime"
      ],
      "scanning\\database\\database_connection.py": [
        "typing",
        "sqlalchemy",
        "sqlalchemy.orm",
        "sqlalchemy.engine",
        "sqlalchemy.orm.session",
        "sqlalchemy.engine.reflection",
        "app",
        "logging",
        "Optional",
        "create_engine",
        "sessionmaker",
        "Engine",
        "Session",
        "Inspector",
        "os",
        "sys",
        "create_app"
      ],
      "scanning\\database\\data_analyzer.py": [
        "typing",
        "sqlalchemy",
        "sqlalchemy.engine",
        "sqlalchemy.exc",
        "datetime",
        "app.claude_ai_novo.scanning.database.metadata_reader",
        "app.claude_ai_novo.scanning.database.database_connection",
        "logging",
        "Dict",
        "text",
        "Engine",
        "SQLAlchemyError",
        "datetime",
        "MetadataReader",
        "DatabaseConnection"
      ],
      "scanning\\database\\field_searcher.py": [
        "typing",
        "sqlalchemy.engine.reflection",
        "logging",
        "Dict",
        "Inspector"
      ],
      "scanning\\database\\metadata_reader.py": [
        "typing",
        "sqlalchemy.engine.reflection",
        "logging",
        "Dict",
        "Inspector"
      ],
      "scanning\\database\\relationship_mapper.py": [
        "typing",
        "sqlalchemy.engine.reflection",
        "logging",
        "Dict",
        "Inspector"
      ],
      "security\\security_guard.py": [
        "typing",
        "datetime",
        "app.claude_ai_novo.utils.flask_fallback",
        "flask_login",
        "unittest.mock",
        "logging",
        "Dict",
        "datetime",
        "re",
        "hashlib",
        "get_current_user",
        "current_user",
        "Mock"
      ],
      "suggestions\\suggestions_manager.py": [
        "typing",
        "datetime",
        "logging",
        "Dict",
        "datetime",
        "json",
        "hashlib"
      ],
      "suggestions\\suggestion_engine.py": [
        "typing",
        "datetime",
        "dataclasses",
        "app.claude_ai_novo.scanning.database.data_analyzer",
        "app",
        "logging",
        "List",
        "datetime",
        "dataclass",
        "json",
        "random",
        "DataAnalyzer",
        "db"
      ],
      "tools\\tools_manager.py": [
        "typing",
        "pathlib",
        "logging",
        "Dict",
        "Path",
        "asyncio"
      ],
      "utils\\agent_types.py": [
        "enum",
        "typing",
        "dataclasses",
        "Enum",
        "Dict",
        "dataclass"
      ],
      "utils\\base_classes.py": [
        "datetime",
        "typing",
        "pathlib",
        "flask_login",
        "sqlalchemy",
        "flask",
        "app",
        "app.utils.redis_cache",
        "app.utils.grupo_empresarial",
        "app.utils.ml_models_real",
        "app.utils.api_helper",
        "app.utils.ai_logging",
        "app.claude_ai_novo.config",
        "app.fretes.models",
        "app.embarques.models",
        "app.transportadoras.models",
        "app.pedidos.models",
        "app.monitoramento.models",
        "app.faturamento.models",
        "app.financeiro.models",
        "os",
        "json",
        "logging",
        "asyncio",
        "time",
        "datetime",
        "Dict",
        "Path",
        "anthropic",
        "current_user",
        "func",
        "current_app",
        "db",
        "redis_cache",
        "GrupoEmpresarialDetector",
        "get_ml_models_system",
        "get_system_alerts",
        "ai_logger",
        "logging",
        "ClaudeAIConfig",
        "Frete",
        "Embarque",
        "Transportadora",
        "Pedido",
        "EntregaMonitorada",
        "RelatorioFaturamentoImportado",
        "PendenciaFinanceiraNF",
        "re",
        "hashlib"
      ],
      "utils\\base_context_manager.py": [
        "typing",
        "Dict",
        "logging"
      ],
      "utils\\data_manager.py": [
        "typing",
        "pathlib",
        "datetime",
        "app.claude_ai_novo.providers.data_provider",
        "app.claude_ai_novo.loaders.context_loader",
        "app.claude_ai_novo.utils.base_context_manager",
        "logging",
        "Dict",
        "Path",
        "asyncio",
        "datetime",
        "SistemaRealData",
        "ContextLoader",
        "BaseContextManager"
      ],
      "utils\\flask_context_wrapper.py": [
        "app.claude_ai_novo.processors.base",
        "app.claude_ai_novo.utils.base_classes",
        "typing",
        "flask",
        "flask",
        "flask",
        "app",
        "flask",
        "flask",
        "BaseProcessor",
        "FLASK_AVAILABLE",
        "Dict",
        "current_app",
        "current_app",
        "current_app",
        "db",
        "current_app",
        "current_app"
      ],
      "utils\\flask_fallback.py": [
        "typing",
        "unittest.mock",
        "flask",
        "flask",
        "app.pedidos.models",
        "app.embarques.models",
        "app.embarques.models",
        "app.monitoramento.models",
        "app.faturamento.models",
        "app.transportadoras.models",
        "app.auth.models",
        "app.fretes.models",
        "app",
        "flask_login",
        "flask",
        "logging",
        "Dict",
        "Mock",
        "flask",
        "Flask",
        "current_app",
        "Pedido",
        "Embarque",
        "EmbarqueItem",
        "EntregaMonitorada",
        "RelatorioFaturamentoImportado",
        "Transportadora",
        "Usuario",
        "Frete",
        "falhar",
        "com",
        "sys",
        "os",
        "db",
        "current_user",
        "current_app"
      ],
      "utils\\legacy_compatibility.py": [
        "typing",
        "app.claude_ai_novo.integration.external_api_integration",
        "app.claude_ai_novo.analyzers.nlp_enhanced_analyzer",
        "Dict",
        "ExternalAPIIntegration",
        "get_nlp_enhanced_analyzer",
        "logging",
        "modular",
        "logging"
      ],
      "utils\\performance_cache.py": [
        "typing",
        "app.claude_ai_novo.scanning.readme_scanner",
        "app.claude_ai_novo.scanning.database_scanner",
        "threading",
        "time",
        "weakref",
        "Dict",
        "logging",
        "ReadmeScanner",
        "DatabaseScanner"
      ],
      "utils\\processor_registry.py": [
        "app.claude_ai_novo.processors.base",
        "typing",
        "app.claude_ai_novo.utils.flask_context_wrapper",
        "BaseProcessor",
        "Dict",
        "get_flask_context_wrapper"
      ],
      "utils\\response_utils.py": [
        "typing",
        "datetime",
        "flask_login",
        "sqlalchemy",
        "app",
        "app.utils.redis_cache",
        "app.utils.grupo_empresarial",
        "app.utils.ml_models_real",
        "app.claude_ai_novo.config",
        "app.utils.api_helper",
        "app.utils.ai_logging",
        "app.utils.redis_cache",
        "app.utils.grupo_empresarial",
        "app",
        "app.fretes.models",
        "app.embarques.models",
        "app.transportadoras.models",
        "app.pedidos.models",
        "app.monitoramento.models",
        "app.faturamento.models",
        "app",
        "app.monitoramento.models",
        "app",
        "app.fretes.models",
        "app.transportadoras.models",
        "app",
        "app.monitoramento.models",
        "app",
        "app.monitoramento.models",
        "app.fretes.models",
        "app.utils.grupo_empresarial",
        "app.utils.grupo_empresarial",
        "app",
        "app.monitoramento.models",
        "app.embarques.models",
        "app.pedidos.models",
        "app",
        "app.faturamento.models",
        "app.monitoramento.models",
        "app.pedidos.models",
        "app.utils.grupo_empresarial",
        "app",
        "app.fretes.models",
        "app.transportadoras.models",
        "app",
        "app.transportadoras.models",
        "app.fretes.models",
        "app",
        "app.pedidos.models",
        "app",
        "app.embarques.models",
        "datetime",
        "app",
        "app.faturamento.models",
        "app",
        "app.fretes.models",
        "app.financeiro.models",
        "os",
        "anthropic",
        "logging",
        "re",
        "Dict",
        "datetime",
        "current_user",
        "func",
        "db",
        "json",
        "redis_cache",
        "GrupoEmpresarialDetector",
        "get_ml_models_system",
        "ClaudeAIConfig",
        "get_system_alerts",
        "ai_logger",
        "intelligent_cache",
        "re",
        "time",
        "asyncio",
        "re",
        "GrupoEmpresarialDetector",
        "db",
        "Frete",
        "Embarque",
        "Transportadora",
        "Pedido",
        "EntregaMonitorada",
        "RelatorioFaturamentoImportado",
        "db",
        "EntregaMonitorada",
        "db",
        "Frete",
        "Transportadora",
        "db",
        "AgendamentoEntrega",
        "db",
        "EntregaMonitorada",
        "Frete",
        "detectar_grupo_empresarial",
        "detectar_grupo_empresarial",
        "re",
        "db",
        "EntregaMonitorada",
        "Embarque",
        "Pedido",
        "db",
        "RelatorioFaturamentoImportado",
        "EntregaMonitorada",
        "Pedido",
        "GrupoEmpresarialDetector",
        "re",
        "re",
        "re",
        "re",
        "db",
        "Frete",
        "Transportadora",
        "db",
        "Transportadora",
        "Frete",
        "db",
        "Pedido",
        "db",
        "Embarque",
        "date",
        "db",
        "RelatorioFaturamentoImportado",
        "db",
        "DespesaExtra",
        "PendenciaFinanceiraNF"
      ],
      "utils\\utils_manager.py": [
        "response_utils",
        "validation_utils",
        "typing",
        "pathlib",
        ".response_utils",
        ".validation_utils",
        "flask",
        "flask",
        "flask",
        "app",
        "logging",
        "Dict",
        "Path",
        "asyncio",
        "ResponseUtils",
        "BaseValidationUtils",
        "current_app",
        "current_app",
        "current_app",
        "db"
      ],
      "utils\\validation_utils.py": [
        "typing",
        "datetime",
        "pathlib",
        "logging",
        "re",
        "Dict",
        "datetime",
        "Path"
      ],
      "validators\\critic_validator.py": [
        "typing",
        "app.claude_ai_novo.utils.agent_types",
        "logging",
        "re",
        "Dict",
        "ValidationResult"
      ],
      "validators\\data_validator.py": [
        "typing",
        "datetime",
        "app.claude_ai_novo.utils.flask_fallback",
        "app.utils.redis_cache",
        "app.utils.grupo_empresarial",
        "app.utils.ml_models_real",
        "app.claude_ai_novo.config",
        "app.utils.api_helper",
        "app.utils.ai_logging",
        "app.utils.redis_cache",
        "app.financeiro.models",
        "unittest.mock",
        "sqlalchemy",
        "datetime",
        "app.claude_ai_novo.integration.claude",
        "os",
        "anthropic",
        "logging",
        "Dict",
        "datetime",
        "get_model",
        "redis_cache",
        "GrupoEmpresarialDetector",
        "get_ml_models_system",
        "ClaudeAIConfig",
        "get_system_alerts",
        "ai_logger",
        "intelligent_cache",
        "PendenciaFinanceiraNF",
        "Mock",
        "func",
        "datetime",
        "json",
        "re",
        "time",
        "asyncio",
        "get_claude_integration"
      ],
      "validators\\semantic_validator.py": [
        "typing",
        "datetime",
        "Dict",
        "logging",
        "datetime"
      ],
      "validators\\structural_validator.py": [
        "typing",
        "logging",
        "Dict"
      ],
      "validators\\validator_manager.py": [
        "semantic_validator",
        "data_validator",
        "critic_validator",
        "structural_validator",
        "typing",
        "datetime",
        ".semantic_validator",
        ".data_validator",
        ".critic_validator",
        ".structural_validator",
        "logging",
        "Dict",
        "datetime",
        "SemanticValidator",
        "ValidationUtils",
        "CriticAgent",
        "StructuralAI"
      ]
    }
  },
  "modulos_orfaos": {
    "total_pastas": 20,
    "modulos_usados": 10,
    "modulos_orfaos": 10,
    "lista_orfaos": [
      "config",
      "mappers",
      "scanning",
      "suggestions",
      "conversers",
      "analyzers",
      "memorizers",
      "providers",
      "loaders",
      "enrichers"
    ],
    "lista_usados": [
      "tools",
      "processors",
      "commands",
      "security",
      "coordinators",
      "validators",
      "utils",
      "orchestrators",
      "learners",
      "integration"
    ],
    "percentual_orfaos": 50.0
  },
  "impacto_orfaos": {
    "linhas_codigo_perdidas": 23452,
    "arquivos_perdidos": 73,
    "classes_perdidas": 90,
    "funcoes_perdidas": 916,
    "detalhes_orfaos": {
      "config": {
        "linhas": 1388,
        "arquivos": 4,
        "classes": 4,
        "funcoes": 63,
        "criticidade": "alta",
        "tem_manager": false,
        "tem_init": true
      },
      "mappers": {
        "linhas": 2325,
        "arquivos": 12,
        "classes": 16,
        "funcoes": 67,
        "criticidade": "alta",
        "tem_manager": true,
        "tem_init": true
      },
      "scanning": {
        "linhas": 6061,
        "arquivos": 16,
        "classes": 14,
        "funcoes": 236,
        "criticidade": "alta",
        "tem_manager": true,
        "tem_init": true
      },
      "suggestions": {
        "linhas": 1642,
        "arquivos": 3,
        "classes": 3,
        "funcoes": 62,
        "criticidade": "alta",
        "tem_manager": true,
        "tem_init": true
      },
      "conversers": {
        "linhas": 815,
        "arquivos": 3,
        "classes": 3,
        "funcoes": 26,
        "criticidade": "alta",
        "tem_manager": true,
        "tem_init": true
      },
      "analyzers": {
        "linhas": 3683,
        "arquivos": 10,
        "classes": 26,
        "funcoes": 181,
        "criticidade": "alta",
        "tem_manager": true,
        "tem_init": true
      },
      "memorizers": {
        "linhas": 2515,
        "arquivos": 7,
        "classes": 6,
        "funcoes": 84,
        "criticidade": "alta",
        "tem_manager": true,
        "tem_init": true
      },
      "providers": {
        "linhas": 1536,
        "arquivos": 4,
        "classes": 5,
        "funcoes": 78,
        "criticidade": "alta",
        "tem_manager": true,
        "tem_init": true
      },
      "loaders": {
        "linhas": 2620,
        "arquivos": 11,
        "classes": 11,
        "funcoes": 93,
        "criticidade": "alta",
        "tem_manager": true,
        "tem_init": true
      },
      "enrichers": {
        "linhas": 867,
        "arquivos": 3,
        "classes": 2,
        "funcoes": 26,
        "criticidade": "alta",
        "tem_manager": false,
        "tem_init": true
      }
    },
    "nivel_critico": "alto"
  },
  "acoes_corretivas": [
    {
      "modulo": "config",
      "criticidade": "alta",
      "linhas_afetadas": 1388,
      "acao_recomendada": "INTEGRAÇÃO PRIORITÁRIA",
      "onde_integrar": [
        "__init__.py principal"
      ],
      "prioridade": 2
    },
    {
      "modulo": "mappers",
      "criticidade": "alta",
      "linhas_afetadas": 2325,
      "acao_recomendada": "INTEGRAÇÃO PRIORITÁRIA",
      "onde_integrar": [
        "orchestrators/main_orchestrator.py"
      ],
      "prioridade": 2
    },
    {
      "modulo": "scanning",
      "criticidade": "alta",
      "linhas_afetadas": 6061,
      "acao_recomendada": "INTEGRAÇÃO PRIORITÁRIA",
      "onde_integrar": [
        "orchestrators/main_orchestrator.py"
      ],
      "prioridade": 2
    },
    {
      "modulo": "suggestions",
      "criticidade": "alta",
      "linhas_afetadas": 1642,
      "acao_recomendada": "INTEGRAÇÃO PRIORITÁRIA",
      "onde_integrar": [
        "orchestrators/main_orchestrator.py"
      ],
      "prioridade": 2
    },
    {
      "modulo": "conversers",
      "criticidade": "alta",
      "linhas_afetadas": 815,
      "acao_recomendada": "INTEGRAÇÃO PRIORITÁRIA",
      "onde_integrar": [
        "orchestrators/main_orchestrator.py"
      ],
      "prioridade": 2
    },
    {
      "modulo": "analyzers",
      "criticidade": "alta",
      "linhas_afetadas": 3683,
      "acao_recomendada": "INTEGRAÇÃO PRIORITÁRIA",
      "onde_integrar": [
        "orchestrators/main_orchestrator.py"
      ],
      "prioridade": 2
    },
    {
      "modulo": "memorizers",
      "criticidade": "alta",
      "linhas_afetadas": 2515,
      "acao_recomendada": "INTEGRAÇÃO PRIORITÁRIA",
      "onde_integrar": [
        "orchestrators/main_orchestrator.py"
      ],
      "prioridade": 2
    },
    {
      "modulo": "providers",
      "criticidade": "alta",
      "linhas_afetadas": 1536,
      "acao_recomendada": "INTEGRAÇÃO PRIORITÁRIA",
      "onde_integrar": [
        "orchestrators/main_orchestrator.py"
      ],
      "prioridade": 2
    },
    {
      "modulo": "loaders",
      "criticidade": "alta",
      "linhas_afetadas": 2620,
      "acao_recomendada": "INTEGRAÇÃO PRIORITÁRIA",
      "onde_integrar": [
        "orchestrators/main_orchestrator.py"
      ],
      "prioridade": 2
    },
    {
      "modulo": "enrichers",
      "criticidade": "alta",
      "linhas_afetadas": 867,
      "acao_recomendada": "INTEGRAÇÃO PRIORITÁRIA",
      "onde_integrar": [
        "__init__.py principal"
      ],
      "prioridade": 2
    }
  ]
}