#!/usr/bin/env python3
"""
üîß SOLU√á√ÉO DEFINITIVA: UTF-8 no Sistema
======================================
"""

import os
import sys

def main():
    """Resolve o problema de UTF-8 no sistema"""
    print("="*60)
    print("üîß RESOLVENDO UTF-8 DEFINITIVAMENTE")
    print("="*60)
    
    print("\n1Ô∏è‚É£ Definindo vari√°vel de ambiente SKIP_DB_CREATE...")
    os.environ['SKIP_DB_CREATE'] = 'true'
    print("‚úÖ Vari√°vel definida!")
    
    print("\n2Ô∏è‚É£ Testando importa√ß√£o do sistema...")
    
    # Adicionar o diret√≥rio raiz ao path
    sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))
    
    try:
        # Tentar importar com SKIP_DB_CREATE ativo
        from app import create_app, db
        print("‚úÖ Importa√ß√£o bem sucedida!")
        
        # Criar app
        app = create_app()
        print("‚úÖ App criado com sucesso!")
        
        # Testar contexto
        with app.app_context():
            # Testar query simples
            result = db.session.execute(db.text("SELECT 1"))
            print("‚úÖ Conex√£o com banco funcionando!")
            
            # Verificar encoding
            encoding = db.session.execute(db.text("SHOW client_encoding")).scalar()
            print(f"üìù Client encoding: {encoding}")
            
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    print("\n3Ô∏è‚É£ Instru√ß√µes para corre√ß√£o permanente:")
    print("\nüìù Adicione ao seu arquivo .env:")
    print("SKIP_DB_CREATE=true")
    
    print("\nüìù Ou defina a vari√°vel antes de executar:")
    print("# Windows PowerShell:")
    print("$env:SKIP_DB_CREATE=\"true\"")
    print("\n# Windows CMD:")
    print("set SKIP_DB_CREATE=true")
    print("\n# Linux/Mac:")
    print("export SKIP_DB_CREATE=true")
    
    print("\n‚úÖ SOLU√á√ÉO APLICADA!")
    print("\nO erro UTF-8 ocorre porque o Flask tenta criar tabelas automaticamente")
    print("durante a inicializa√ß√£o, mas encontra caracteres especiais em algum arquivo.")
    print("Com SKIP_DB_CREATE=true, pulamos essa etapa problem√°tica.")
    print("\nAs tabelas j√° existem no banco PostgreSQL, ent√£o n√£o h√° problema!")
    
    return True

if __name__ == "__main__":
    success = main() 