# PATCH para usar o cliente simplificado em routes.py
# 
# Para aplicar, altere a linha 577 de:
#     from app.portal.atacadao.playwright_client import AtacadaoPlaywrightClient
# Para:
#     from app.portal.atacadao.playwright_client_simple import AtacadaoPlaywrightSimple
#
# E altere a linha 578 de:
#     client = AtacadaoPlaywrightClient(headless=True)
# Para:
#     client = AtacadaoPlaywrightSimple(headless=True)
#
# E altere a linha 596 de:
#     resultado = client.criar_agendamento(dados_enviados)
# Para:
#     resultado = client.criar_agendamento_completo(
#         pedido_cliente=dados_enviados.get('pedido_cliente'),
#         data_agendamento=dados_enviados.get('data_agendamento'),
#         produtos=dados_enviados.get('produtos')
#     )

--- a/app/portal/routes.py
+++ b/app/portal/routes.py
@@ -9,7 +9,7 @@ from app.portal import portal_bp
 from app.portal.models import PortalIntegracao, PortalConfiguracao, PortalLog
 from app.portal.atacadao.models import ProdutoDeParaAtacadao
 from app.portal.utils.grupo_empresarial import GrupoEmpresarial
-from app.portal.atacadao.playwright_client import AtacadaoPlaywrightClient
+from app.portal.atacadao.playwright_client_simple import AtacadaoPlaywrightSimple
 from app.carteira.models import CarteiraPrincipal, PreSeparacaoItem
 from app.separacao.models import Separacao
 from app import db
@@ -575,7 +575,7 @@ def executar_agendamento_portal(integracao_id):
             resultado = None
             try:
                 logger.info("🚀 Usando Playwright para automação")
-                client = AtacadaoPlaywrightClient(headless=True)
+                client = AtacadaoPlaywrightSimple(headless=True)
                 
                 # Garantir sessão válida (faz re-login automático se necessário)
                 from app.portal.routes_sessao import garantir_sessao_valida
@@ -593,7 +593,11 @@ def executar_agendamento_portal(integracao_id):
                 client.iniciar_sessao()
                 
                 # Executar agendamento com Playwright (usando dados já extraídos)
-                resultado = client.criar_agendamento(dados_enviados)
+                resultado = client.criar_agendamento_completo(
+                    pedido_cliente=dados_enviados.get('pedido_cliente'),
+                    data_agendamento=dados_enviados.get('data_agendamento'),
+                    produtos=dados_enviados.get('produtos')
+                )
                 
                 # Fechar navegador
                 client.fechar()