from flask import Blueprint

claude_ai_bp = Blueprint('claude_ai', __name__, url_prefix='/claude-ai')

# Import routes to register them with the blueprint
from . import routes 

# üöÄ SISTEMA AVAN√áADO DE IA v2.0 - ROTAS AVAN√áADAS ATIVADAS
# Vers√£o: 25/06/2025 - Sistema Multi-Agent + Human Learning + PostgreSQL JSONB

# ‚úÖ CORRE√á√ÉO: Inicializa√ß√£o movida para fun√ß√£o expl√≠cita
# Evita problemas de inicializa√ß√£o circular

def setup_claude_ai(app, redis_cache=None):
    """
    Configura o sistema Claude AI com a aplica√ß√£o Flask
    
    Args:
        app: Aplica√ß√£o Flask
        redis_cache: Inst√¢ncia do cache Redis (opcional)
        
    Returns:
        bool: True se inicializado com sucesso
    """
    success = True
    
    # üß† Inicializar Sistema de Sugest√µes Inteligentes
    try:
        from .suggestion_engine import init_suggestion_engine
        
        suggestion_engine = init_suggestion_engine(redis_cache)
        if suggestion_engine:
            app.logger.info("üß† Sistema de Sugest√µes Inteligentes inicializado" + 
                          (" com Redis" if redis_cache else " (sem Redis)"))
        else:
            app.logger.warning("‚ö†Ô∏è Sistema de Sugest√µes sem Redis (fallback)")
            success = False
                
    except ImportError as e:
        app.logger.warning(f"‚ö†Ô∏è Sistema de Sugest√µes Inteligentes n√£o dispon√≠vel: {e}")
        success = False
    except Exception as e:
        app.logger.error(f"‚ùå Erro ao inicializar sugest√µes: {e}")
        success = False
    
    # üìä Configurar analisador de dados
    try:
        from .data_analyzer import init_data_analyzers
        app.logger.info("üìä Analisador de Dados configurado")
    except ImportError as e:
        app.logger.warning(f"‚ö†Ô∏è Analisador de dados n√£o dispon√≠vel: {e}")
        success = False
        
    return success

# ‚ùå REMOVIDO: Inicializa√ß√£o autom√°tica que causava problemas
# init_intelligent_suggestions() 