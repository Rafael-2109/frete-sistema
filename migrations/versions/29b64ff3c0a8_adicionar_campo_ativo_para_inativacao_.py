"""Adicionar campo ativo para inativacao de NFs no faturamento

Revision ID: 29b64ff3c0a8
Revises: 966e200086d8
Create Date: 2025-06-15 16:58:09.265820

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '29b64ff3c0a8'
down_revision = '966e200086d8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('relatorio_faturamento_importado', schema=None) as batch_op:
        # Adiciona campo ativo como nullable primeiro
        batch_op.add_column(sa.Column('ativo', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('inativado_em', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('inativado_por', sa.String(length=100), nullable=True))
    
    # Preenche todos os registros existentes com ativo=True
    op.execute("UPDATE relatorio_faturamento_importado SET ativo = 1 WHERE ativo IS NULL")
    
    # Agora torna o campo NOT NULL (só funciona no SQLite 3.37+, senão mantém nullable)
    try:
        with op.batch_alter_table('relatorio_faturamento_importado', schema=None) as batch_op:
            batch_op.alter_column('ativo', nullable=False)
    except:
        pass  # Se falhar, mantém como nullable mas com valores preenchidos

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('relatorio_faturamento_importado', schema=None) as batch_op:
        batch_op.drop_column('inativado_por')
        batch_op.drop_column('inativado_em')
        batch_op.drop_column('ativo')

    # ### end Alembic commands ###
