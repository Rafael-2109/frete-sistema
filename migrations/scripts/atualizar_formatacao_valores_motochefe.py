#!/usr/bin/env python3
"""
Script para atualizar formata√ß√£o de valores nos templates MotoChefe
Converte formato americano (%.2f|format) para formato brasileiro (valor_br)
Data: 2025-01-10
"""

import os
import re
from pathlib import Path

# Diret√≥rio base dos templates motochefe
BASE_DIR = Path(__file__).resolve().parent.parent.parent
TEMPLATES_DIR = BASE_DIR / 'app' / 'templates' / 'motochefe'

# Padr√µes de substitui√ß√£o
PADROES = [
    # Padr√£o 1: {{ "%.2f"|format(variavel) }}  ‚Üí  {{ variavel|valor_br }}
    (r'\{\{\s*"%.2f"\|format\(([^)]+?)\)\s*\}\}', r'{{ \1|valor_br }}'),

    # Padr√£o 2: {{ "%.0f"|format(variavel) }}  ‚Üí  {{ variavel|valor_br(0) }}
    (r'\{\{\s*"%.0f"\|format\(([^)]+?)\)\s*\}\}', r'{{ \1|valor_br(0) }}'),

    # Padr√£o 3: {{ "%02d"|format(variavel) }} ‚Üí MANTER (n√£o √© valor monet√°rio)
    # N√ÉO substituir padr√µes de data/n√∫mero que n√£o s√£o monet√°rios
]

def processar_arquivo(caminho):
    """Processa um arquivo HTML substituindo os padr√µes"""
    try:
        with open(caminho, 'r', encoding='utf-8') as f:
            conteudo = f.read()

        conteudo_original = conteudo
        substituicoes = 0

        for padrao, substituicao in PADROES:
            conteudo, n = re.subn(padrao, substituicao, conteudo)
            substituicoes += n

        if substituicoes > 0:
            with open(caminho, 'w', encoding='utf-8') as f:
                f.write(conteudo)
            return True, substituicoes

        return False, 0

    except Exception as e:
        print(f"‚ùå Erro ao processar {caminho}: {e}")
        return False, 0

def main():
    """Fun√ß√£o principal"""
    print("üîß Iniciando atualiza√ß√£o de formata√ß√£o de valores...\n")

    arquivos_processados = 0
    total_substituicoes = 0

    # Percorrer todos os arquivos .html no diret√≥rio motochefe
    for arquivo in TEMPLATES_DIR.rglob('*.html'):
        modificado, n_subs = processar_arquivo(arquivo)

        if modificado:
            arquivos_processados += 1
            total_substituicoes += n_subs
            caminho_relativo = arquivo.relative_to(BASE_DIR)
            print(f"‚úÖ {caminho_relativo}: {n_subs} substitui√ß√µes")

    print(f"\nüìä RESUMO:")
    print(f"   Arquivos modificados: {arquivos_processados}")
    print(f"   Total de substitui√ß√µes: {total_substituicoes}")
    print(f"\n‚úÖ Processo conclu√≠do!")

if __name__ == '__main__':
    main()
