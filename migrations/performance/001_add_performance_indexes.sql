-- Performance optimization indexes migration
-- Generated by Database Performance Analyst
-- Purpose: Add missing indexes for frequently queried columns and foreign keys

-- ============================================================
-- COTACOES TABLE INDEXES
-- ============================================================

-- Index for status filtering (frequently used in WHERE clauses)
CREATE INDEX IF NOT EXISTS idx_cotacoes_status 
ON cotacoes(status)
WHERE status IN ('pendente', 'processando', 'concluida');

-- Index for date range queries
CREATE INDEX IF NOT EXISTS idx_cotacoes_data_criacao 
ON cotacoes(data_criacao DESC);

-- Composite index for user and status queries
CREATE INDEX IF NOT EXISTS idx_cotacoes_usuario_status 
ON cotacoes(usuario_id, status)
INCLUDE (data_criacao);

-- Index for CEP-based searches
CREATE INDEX IF NOT EXISTS idx_cotacoes_cep_origem 
ON cotacoes(cep_origem);

CREATE INDEX IF NOT EXISTS idx_cotacoes_cep_destino 
ON cotacoes(cep_destino);

-- ============================================================
-- TRANSPORTADORAS TABLE INDEXES
-- ============================================================

-- Index for active transportadoras
CREATE INDEX IF NOT EXISTS idx_transportadoras_ativo 
ON transportadoras(ativo)
WHERE ativo = true;

-- Index for API configuration lookups
CREATE INDEX IF NOT EXISTS idx_transportadoras_api_config 
ON transportadoras USING gin(api_config)
WHERE api_config IS NOT NULL;

-- ============================================================
-- RESULTADOS_COTACAO TABLE INDEXES
-- ============================================================

-- Index for cotacao lookups
CREATE INDEX IF NOT EXISTS idx_resultados_cotacao_id 
ON resultados_cotacao(cotacao_id);

-- Index for transportadora lookups
CREATE INDEX IF NOT EXISTS idx_resultados_transportadora_id 
ON resultados_cotacao(transportadora_id);

-- Composite index for price comparisons
CREATE INDEX IF NOT EXISTS idx_resultados_cotacao_transportadora_valor 
ON resultados_cotacao(cotacao_id, transportadora_id, valor_total);

-- Index for delivery time queries
CREATE INDEX IF NOT EXISTS idx_resultados_prazo_entrega 
ON resultados_cotacao(prazo_entrega_dias)
WHERE sucesso = true;

-- ============================================================
-- HISTORICO_COTACOES TABLE INDEXES
-- ============================================================

-- Index for historical analysis by date
CREATE INDEX IF NOT EXISTS idx_historico_data_cotacao 
ON historico_cotacoes(data_cotacao DESC);

-- Index for route-based historical queries
CREATE INDEX IF NOT EXISTS idx_historico_rota 
ON historico_cotacoes(cep_origem, cep_destino);

-- Index for transportadora performance analysis
CREATE INDEX IF NOT EXISTS idx_historico_transportadora_sucesso 
ON historico_cotacoes(transportadora_id, sucesso)
INCLUDE (tempo_resposta_ms);

-- ============================================================
-- CARTEIRA_PEDIDOS TABLE INDEXES
-- ============================================================

-- Index for active orders
CREATE INDEX IF NOT EXISTS idx_carteira_ativo 
ON carteira_pedidos(ativo)
WHERE ativo = true;

-- Index for date range queries
CREATE INDEX IF NOT EXISTS idx_carteira_data_pedido 
ON carteira_pedidos(data_pedido DESC);

-- Index for user's active orders
CREATE INDEX IF NOT EXISTS idx_carteira_usuario_ativo 
ON carteira_pedidos(usuario_id, ativo)
INCLUDE (data_pedido, ordem_exibicao);

-- ============================================================
-- LOGS TABLE INDEXES (if exists)
-- ============================================================

-- Conditional index creation for logs table
DO $$ 
BEGIN
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'logs') THEN
        -- Index for log level filtering
        CREATE INDEX IF NOT EXISTS idx_logs_nivel 
        ON logs(nivel)
        WHERE nivel IN ('ERROR', 'WARNING');
        
        -- Index for timestamp-based queries
        CREATE INDEX IF NOT EXISTS idx_logs_timestamp 
        ON logs(timestamp DESC);
        
        -- Index for module-based filtering
        CREATE INDEX IF NOT EXISTS idx_logs_modulo 
        ON logs(modulo);
    END IF;
END $$;

-- ============================================================
-- PARTIAL INDEXES FOR COMMON QUERIES
-- ============================================================

-- Partial index for pending quotes needing processing
CREATE INDEX IF NOT EXISTS idx_cotacoes_pendentes_processamento 
ON cotacoes(data_criacao)
WHERE status = 'pendente' AND processado = false;

-- Partial index for recent successful quotes
CREATE INDEX IF NOT EXISTS idx_cotacoes_recentes_sucesso 
ON cotacoes(data_criacao DESC)
WHERE status = 'concluida' 
  AND data_criacao > CURRENT_DATE - INTERVAL '30 days';

-- ============================================================
-- STATISTICS UPDATE
-- ============================================================

-- Update table statistics for better query planning
ANALYZE cotacoes;
ANALYZE transportadoras;
ANALYZE resultados_cotacao;
ANALYZE historico_cotacoes;
ANALYZE carteira_pedidos;

-- ============================================================
-- PERFORMANCE MONITORING VIEWS
-- ============================================================

-- Create view for monitoring slow queries
CREATE OR REPLACE VIEW v_slow_queries AS
SELECT 
    query,
    calls,
    total_time / 1000.0 as total_time_seconds,
    mean_time / 1000.0 as mean_time_seconds,
    max_time / 1000.0 as max_time_seconds,
    rows
FROM pg_stat_statements
WHERE query NOT LIKE '%pg_stat_statements%'
  AND mean_time > 100  -- Queries averaging over 100ms
ORDER BY mean_time DESC
LIMIT 20;

-- Create view for index usage statistics
CREATE OR REPLACE VIEW v_index_usage AS
SELECT 
    schemaname,
    tablename,
    indexname,
    idx_scan as index_scans,
    idx_tup_read as tuples_read,
    idx_tup_fetch as tuples_fetched,
    pg_size_pretty(pg_relation_size(indexrelid)) as index_size
FROM pg_stat_user_indexes
WHERE schemaname = 'public'
ORDER BY idx_scan DESC;

-- ============================================================
-- COMMENTS
-- ============================================================

COMMENT ON INDEX idx_cotacoes_status IS 'Optimizes queries filtering by quote status';
COMMENT ON INDEX idx_cotacoes_data_criacao IS 'Optimizes date range queries and sorting';
COMMENT ON INDEX idx_cotacoes_usuario_status IS 'Optimizes user-specific quote listings';
COMMENT ON INDEX idx_resultados_cotacao_transportadora_valor IS 'Optimizes price comparison queries';
COMMENT ON INDEX idx_historico_transportadora_sucesso IS 'Optimizes carrier performance analysis';