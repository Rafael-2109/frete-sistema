"""
Script para Deletar Lotes de Comiss√£o da Importa√ß√£o Hist√≥rica

Problema:
- Lotes de comiss√£o (261 registros PAI) est√£o aparecendo no extrato
- Valor: R$ 3.545.947,68
- MAS as comiss√µes filhas (10.857) j√° existem e j√° foram contabilizadas
- Isso est√° DUPLICANDO o valor no extrato

Solu√ß√£o:
- Deletar os 261 lotes PAI (categoria='Lote Comiss√£o')
- Manter as 10.857 comiss√µes filhas (categoria='Comiss√£o')
- Atualizar as comiss√µes filhas para ficarem sem lote (movimentacao_origem_id = NULL)

IMPORTANTE:
- O saldo da empresa J√Å EST√Å CORRETO (n√£o foi afetado pelos lotes)
- Apenas o EXTRATO est√° mostrando valor errado

USO:
    python migrations/deletar_lotes_comissao_historico.py
"""
import sys
import os

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from app import create_app, db
from sqlalchemy import text
from decimal import Decimal


def main():
    app = create_app()

    with app.app_context():
        print("\n" + "=" * 120)
        print("üßπ DELETAR LOTES DE COMISS√ÉO DA IMPORTA√á√ÉO HIST√ìRICA")
        print("=" * 120)

        # 1. IDENTIFICAR LOTES
        print("\n1Ô∏è‚É£  IDENTIFICANDO LOTES DE COMISS√ÉO...")
        print("=" * 120)

        lotes = db.session.execute(text("""
            SELECT
                id,
                valor,
                data_movimentacao,
                descricao
            FROM movimentacao_financeira
            WHERE categoria = 'Lote Comiss√£o'
              AND tipo = 'PAGAMENTO'
              AND movimentacao_origem_id IS NULL
            ORDER BY id
            LIMIT 10
        """)).fetchall()

        total_lotes = db.session.execute(text("""
            SELECT COUNT(*), SUM(valor)
            FROM movimentacao_financeira
            WHERE categoria = 'Lote Comiss√£o'
              AND tipo = 'PAGAMENTO'
              AND movimentacao_origem_id IS NULL
        """)).fetchone()

        qtd_lotes = total_lotes[0]
        valor_lotes = Decimal(str(total_lotes[1] or 0))

        print(f"\n‚ö†Ô∏è  Encontrados {qtd_lotes} lotes de comiss√£o")
        print(f"   Valor total: R$ {float(valor_lotes):,.2f}\n")

        if qtd_lotes == 0:
            print("‚úÖ Nenhum lote encontrado - j√° foram deletados!")
            return

        print("   EXEMPLOS:")
        for row in lotes:
            print(f"   ID={row[0]} | Valor=R$ {float(row[1]):,.2f} | Data={row[2]} | {row[3][:60]}")

        # 2. VERIFICAR COMISS√ïES FILHAS
        print("\n2Ô∏è‚É£  VERIFICANDO COMISS√ïES FILHAS...")
        print("=" * 120)

        filhas = db.session.execute(text("""
            SELECT COUNT(*), SUM(valor)
            FROM movimentacao_financeira
            WHERE categoria = 'Comiss√£o'
              AND tipo = 'PAGAMENTO'
              AND movimentacao_origem_id IS NOT NULL
        """)).fetchone()

        qtd_filhas = filhas[0]
        valor_filhas = Decimal(str(filhas[1] or 0))

        print(f"\n   Comiss√µes filhas vinculadas aos lotes: {qtd_filhas}")
        print(f"   Valor total: R$ {float(valor_filhas):,.2f}")

        # Verificar se valor bate
        diferenca = abs(valor_lotes - valor_filhas)
        if diferenca < Decimal('1.00'):
            print(f"   ‚úÖ Valores batem! (diferen√ßa: R$ {float(diferenca):,.2f})")
        else:
            print(f"   ‚ö†Ô∏è  DIFEREN√áA: R$ {float(diferenca):,.2f}")

        # 3. CONFIRMAR
        print("\n" + "=" * 120)
        print("üìã OPERA√á√ïES QUE SER√ÉO REALIZADAS:")
        print("=" * 120)
        print(f"   1. Desvincular {qtd_filhas} comiss√µes filhas dos lotes (movimentacao_origem_id = NULL)")
        print(f"   2. Deletar {qtd_lotes} lotes de comiss√£o (categoria='Lote Comiss√£o')")
        print(f"   3. O extrato passar√° a mostrar apenas as comiss√µes individuais")
        print(f"\n   IMPACTO NO EXTRATO:")
        print(f"   - Valor ANTES (com lotes): -R$ 3.667.619,19")
        print(f"   - Valor DEPOIS (sem lotes): -R$ {float(valor_filhas + Decimal('121671.51')):,.2f}")

        print("\n‚ö†Ô∏è  VOC√ä DESEJA PROSSEGUIR?")
        confirmacao = input("Digite 'SIM' para confirmar: ").strip().upper()

        if confirmacao != 'SIM':
            print("\n‚ùå Opera√ß√£o cancelada.")
            return

        # 4. EXECUTAR
        print("\n3Ô∏è‚É£  EXECUTANDO OPERA√á√ïES...")
        print("=" * 120)

        try:
            # Desvincular comiss√µes filhas
            print("\n   Desvinculando comiss√µes filhas dos lotes...")
            db.session.execute(text("""
                UPDATE movimentacao_financeira
                SET movimentacao_origem_id = NULL
                WHERE categoria = 'Comiss√£o'
                  AND tipo = 'PAGAMENTO'
                  AND movimentacao_origem_id IS NOT NULL
            """))

            afetados = db.session.execute(text("""
                SELECT COUNT(*)
                FROM movimentacao_financeira
                WHERE categoria = 'Comiss√£o'
                  AND tipo = 'PAGAMENTO'
                  AND movimentacao_origem_id IS NULL
            """)).scalar()

            print(f"   ‚úÖ {afetados} comiss√µes desvinculadas")

            # Deletar lotes
            print("\n   Deletando lotes de comiss√£o...")
            db.session.execute(text("""
                DELETE FROM movimentacao_financeira
                WHERE categoria = 'Lote Comiss√£o'
                  AND tipo = 'PAGAMENTO'
                  AND movimentacao_origem_id IS NULL
            """))

            # Verificar
            restantes = db.session.execute(text("""
                SELECT COUNT(*)
                FROM movimentacao_financeira
                WHERE categoria = 'Lote Comiss√£o'
            """)).scalar()

            print(f"   ‚úÖ {qtd_lotes} lotes deletados (restantes: {restantes})")

            # COMMIT
            db.session.commit()

            print("\n" + "=" * 120)
            print("‚úÖ‚úÖ‚úÖ LIMPEZA CONCLU√çDA COM SUCESSO! ‚úÖ‚úÖ‚úÖ")
            print("=" * 120)
            print(f"\nüìä RESULTADO:")
            print(f"   - Lotes deletados: {qtd_lotes}")
            print(f"   - Comiss√µes individuais mantidas: {qtd_filhas}")
            print(f"   - Valor removido do extrato: R$ {float(valor_lotes):,.2f}")
            print(f"\n‚úÖ Agora o extrato deve mostrar o valor correto!")
            print(f"   Atualize a p√°gina do extrato para ver a mudan√ßa.")

        except Exception as e:
            db.session.rollback()
            print(f"\n‚ùå ERRO: {str(e)}")
            import traceback
            print(traceback.format_exc())


if __name__ == '__main__':
    main()
