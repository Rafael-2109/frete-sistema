#!/usr/bin/env python3
"""
üîç VERIFICA√á√ÉO R√ÅPIDA DO APRENDIZADO
Script simples para ver se precisa de manuten√ß√£o
"""

import os
import sys
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from sqlalchemy import text
from datetime import datetime

def verificacao_rapida():
    """Verifica√ß√£o r√°pida de 1 minuto"""
    app = create_app()
    
    with app.app_context():
        print("\nüîç VERIFICA√á√ÉO R√ÅPIDA DO APRENDIZADO")
        print("=" * 50)
        
        # 1. Taxa de erro recente
        erros = db.session.execute(text("""
            SELECT 
                COUNT(*) as total,
                SUM(CASE WHEN tipo_correcao IS NOT NULL THEN 1 ELSE 0 END) as erros
            FROM ai_learning_history
            WHERE created_at > CURRENT_DATE - INTERVAL '7 days'
        """)).first()
        
        if erros.total > 0:
            taxa_erro = (erros.erros / erros.total) * 100
            print(f"\nüìä Taxa de Erro (√∫ltima semana): {taxa_erro:.1f}%")
            
            if taxa_erro > 30:
                print("   ‚ö†Ô∏è  ALTA - Recomenda-se manuten√ß√£o!")
            elif taxa_erro > 15:
                print("   üü° M√âDIA - Monitorar")
            else:
                print("   ‚úÖ BAIXA - Sistema saud√°vel")
        
        # 2. Padr√µes problem√°ticos
        problemas = db.session.execute(text("""
            SELECT COUNT(*) as qtd
            FROM ai_knowledge_patterns
            WHERE confidence < 0.3 AND usage_count > 5
        """)).scalar()
        
        print(f"\nüö® Padr√µes Problem√°ticos: {problemas}")
        if problemas > 10:
            print("   ‚ö†Ô∏è  Executar: python manutencao_aprendizado.py limpar")
        
        # 3. Grupos n√£o validados
        grupos = db.session.execute(text("""
            SELECT COUNT(*) as qtd
            FROM ai_grupos_empresariais
            WHERE confirmado_por IS NULL
        """)).scalar()
        
        if grupos > 0:
            print(f"\nüè¢ Grupos N√£o Validados: {grupos}")
            print("   üí° Executar: python manutencao_aprendizado.py validar")
        
        # 4. Recomenda√ß√£o
        print("\n" + "=" * 50)
        if taxa_erro > 30 or problemas > 10 or grupos > 0:
            print("üîß MANUTEN√á√ÉO RECOMENDADA!")
            print("\nPr√≥ximos passos:")
            print("1. python manutencao_aprendizado.py saude")
            print("2. python manutencao_aprendizado.py limpar")
            print("3. python manutencao_aprendizado.py consolidar")
        else:
            print("‚úÖ SISTEMA SAUD√ÅVEL - Sem a√ß√£o necess√°ria")
        
        print("\nüí° Dica: Execute semanalmente para melhores resultados!")

if __name__ == "__main__":
    verificacao_rapida() 