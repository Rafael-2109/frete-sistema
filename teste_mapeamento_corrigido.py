#!/usr/bin/env python3
"""
üß™ TESTE MAPEAMENTO SEM√ÇNTICO CORRIGIDO
Verifica se corre√ß√µes foram aplicadas com sucesso
"""

import sys
import os

# Adicionar path do projeto
sys.path.insert(0, os.path.abspath('.'))

def testar_mapeamento():
    """Testa se mapeamento sem√¢ntico carrega e funciona"""
    
    print("üß™ TESTE MAPEAMENTO SEM√ÇNTICO CORRIGIDO")
    print("=" * 50)
    
    try:
        # 1. Testar import
        print("1. Testando import...")
        from app.claude_ai.mapeamento_semantico import get_mapeamento_semantico
        print("   ‚úÖ Import bem-sucedido")
        
        # 2. Testar inst√¢ncia
        print("2. Testando inst√¢ncia...")
        mapeamento = get_mapeamento_semantico()
        print("   ‚úÖ Inst√¢ncia criada")
        
        # 3. Testar campo "origem" corrigido
        print("3. Testando campo 'origem' corrigido...")
        resultado = mapeamento.mapear_termo_natural("origem")
        if resultado:
            primeiro = resultado[0]
            print(f"   ‚úÖ Campo origem mapeado para: {primeiro['modelo']}.{primeiro['campo']}")
            print(f"   üìù Observa√ß√£o: Campo agora mapeia para N√öMERO DO PEDIDO (n√£o localiza√ß√£o)")
        else:
            print("   ‚ùå Campo origem n√£o encontrado")
        
        # 4. Testar campos essenciais de EntregaMonitorada
        print("4. Testando campos essenciais EntregaMonitorada...")
        campos_essenciais = ["numero_nf", "cliente", "transportadora", "vendedor", "destino"]
        
        for campo in campos_essenciais:
            resultado = mapeamento.mapear_termo_natural(campo)
            if resultado and any(r['modelo'] == 'EntregaMonitorada' for r in resultado):
                print(f"   ‚úÖ {campo} mapeado corretamente")
            else:
                print(f"   ‚ùå {campo} N√ÉO encontrado para EntregaMonitorada")
        
        # 5. Testar novos campos de Pedidos
        print("5. Testando campos novos de Pedidos...")
        campos_pedidos = ["pallets do pedido", "protocolo", "obs do pdd", "nf no cd"]
        
        for campo in campos_pedidos:
            resultado = mapeamento.mapear_termo_natural(campo)
            if resultado and any(r['modelo'] == 'Pedido' for r in resultado):
                print(f"   ‚úÖ '{campo}' mapeado para Pedido")
            else:
                print(f"   ‚ö†Ô∏è '{campo}' n√£o encontrado")
        
        # 6. Testar consulta completa
        print("6. Testando consulta completa...")
        consulta = "buscar origem 123456"
        resultado = mapeamento.mapear_consulta_completa(consulta)
        
        print(f"   üìä Consulta: '{consulta}'")
        print(f"   üìä Mapeamentos encontrados: {len(resultado['mapeamentos_encontrados'])}")
        print(f"   üìä Modelos envolvidos: {list(resultado['modelos_envolvidos'])}")
        
        if 'RelatorioFaturamentoImportado' in resultado['modelos_envolvidos']:
            print("   ‚úÖ Campo 'origem' detectado corretamente!")
        else:
            print("   ‚ùå Campo 'origem' N√ÉO detectado")
        
        print("\n" + "=" * 50)
        print("üéâ TESTE CONCLU√çDO - MAPEAMENTO SEM√ÇNTICO FUNCIONANDO!")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå ERRO NO TESTE: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    sucesso = testar_mapeamento()
    if sucesso:
        print("\n‚úÖ TODOS OS TESTES PASSARAM!")
        sys.exit(0)
    else:
        print("\n‚ùå TESTES FALHARAM!")
        sys.exit(1) 