"""adicionar_historico_data_prevista

Revision ID: 03a18570776f
Revises: 29b64ff3c0a8
Create Date: 2025-06-16 20:39:45.368870

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '03a18570776f'
down_revision = '29b64ff3c0a8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Verifica se a tabela já existe antes de criar (PostgreSQL/SQLite compatível)
    from sqlalchemy import inspect
    
    conn = op.get_bind()
    inspector = inspect(conn)
    
    # Só cria a tabela se ela não existir
    if 'historico_data_prevista' not in inspector.get_table_names():
        op.create_table('historico_data_prevista',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('entrega_id', sa.Integer(), nullable=False),
        sa.Column('data_anterior', sa.Date(), nullable=True),
        sa.Column('data_nova', sa.Date(), nullable=False),
        sa.Column('motivo_alteracao', sa.Text(), nullable=False),
        sa.Column('alterado_por', sa.String(length=100), nullable=False),
        sa.Column('alterado_em', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['entrega_id'], ['entregas_monitoradas.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        print("✅ Tabela 'historico_data_prevista' criada com sucesso")
    else:
        print("ℹ️  Tabela 'historico_data_prevista' já existe - pulando criação")
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('historico_data_prevista')
    # ### end Alembic commands ###
