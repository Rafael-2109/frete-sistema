#!/usr/bin/env python3
"""
Script de teste para verificar o funcionamento do Claude AI Novo
"""

import os
import sys
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app import create_app

def test_claude_ai_novo():
    """Teste completo do sistema Claude AI Novo"""
    
    print("üöÄ Iniciando teste do Claude AI Novo...")
    
    # Criar contexto da aplica√ß√£o
    app = create_app()
    
    with app.app_context():
        try:
            # 1. Testar importa√ß√£o do sistema
            print("\n1Ô∏è‚É£ Testando importa√ß√£o...")
            from app.claude_ai_novo import get_claude_ai_instance
            print("   ‚úÖ Importa√ß√£o bem-sucedida")
            
            # 2. Obter inst√¢ncia
            print("\n2Ô∏è‚É£ Obtendo inst√¢ncia...")
            instance = get_claude_ai_instance()
            print(f"   ‚úÖ Inst√¢ncia criada: {type(instance)}")
            
            # 3. Verificar configura√ß√£o API
            print("\n3Ô∏è‚É£ Verificando configura√ß√£o...")
            api_key = os.getenv('ANTHROPIC_API_KEY')
            if api_key:
                print(f"   ‚úÖ API Key configurada: {api_key[:10]}...")
            else:
                print("   ‚ö†Ô∏è API Key n√£o configurada - usando fallback")
            
            # 4. Teste de consultas
            print("\n4Ô∏è‚É£ Testando consultas...")
            
            consultas_teste = [
                "Como est√£o as entregas do Atacad√£o?",
                "Quais os fretes para S√£o Paulo?",
                "Relat√≥rio de hoje",
                "Status dos pedidos",
                "Teste gen√©rico"
            ]
            
            for i, consulta in enumerate(consultas_teste, 1):
                print(f"\n   üîç Teste {i}: {consulta}")
                try:
                    resultado = instance.processar_consulta_sync(consulta)
                    
                    if isinstance(resultado, dict):
                        if resultado.get('success'):
                            resposta = resultado.get('response', 'Sem resposta')
                            print(f"   ‚úÖ Sucesso: {len(resposta)} caracteres")
                            print(f"      üìù In√≠cio: {resposta[:100]}...")
                        else:
                            print(f"   ‚ùå Erro: {resultado.get('response', 'Erro desconhecido')}")
                    else:
                        print(f"   üìù Resposta direta: {len(str(resultado))} caracteres")
                        
                except Exception as e:
                    print(f"   ‚ùå Erro na consulta: {e}")
            
            print("\nüéâ Teste conclu√≠do!")
            
        except Exception as e:
            print(f"‚ùå Erro no teste: {e}")
            import traceback
            traceback.print_exc()

if __name__ == "__main__":
    test_claude_ai_novo()