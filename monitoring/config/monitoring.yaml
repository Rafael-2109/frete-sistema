# MCP Frete Sistema - Monitoring Configuration

# Dashboard configuration
dashboard:
  host: 0.0.0.0
  port: 5001
  secret_key: ${SECRET_KEY}
  debug: false
  
# Metrics collection
metrics:
  collectors:
    system:
      enabled: true
      interval: 10  # seconds
    database:
      enabled: true
      interval: 30
    api:
      enabled: true
      interval: 10
    cache:
      enabled: true
      interval: 10
    application:
      enabled: true
      interval: 15
    custom:
      enabled: true
      interval: 5
  
  # Retention settings
  retention:
    raw_data: 24h
    aggregated_1m: 7d
    aggregated_5m: 30d
    aggregated_1h: 90d

# Alert configuration
alerts:
  # System alerts
  system:
    cpu_usage:
      warning: 70
      critical: 90
      cooldown: 300  # seconds
    memory_usage:
      warning: 80
      critical: 95
      cooldown: 300
    disk_usage:
      warning: 85
      critical: 95
      cooldown: 600
  
  # API alerts
  api:
    error_rate:
      warning: 5  # percent
      critical: 10
      cooldown: 300
    response_time_p95:
      warning: 1000  # ms
      critical: 2000
      cooldown: 300
    requests_per_minute:
      warning: 10000
      critical: 20000
      cooldown: 300
  
  # Database alerts
  database:
    connections:
      warning: 80
      critical: 95
      cooldown: 300
    query_time:
      warning: 500  # ms
      critical: 1000
      cooldown: 300
    deadlocks:
      warning: 5
      critical: 10
      cooldown: 600
  
  # Cache alerts
  cache:
    hit_rate:
      warning: 80  # percent (below this is warning)
      critical: 60  # percent (below this is critical)
      cooldown: 300
    memory_usage:
      warning: 80  # percent
      critical: 95
      cooldown: 300

# Notification channels
notifications:
  email:
    enabled: ${EMAIL_ALERTS_ENABLED:-false}
    smtp_host: ${SMTP_HOST:-localhost}
    smtp_port: ${SMTP_PORT:-587}
    smtp_user: ${SMTP_USER}
    smtp_password: ${SMTP_PASSWORD}
    use_tls: true
    from_email: ${ALERT_FROM_EMAIL:-alerts@frete-sistema.com}
    to_emails:
      - ${ALERT_TO_EMAIL_1}
      - ${ALERT_TO_EMAIL_2}
  
  slack:
    enabled: ${SLACK_ALERTS_ENABLED:-false}
    webhook_url: ${SLACK_WEBHOOK_URL}
    channel: ${SLACK_CHANNEL:-#alerts}
    username: MCP Alert Bot
  
  webhook:
    enabled: ${WEBHOOK_ALERTS_ENABLED:-false}
    webhook_url: ${ALERT_WEBHOOK_URL}
    headers:
      Authorization: Bearer ${WEBHOOK_AUTH_TOKEN}
    timeout: 30

# Prometheus exporter
prometheus:
  enabled: true
  port: 9090
  update_interval: 10
  push_gateway:
    enabled: false
    url: ${PROMETHEUS_PUSHGATEWAY_URL}
    job: mcp-frete-sistema

# Database connection
database:
  host: ${DB_HOST:-localhost}
  port: ${DB_PORT:-5432}
  database: ${DB_NAME:-frete_sistema}
  user: ${DB_USER:-postgres}
  password: ${DB_PASSWORD}
  pool_size: 5
  max_overflow: 10

# Redis connection
redis:
  host: ${REDIS_HOST:-localhost}
  port: ${REDIS_PORT:-6379}
  db: ${REDIS_DB:-0}
  password: ${REDIS_PASSWORD}
  decode_responses: true

# Logging
logging:
  level: ${LOG_LEVEL:-INFO}
  format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  file:
    enabled: true
    path: logs/monitoring.log
    max_size: 10M
    backup_count: 5

# Security
security:
  # API authentication
  api_key: ${MONITORING_API_KEY}
  # Dashboard authentication
  auth:
    enabled: ${MONITORING_AUTH_ENABLED:-true}
    users:
      - username: ${MONITORING_USER:-admin}
        password: ${MONITORING_PASSWORD}
        role: admin
  
  # CORS settings
  cors:
    enabled: true
    origins:
      - http://localhost:3000
      - http://localhost:5000
      - ${FRONTEND_URL}

# Performance tuning
performance:
  # Batch sizes
  batch_size: 1000
  # Worker threads
  worker_threads: 4
  # Queue sizes
  queue_size: 10000
  # Cache settings
  cache_ttl: 300  # seconds