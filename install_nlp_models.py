#!/usr/bin/env python3
"""
üß† INSTALADOR DE MODELOS NLP
Baixa automaticamente os modelos necess√°rios para processamento em portugu√™s
"""

import subprocess
import sys
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def instalar_modelos_nlp():
    """Instala todos os modelos necess√°rios para NLP em portugu√™s"""
    
    print("üß† Instalando modelos de NLP para portugu√™s...")
    
    # 1. Instalar modelo portugu√™s do spaCy
    try:
        logger.info("üì¶ Baixando modelo pt_core_news_sm do spaCy...")
        subprocess.check_call([sys.executable, "-m", "spacy", "download", "pt_core_news_sm"])
        logger.info("‚úÖ Modelo spaCy portugu√™s instalado com sucesso!")
    except subprocess.CalledProcessError as e:
        logger.warning(f"‚ö†Ô∏è Erro ao instalar modelo spaCy: {e}")
        logger.info("Tentando alternativa...")
        try:
            import spacy
            spacy.cli.download("pt_core_news_sm")
            logger.info("‚úÖ Modelo instalado via spacy.cli!")
        except Exception as e2:
            logger.error(f"‚ùå Falha ao instalar modelo spaCy: {e2}")
    
    # 2. Baixar recursos do NLTK
    try:
        logger.info("üì¶ Baixando recursos NLTK...")
        import nltk
        
        # Recursos essenciais para portugu√™s
        recursos = [
            'stopwords',        # Palavras comuns (de, a, o, que, etc)
            'punkt',           # Tokeniza√ß√£o de senten√ßas
            'averaged_perceptron_tagger',  # POS tagging
            'rslp'             # Stemmer portugu√™s
        ]
        
        for recurso in recursos:
            try:
                nltk.download(recurso, quiet=True)
                logger.info(f"  ‚úì {recurso} baixado")
            except Exception as e:
                logger.warning(f"  ‚úó Erro ao baixar {recurso}: {e}")
        
        logger.info("‚úÖ Recursos NLTK instalados!")
        
    except ImportError:
        logger.warning("‚ö†Ô∏è NLTK n√£o est√° instalado")
    except Exception as e:
        logger.error(f"‚ùå Erro ao instalar recursos NLTK: {e}")
    
    # 3. Verificar instala√ß√µes
    print("\nüìã Verificando instala√ß√µes...")
    
    # Testar spaCy
    try:
        import spacy
        nlp = spacy.load("pt_core_news_sm")
        doc = nlp("Teste de processamento em portugu√™s")
        logger.info(f"‚úÖ SpaCy funcionando! Tokens: {[token.text for token in doc]}")
    except Exception as e:
        logger.error(f"‚ùå SpaCy n√£o est√° funcionando: {e}")
    
    # Testar NLTK
    try:
        import nltk
        from nltk.corpus import stopwords
        stops = stopwords.words('portuguese')[:5]
        logger.info(f"‚úÖ NLTK funcionando! Stopwords: {stops}")
    except Exception as e:
        logger.error(f"‚ùå NLTK n√£o est√° funcionando: {e}")
    
    print("\n‚ú® Instala√ß√£o de modelos NLP conclu√≠da!")

if __name__ == "__main__":
    instalar_modelos_nlp() 