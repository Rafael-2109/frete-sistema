#!/usr/bin/env python3
"""
Script para adicionar campos de controle de impress√£o na tabela pedidos
Execute com: python add_print_fields_migration.py
"""

import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from sqlalchemy import text

def add_print_fields():
    """Adiciona campos de controle de impress√£o na tabela pedidos"""
    app = create_app()
    
    with app.app_context():
        print("\n" + "="*60)
        print("üîß ADICIONANDO CAMPOS DE CONTROLE DE IMPRESS√ÉO")
        print("="*60)
        
        try:
            # Verificar se os campos j√° existem
            result = db.session.execute(text("""
                SELECT column_name 
                FROM information_schema.columns 
                WHERE table_name = 'pedidos' 
                AND column_name IN ('separacao_impressa', 'separacao_impressa_em', 'separacao_impressa_por')
            """))
            
            existing_columns = [row[0] for row in result]
            
            if 'separacao_impressa' not in existing_columns:
                print("\n‚úÖ Adicionando campo 'separacao_impressa'...")
                db.session.execute(text("""
                    ALTER TABLE pedidos 
                    ADD COLUMN separacao_impressa BOOLEAN DEFAULT FALSE NOT NULL
                """))
                print("   Campo adicionado com sucesso!")
            else:
                print("\n‚ö†Ô∏è Campo 'separacao_impressa' j√° existe")
            
            if 'separacao_impressa_em' not in existing_columns:
                print("\n‚úÖ Adicionando campo 'separacao_impressa_em'...")
                db.session.execute(text("""
                    ALTER TABLE pedidos 
                    ADD COLUMN separacao_impressa_em TIMESTAMP NULL
                """))
                print("   Campo adicionado com sucesso!")
            else:
                print("\n‚ö†Ô∏è Campo 'separacao_impressa_em' j√° existe")
            
            if 'separacao_impressa_por' not in existing_columns:
                print("\n‚úÖ Adicionando campo 'separacao_impressa_por'...")
                db.session.execute(text("""
                    ALTER TABLE pedidos 
                    ADD COLUMN separacao_impressa_por VARCHAR(100) NULL
                """))
                print("   Campo adicionado com sucesso!")
            else:
                print("\n‚ö†Ô∏è Campo 'separacao_impressa_por' j√° existe")
            
            # Commit das altera√ß√µes
            db.session.commit()
            
            print("\n" + "="*60)
            print("‚úÖ MIGRA√á√ÉO CONCLU√çDA COM SUCESSO!")
            print("="*60)
            print("""
            Campos adicionados na tabela 'pedidos':
            - separacao_impressa (BOOLEAN): Indica se foi impresso
            - separacao_impressa_em (TIMESTAMP): Data/hora da impress√£o
            - separacao_impressa_por (VARCHAR): Usu√°rio que imprimiu
            
            Funcionalidades implementadas:
            1. Indicador visual ao lado de cada item no embarque
            2. Marca√ß√£o autom√°tica ao imprimir separa√ß√£o individual
            3. Marca√ß√£o autom√°tica ao imprimir completo
            4. Tooltip com informa√ß√µes de impress√£o
            """)
            
            return True
            
        except Exception as e:
            db.session.rollback()
            print(f"\n‚ùå Erro durante migra√ß√£o: {e}")
            return False

if __name__ == "__main__":
    try:
        if add_print_fields():
            sys.exit(0)
        else:
            sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå Erro fatal: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)